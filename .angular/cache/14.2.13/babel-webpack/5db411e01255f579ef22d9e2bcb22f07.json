{"ast":null,"code":"/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { ClientAuthError } from './ClientAuthError.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n */\n\nvar ClientConfigurationErrorMessage = {\n  redirectUriNotSet: {\n    code: \"redirect_uri_empty\",\n    desc: \"A redirect URI is required for all calls, and none has been set.\"\n  },\n  postLogoutUriNotSet: {\n    code: \"post_logout_uri_empty\",\n    desc: \"A post logout redirect has not been set.\"\n  },\n  claimsRequestParsingError: {\n    code: \"claims_request_parsing_error\",\n    desc: \"Could not parse the given claims request object.\"\n  },\n  authorityUriInsecure: {\n    code: \"authority_uri_insecure\",\n    desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\n  },\n  urlParseError: {\n    code: \"url_parse_error\",\n    desc: \"URL could not be parsed into appropriate segments.\"\n  },\n  urlEmptyError: {\n    code: \"empty_url_error\",\n    desc: \"URL was empty or null.\"\n  },\n  emptyScopesError: {\n    code: \"empty_input_scopes_error\",\n    desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\n  },\n  nonArrayScopesError: {\n    code: \"nonarray_input_scopes_error\",\n    desc: \"Scopes cannot be passed as non-array.\"\n  },\n  clientIdSingleScopeError: {\n    code: \"clientid_input_scopes_error\",\n    desc: \"Client ID can only be provided as a single scope.\"\n  },\n  invalidPrompt: {\n    code: \"invalid_prompt_value\",\n    desc: \"Supported prompt values are 'login', 'select_account', 'consent', 'create', 'none' and 'no_session'.  Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\"\n  },\n  invalidClaimsRequest: {\n    code: \"invalid_claims\",\n    desc: \"Given claims parameter must be a stringified JSON object.\"\n  },\n  tokenRequestEmptyError: {\n    code: \"token_request_empty\",\n    desc: \"Token request was empty and not found in cache.\"\n  },\n  logoutRequestEmptyError: {\n    code: \"logout_request_empty\",\n    desc: \"The logout request was null or undefined.\"\n  },\n  invalidCodeChallengeMethod: {\n    code: \"invalid_code_challenge_method\",\n    desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\n  },\n  invalidCodeChallengeParams: {\n    code: \"pkce_params_missing\",\n    desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\n  },\n  invalidCloudDiscoveryMetadata: {\n    code: \"invalid_cloud_discovery_metadata\",\n    desc: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\"\n  },\n  invalidAuthorityMetadata: {\n    code: \"invalid_authority_metadata\",\n    desc: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\"\n  },\n  untrustedAuthority: {\n    code: \"untrusted_authority\",\n    desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\"\n  },\n  invalidAzureCloudInstance: {\n    code: \"invalid_azure_cloud_instance\",\n    desc: \"Invalid AzureCloudInstance provided. Please refer MSAL JS docs: aks.ms/msaljs/azure_cloud_instance for valid values\"\n  },\n  missingSshJwk: {\n    code: \"missing_ssh_jwk\",\n    desc: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\"\n  },\n  missingSshKid: {\n    code: \"missing_ssh_kid\",\n    desc: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\"\n  },\n  missingNonceAuthenticationHeader: {\n    code: \"missing_nonce_authentication_header\",\n    desc: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\"\n  },\n  invalidAuthenticationHeader: {\n    code: \"invalid_authentication_header\",\n    desc: \"Invalid authentication header provided\"\n  },\n  authorityMismatch: {\n    code: \"authority_mismatch\",\n    desc: \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\"\n  }\n};\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\n\nvar ClientConfigurationError =\n/** @class */\nfunction (_super) {\n  __extends(ClientConfigurationError, _super);\n\n  function ClientConfigurationError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    _this.name = \"ClientConfigurationError\";\n    Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\n    return _this;\n  }\n  /**\r\n   * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n   */\n\n\n  ClientConfigurationError.createRedirectUriEmptyError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\n  };\n  /**\r\n   * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n   */\n\n\n  ClientConfigurationError.createPostLogoutRedirectUriEmptyError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\n  };\n  /**\r\n   * Creates an error thrown when the claims request could not be successfully parsed\r\n   */\n\n\n  ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\n  };\n  /**\r\n   * Creates an error thrown if authority uri is given an insecure protocol.\r\n   * @param urlString\r\n   */\n\n\n  ClientConfigurationError.createInsecureAuthorityUriError = function (urlString) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, ClientConfigurationErrorMessage.authorityUriInsecure.desc + \" Given URI: \" + urlString);\n  };\n  /**\r\n   * Creates an error thrown if URL string does not parse into separate segments.\r\n   * @param urlString\r\n   */\n\n\n  ClientConfigurationError.createUrlParseError = function (urlParseError) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, ClientConfigurationErrorMessage.urlParseError.desc + \" Given Error: \" + urlParseError);\n  };\n  /**\r\n   * Creates an error thrown if URL string is empty or null.\r\n   * @param urlString\r\n   */\n\n\n  ClientConfigurationError.createUrlEmptyError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\n  };\n  /**\r\n   * Error thrown when scopes are empty.\r\n   * @param scopesValue\r\n   */\n\n\n  ClientConfigurationError.createEmptyScopesArrayError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, \"\" + ClientConfigurationErrorMessage.emptyScopesError.desc);\n  };\n  /**\r\n   * Error thrown when client id scope is not provided as single scope.\r\n   * @param inputScopes\r\n   */\n\n\n  ClientConfigurationError.createClientIdSingleScopeError = function (inputScopes) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, ClientConfigurationErrorMessage.clientIdSingleScopeError.desc + \" Given Scopes: \" + inputScopes);\n  };\n  /**\r\n   * Error thrown when prompt is not an allowed type.\r\n   * @param promptValue\r\n   */\n\n\n  ClientConfigurationError.createInvalidPromptError = function (promptValue) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\n  };\n  /**\r\n   * Creates error thrown when claims parameter is not a stringified JSON object\r\n   */\n\n\n  ClientConfigurationError.createInvalidClaimsRequestError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidClaimsRequest.code, ClientConfigurationErrorMessage.invalidClaimsRequest.desc);\n  };\n  /**\r\n   * Throws error when token request is empty and nothing cached in storage.\r\n   */\n\n\n  ClientConfigurationError.createEmptyLogoutRequestError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.logoutRequestEmptyError.code, ClientConfigurationErrorMessage.logoutRequestEmptyError.desc);\n  };\n  /**\r\n   * Throws error when token request is empty and nothing cached in storage.\r\n   */\n\n\n  ClientConfigurationError.createEmptyTokenRequestError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\n  };\n  /**\r\n   * Throws error when an invalid code_challenge_method is passed by the user\r\n   */\n\n\n  ClientConfigurationError.createInvalidCodeChallengeMethodError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code, ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc);\n  };\n  /**\r\n   * Throws error when both params: code_challenge and code_challenge_method are not passed together\r\n   */\n\n\n  ClientConfigurationError.createInvalidCodeChallengeParamsError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeParams.code, ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc);\n  };\n  /**\r\n   * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n   */\n\n\n  ClientConfigurationError.createInvalidCloudDiscoveryMetadataError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\n  };\n  /**\r\n   * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n   */\n\n\n  ClientConfigurationError.createInvalidAuthorityMetadataError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadata.code, ClientConfigurationErrorMessage.invalidAuthorityMetadata.desc);\n  };\n  /**\r\n   * Throws error when provided authority is not a member of the trusted host list\r\n   */\n\n\n  ClientConfigurationError.createUntrustedAuthorityError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc);\n  };\n  /**\r\n   * Throws error when the AzureCloudInstance is set to an invalid value\r\n   */\n\n\n  ClientConfigurationError.createInvalidAzureCloudInstanceError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAzureCloudInstance.code, ClientConfigurationErrorMessage.invalidAzureCloudInstance.desc);\n  };\n  /**\r\n   * Throws an error when the authentication scheme is set to SSH but the SSH public key is omitted from the request\r\n   */\n\n\n  ClientConfigurationError.createMissingSshJwkError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshJwk.code, ClientConfigurationErrorMessage.missingSshJwk.desc);\n  };\n  /**\r\n   * Throws an error when the authentication scheme is set to SSH but the SSH public key ID is omitted from the request\r\n   */\n\n\n  ClientConfigurationError.createMissingSshKidError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshKid.code, ClientConfigurationErrorMessage.missingSshKid.desc);\n  };\n  /**\r\n   * Throws error when provided headers don't contain a header that a server nonce can be extracted from\r\n   */\n\n\n  ClientConfigurationError.createMissingNonceAuthenticationHeadersError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.code, ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.desc);\n  };\n  /**\r\n   * Throws error when a provided header is invalid in any way\r\n   */\n\n\n  ClientConfigurationError.createInvalidAuthenticationHeaderError = function (invalidHeaderName, details) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthenticationHeader.code, ClientConfigurationErrorMessage.invalidAuthenticationHeader.desc + \". Invalid header: \" + invalidHeaderName + \". Details: \" + details);\n  };\n  /**\r\n   * Create an error when the authority provided in request does not match authority provided in account or MSAL.js configuration.\r\n   */\n\n\n  ClientConfigurationError.createAuthorityMismatchError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityMismatch.code, ClientConfigurationErrorMessage.authorityMismatch.desc);\n  };\n\n  return ClientConfigurationError;\n}(ClientAuthError);\n\nexport { ClientConfigurationError, ClientConfigurationErrorMessage };","map":{"version":3,"names":["__extends","ClientAuthError","ClientConfigurationErrorMessage","redirectUriNotSet","code","desc","postLogoutUriNotSet","claimsRequestParsingError","authorityUriInsecure","urlParseError","urlEmptyError","emptyScopesError","nonArrayScopesError","clientIdSingleScopeError","invalidPrompt","invalidClaimsRequest","tokenRequestEmptyError","logoutRequestEmptyError","invalidCodeChallengeMethod","invalidCodeChallengeParams","invalidCloudDiscoveryMetadata","invalidAuthorityMetadata","untrustedAuthority","invalidAzureCloudInstance","missingSshJwk","missingSshKid","missingNonceAuthenticationHeader","invalidAuthenticationHeader","authorityMismatch","ClientConfigurationError","_super","errorCode","errorMessage","_this","call","name","Object","setPrototypeOf","prototype","createRedirectUriEmptyError","createPostLogoutRedirectUriEmptyError","createClaimsRequestParsingError","claimsRequestParseError","createInsecureAuthorityUriError","urlString","createUrlParseError","createUrlEmptyError","createEmptyScopesArrayError","createClientIdSingleScopeError","inputScopes","createInvalidPromptError","promptValue","createInvalidClaimsRequestError","createEmptyLogoutRequestError","createEmptyTokenRequestError","createInvalidCodeChallengeMethodError","createInvalidCodeChallengeParamsError","createInvalidCloudDiscoveryMetadataError","createInvalidAuthorityMetadataError","createUntrustedAuthorityError","createInvalidAzureCloudInstanceError","createMissingSshJwkError","createMissingSshKidError","createMissingNonceAuthenticationHeadersError","createInvalidAuthenticationHeaderError","invalidHeaderName","details","createAuthorityMismatchError"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-common/dist/error/ClientConfigurationError.js"],"sourcesContent":["/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { ClientAuthError } from './ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\r\n    },\r\n    urlParseError: {\r\n        code: \"url_parse_error\",\r\n        desc: \"URL could not be parsed into appropriate segments.\"\r\n    },\r\n    urlEmptyError: {\r\n        code: \"empty_url_error\",\r\n        desc: \"URL was empty or null.\"\r\n    },\r\n    emptyScopesError: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\r\n    },\r\n    nonArrayScopesError: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    clientIdSingleScopeError: {\r\n        code: \"clientid_input_scopes_error\",\r\n        desc: \"Client ID can only be provided as a single scope.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent', 'create', 'none' and 'no_session'.  Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\r\n    },\r\n    invalidClaimsRequest: {\r\n        code: \"invalid_claims\",\r\n        desc: \"Given claims parameter must be a stringified JSON object.\"\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: \"token_request_empty\",\r\n        desc: \"Token request was empty and not found in cache.\"\r\n    },\r\n    logoutRequestEmptyError: {\r\n        code: \"logout_request_empty\",\r\n        desc: \"The logout request was null or undefined.\"\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: \"invalid_code_challenge_method\",\r\n        desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: \"pkce_params_missing\",\r\n        desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\r\n    },\r\n    invalidCloudDiscoveryMetadata: {\r\n        code: \"invalid_cloud_discovery_metadata\",\r\n        desc: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\"\r\n    },\r\n    invalidAuthorityMetadata: {\r\n        code: \"invalid_authority_metadata\",\r\n        desc: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\"\r\n    },\r\n    untrustedAuthority: {\r\n        code: \"untrusted_authority\",\r\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\"\r\n    },\r\n    invalidAzureCloudInstance: {\r\n        code: \"invalid_azure_cloud_instance\",\r\n        desc: \"Invalid AzureCloudInstance provided. Please refer MSAL JS docs: aks.ms/msaljs/azure_cloud_instance for valid values\"\r\n    },\r\n    missingSshJwk: {\r\n        code: \"missing_ssh_jwk\",\r\n        desc: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\"\r\n    },\r\n    missingSshKid: {\r\n        code: \"missing_ssh_kid\",\r\n        desc: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\"\r\n    },\r\n    missingNonceAuthenticationHeader: {\r\n        code: \"missing_nonce_authentication_header\",\r\n        desc: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\"\r\n    },\r\n    invalidAuthenticationHeader: {\r\n        code: \"invalid_authentication_header\",\r\n        desc: \"Invalid authentication header provided\"\r\n    },\r\n    authorityMismatch: {\r\n        code: \"authority_mismatch\",\r\n        desc: \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    __extends(ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the claims request could not be successfully parsed\r\n     */\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority uri is given an insecure protocol.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createInsecureAuthorityUriError = function (urlString) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, ClientConfigurationErrorMessage.authorityUriInsecure.desc + \" Given URI: \" + urlString);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string does not parse into separate segments.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlParseError = function (urlParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, ClientConfigurationErrorMessage.urlParseError.desc + \" Given Error: \" + urlParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string is empty or null.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are empty.\r\n     * @param scopesValue\r\n     */\r\n    ClientConfigurationError.createEmptyScopesArrayError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, \"\" + ClientConfigurationErrorMessage.emptyScopesError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when client id scope is not provided as single scope.\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createClientIdSingleScopeError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, ClientConfigurationErrorMessage.clientIdSingleScopeError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when prompt is not an allowed type.\r\n     * @param promptValue\r\n     */\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    /**\r\n     * Creates error thrown when claims parameter is not a stringified JSON object\r\n     */\r\n    ClientConfigurationError.createInvalidClaimsRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidClaimsRequest.code, ClientConfigurationErrorMessage.invalidClaimsRequest.desc);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyLogoutRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.logoutRequestEmptyError.code, ClientConfigurationErrorMessage.logoutRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyTokenRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when an invalid code_challenge_method is passed by the user\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeMethodError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code, ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc);\r\n    };\r\n    /**\r\n     * Throws error when both params: code_challenge and code_challenge_method are not passed together\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeParamsError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeParams.code, ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createInvalidCloudDiscoveryMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createInvalidAuthorityMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadata.code, ClientConfigurationErrorMessage.invalidAuthorityMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided authority is not a member of the trusted host list\r\n     */\r\n    ClientConfigurationError.createUntrustedAuthorityError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc);\r\n    };\r\n    /**\r\n     * Throws error when the AzureCloudInstance is set to an invalid value\r\n     */\r\n    ClientConfigurationError.createInvalidAzureCloudInstanceError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAzureCloudInstance.code, ClientConfigurationErrorMessage.invalidAzureCloudInstance.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the authentication scheme is set to SSH but the SSH public key is omitted from the request\r\n     */\r\n    ClientConfigurationError.createMissingSshJwkError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshJwk.code, ClientConfigurationErrorMessage.missingSshJwk.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the authentication scheme is set to SSH but the SSH public key ID is omitted from the request\r\n     */\r\n    ClientConfigurationError.createMissingSshKidError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshKid.code, ClientConfigurationErrorMessage.missingSshKid.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided headers don't contain a header that a server nonce can be extracted from\r\n     */\r\n    ClientConfigurationError.createMissingNonceAuthenticationHeadersError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.code, ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.desc);\r\n    };\r\n    /**\r\n     * Throws error when a provided header is invalid in any way\r\n     */\r\n    ClientConfigurationError.createInvalidAuthenticationHeaderError = function (invalidHeaderName, details) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthenticationHeader.code, ClientConfigurationErrorMessage.invalidAuthenticationHeader.desc + \". Invalid header: \" + invalidHeaderName + \". Details: \" + details);\r\n    };\r\n    /**\r\n     * Create an error when the authority provided in request does not match authority provided in account or MSAL.js configuration.\r\n     */\r\n    ClientConfigurationError.createAuthorityMismatchError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityMismatch.code, ClientConfigurationErrorMessage.authorityMismatch.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(ClientAuthError));\n\nexport { ClientConfigurationError, ClientConfigurationErrorMessage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}