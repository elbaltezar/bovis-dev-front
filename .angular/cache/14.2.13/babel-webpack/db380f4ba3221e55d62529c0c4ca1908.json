{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { Constants } from '@azure/msal-common';\nimport { BrowserStringUtils } from '../utils/BrowserStringUtils.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\n\nvar Base64Decode =\n/** @class */\nfunction () {\n  function Base64Decode() {}\n  /**\r\n   * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n   * @param input\r\n   */\n\n\n  Base64Decode.prototype.decode = function (input) {\n    var encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\n\n    switch (encodedString.length % 4) {\n      case 0:\n        break;\n\n      case 2:\n        encodedString += \"==\";\n        break;\n\n      case 3:\n        encodedString += \"=\";\n        break;\n\n      default:\n        throw new Error(\"Invalid base64 string\");\n    }\n\n    var inputUtf8Arr = this.base64DecToArr(encodedString);\n    return BrowserStringUtils.utf8ArrToString(inputUtf8Arr);\n  };\n  /**\r\n   * Decodes base64 into Uint8Array\r\n   * @param base64String\r\n   * @param nBlockSize\r\n   */\n\n\n  Base64Decode.prototype.base64DecToArr = function (base64String, nBlockSize) {\n    var sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, Constants.EMPTY_STRING);\n    var nInLen = sB64Enc.length;\n    var nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\n    var aBytes = new Uint8Array(nOutLen);\n\n    for (var nMod3 = void 0, nMod4 = void 0, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n      nMod4 = nInIdx & 3;\n      nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\n\n      if (nMod4 === 3 || nInLen - nInIdx === 1) {\n        for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n          aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\n        }\n\n        nUint24 = 0;\n      }\n    }\n\n    return aBytes;\n  };\n  /**\r\n   * Base64 string to array decoding helper\r\n   * @param charNum\r\n   */\n\n\n  Base64Decode.prototype.b64ToUint6 = function (charNum) {\n    return charNum > 64 && charNum < 91 ? charNum - 65 : charNum > 96 && charNum < 123 ? charNum - 71 : charNum > 47 && charNum < 58 ? charNum + 4 : charNum === 43 ? 62 : charNum === 47 ? 63 : 0;\n  };\n\n  return Base64Decode;\n}();\n\nexport { Base64Decode };","map":{"version":3,"names":["Constants","BrowserStringUtils","Base64Decode","prototype","decode","input","encodedString","replace","length","Error","inputUtf8Arr","base64DecToArr","utf8ArrToString","base64String","nBlockSize","sB64Enc","EMPTY_STRING","nInLen","nOutLen","Math","ceil","aBytes","Uint8Array","nMod3","nMod4","nUint24","nOutIdx","nInIdx","b64ToUint6","charCodeAt","charNum"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/encode/Base64Decode.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\nimport { Constants } from '@azure/msal-common';\nimport { BrowserStringUtils } from '../utils/BrowserStringUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar Base64Decode = /** @class */ (function () {\r\n    function Base64Decode() {\r\n    }\r\n    /**\r\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n     * @param input\r\n     */\r\n    Base64Decode.prototype.decode = function (input) {\r\n        var encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        switch (encodedString.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                encodedString += \"==\";\r\n                break;\r\n            case 3:\r\n                encodedString += \"=\";\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid base64 string\");\r\n        }\r\n        var inputUtf8Arr = this.base64DecToArr(encodedString);\r\n        return BrowserStringUtils.utf8ArrToString(inputUtf8Arr);\r\n    };\r\n    /**\r\n     * Decodes base64 into Uint8Array\r\n     * @param base64String\r\n     * @param nBlockSize\r\n     */\r\n    Base64Decode.prototype.base64DecToArr = function (base64String, nBlockSize) {\r\n        var sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, Constants.EMPTY_STRING);\r\n        var nInLen = sB64Enc.length;\r\n        var nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\r\n        var aBytes = new Uint8Array(nOutLen);\r\n        for (var nMod3 = void 0, nMod4 = void 0, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\r\n            nMod4 = nInIdx & 3;\r\n            nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\r\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\r\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\r\n                    aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\r\n                }\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n        return aBytes;\r\n    };\r\n    /**\r\n     * Base64 string to array decoding helper\r\n     * @param charNum\r\n     */\r\n    Base64Decode.prototype.b64ToUint6 = function (charNum) {\r\n        return charNum > 64 && charNum < 91 ?\r\n            charNum - 65\r\n            : charNum > 96 && charNum < 123 ?\r\n                charNum - 71\r\n                : charNum > 47 && charNum < 58 ?\r\n                    charNum + 4\r\n                    : charNum === 43 ?\r\n                        62\r\n                        : charNum === 47 ?\r\n                            63\r\n                            :\r\n                                0;\r\n    };\r\n    return Base64Decode;\r\n}());\n\nexport { Base64Decode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}