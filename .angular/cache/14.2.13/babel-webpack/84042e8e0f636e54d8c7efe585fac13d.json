{"ast":null,"code":"/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\n\nimport { __spreadArrays } from '../_virtual/_tslib.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar Constants = {\n  LIBRARY_NAME: \"MSAL.JS\",\n  SKU: \"msal.js.common\",\n  // Prefix for all library cache entries\n  CACHE_PREFIX: \"msal\",\n  // default authority\n  DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n  DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n  DEFAULT_COMMON_TENANT: \"common\",\n  // ADFS String\n  ADFS: \"adfs\",\n  DSTS: \"dstsv2\",\n  // Default AAD Instance Discovery Endpoint\n  AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n  // CIAM URL\n  CIAM_AUTH_URL: \".ciamlogin.com\",\n  AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\n  // Resource delimiter - used for certain cache entries\n  RESOURCE_DELIM: \"|\",\n  // Placeholder for non-existent account ids/objects\n  NO_ACCOUNT: \"NO_ACCOUNT\",\n  // Claims\n  CLAIMS: \"claims\",\n  // Consumer UTID\n  CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n  // Default scopes\n  OPENID_SCOPE: \"openid\",\n  PROFILE_SCOPE: \"profile\",\n  OFFLINE_ACCESS_SCOPE: \"offline_access\",\n  EMAIL_SCOPE: \"email\",\n  // Default response type for authorization code flow\n  CODE_RESPONSE_TYPE: \"code\",\n  CODE_GRANT_TYPE: \"authorization_code\",\n  RT_GRANT_TYPE: \"refresh_token\",\n  FRAGMENT_RESPONSE_MODE: \"fragment\",\n  S256_CODE_CHALLENGE_METHOD: \"S256\",\n  URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n  AUTHORIZATION_PENDING: \"authorization_pending\",\n  NOT_DEFINED: \"not_defined\",\n  EMPTY_STRING: \"\",\n  NOT_APPLICABLE: \"N/A\",\n  FORWARD_SLASH: \"/\",\n  IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n  IMDS_VERSION: \"2020-06-01\",\n  IMDS_TIMEOUT: 2000,\n  AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n  REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n  REGIONAL_AUTH_NON_MSI_QUERY_STRING: \"allowestsrnonmsi=true\",\n  KNOWN_PUBLIC_CLOUDS: [\"login.microsoftonline.com\", \"login.windows.net\", \"login.microsoft.com\", \"sts.windows.net\"],\n  TOKEN_RESPONSE_TYPE: \"token\",\n  ID_TOKEN_RESPONSE_TYPE: \"id_token\",\n  SHR_NONCE_VALIDITY: 240,\n  INVALID_INSTANCE: \"invalid_instance\"\n};\nvar OIDC_DEFAULT_SCOPES = [Constants.OPENID_SCOPE, Constants.PROFILE_SCOPE, Constants.OFFLINE_ACCESS_SCOPE];\n\nvar OIDC_SCOPES = __spreadArrays(OIDC_DEFAULT_SCOPES, [Constants.EMAIL_SCOPE]);\n/**\r\n * Request header names\r\n */\n\n\nvar HeaderNames;\n\n(function (HeaderNames) {\n  HeaderNames[\"CONTENT_TYPE\"] = \"Content-Type\";\n  HeaderNames[\"RETRY_AFTER\"] = \"Retry-After\";\n  HeaderNames[\"CCS_HEADER\"] = \"X-AnchorMailbox\";\n  HeaderNames[\"WWWAuthenticate\"] = \"WWW-Authenticate\";\n  HeaderNames[\"AuthenticationInfo\"] = \"Authentication-Info\";\n  HeaderNames[\"X_MS_REQUEST_ID\"] = \"x-ms-request-id\";\n  HeaderNames[\"X_MS_HTTP_VERSION\"] = \"x-ms-httpver\";\n})(HeaderNames || (HeaderNames = {}));\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\n\n\nvar PersistentCacheKeys;\n\n(function (PersistentCacheKeys) {\n  PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\n  PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\n  PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\n  PersistentCacheKeys[\"ERROR\"] = \"error\";\n  PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\n  PersistentCacheKeys[\"ACTIVE_ACCOUNT\"] = \"active-account\";\n  PersistentCacheKeys[\"ACTIVE_ACCOUNT_FILTERS\"] = \"active-account-filters\"; // new cache entry for active_account for a more robust version for browser\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\n/**\r\n * String constants related to AAD Authority\r\n */\n\n\nvar AADAuthorityConstants;\n\n(function (AADAuthorityConstants) {\n  AADAuthorityConstants[\"COMMON\"] = \"common\";\n  AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\n  AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\n})(AADAuthorityConstants || (AADAuthorityConstants = {}));\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\n\n\nvar AADServerParamKeys;\n\n(function (AADServerParamKeys) {\n  AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\n  AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\n  AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\n  AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\n  AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\n  AADServerParamKeys[\"CLAIMS\"] = \"claims\";\n  AADServerParamKeys[\"SCOPE\"] = \"scope\";\n  AADServerParamKeys[\"ERROR\"] = \"error\";\n  AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\n  AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\n  AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\n  AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\n  AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\n  AADServerParamKeys[\"STATE\"] = \"state\";\n  AADServerParamKeys[\"NONCE\"] = \"nonce\";\n  AADServerParamKeys[\"PROMPT\"] = \"prompt\";\n  AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\n  AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\n  AADServerParamKeys[\"CODE\"] = \"code\";\n  AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\n  AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\n  AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\n  AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\n  AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\n  AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-VER\";\n  AADServerParamKeys[\"X_CLIENT_OS\"] = \"x-client-OS\";\n  AADServerParamKeys[\"X_CLIENT_CPU\"] = \"x-client-CPU\";\n  AADServerParamKeys[\"X_CLIENT_CURR_TELEM\"] = \"x-client-current-telemetry\";\n  AADServerParamKeys[\"X_CLIENT_LAST_TELEM\"] = \"x-client-last-telemetry\";\n  AADServerParamKeys[\"X_MS_LIB_CAPABILITY\"] = \"x-ms-lib-capability\";\n  AADServerParamKeys[\"X_APP_NAME\"] = \"x-app-name\";\n  AADServerParamKeys[\"X_APP_VER\"] = \"x-app-ver\";\n  AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\n  AADServerParamKeys[\"ID_TOKEN_HINT\"] = \"id_token_hint\";\n  AADServerParamKeys[\"DEVICE_CODE\"] = \"device_code\";\n  AADServerParamKeys[\"CLIENT_SECRET\"] = \"client_secret\";\n  AADServerParamKeys[\"CLIENT_ASSERTION\"] = \"client_assertion\";\n  AADServerParamKeys[\"CLIENT_ASSERTION_TYPE\"] = \"client_assertion_type\";\n  AADServerParamKeys[\"TOKEN_TYPE\"] = \"token_type\";\n  AADServerParamKeys[\"REQ_CNF\"] = \"req_cnf\";\n  AADServerParamKeys[\"OBO_ASSERTION\"] = \"assertion\";\n  AADServerParamKeys[\"REQUESTED_TOKEN_USE\"] = \"requested_token_use\";\n  AADServerParamKeys[\"ON_BEHALF_OF\"] = \"on_behalf_of\";\n  AADServerParamKeys[\"FOCI\"] = \"foci\";\n  AADServerParamKeys[\"CCS_HEADER\"] = \"X-AnchorMailbox\";\n  AADServerParamKeys[\"RETURN_SPA_CODE\"] = \"return_spa_code\";\n  AADServerParamKeys[\"NATIVE_BROKER\"] = \"nativebroker\";\n  AADServerParamKeys[\"LOGOUT_HINT\"] = \"logout_hint\";\n})(AADServerParamKeys || (AADServerParamKeys = {}));\n/**\r\n * Claims request keys\r\n */\n\n\nvar ClaimsRequestKeys;\n\n(function (ClaimsRequestKeys) {\n  ClaimsRequestKeys[\"ACCESS_TOKEN\"] = \"access_token\";\n  ClaimsRequestKeys[\"XMS_CC\"] = \"xms_cc\";\n})(ClaimsRequestKeys || (ClaimsRequestKeys = {}));\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\n\n\nvar PromptValue = {\n  LOGIN: \"login\",\n  SELECT_ACCOUNT: \"select_account\",\n  CONSENT: \"consent\",\n  NONE: \"none\",\n  CREATE: \"create\",\n  NO_SESSION: \"no_session\"\n};\n/**\r\n * SSO Types - generated to populate hints\r\n */\n\nvar SSOTypes;\n\n(function (SSOTypes) {\n  SSOTypes[\"ACCOUNT\"] = \"account\";\n  SSOTypes[\"SID\"] = \"sid\";\n  SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\n  SSOTypes[\"ID_TOKEN\"] = \"id_token\";\n  SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\n  SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\n  SSOTypes[\"CONSUMERS\"] = \"consumers\";\n  SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\n  SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\n})(SSOTypes || (SSOTypes = {}));\n/**\r\n * allowed values for codeVerifier\r\n */\n\n\nvar CodeChallengeMethodValues = {\n  PLAIN: \"plain\",\n  S256: \"S256\"\n};\n/**\r\n * allowed values for response_mode\r\n */\n\nvar ResponseMode;\n\n(function (ResponseMode) {\n  ResponseMode[\"QUERY\"] = \"query\";\n  ResponseMode[\"FRAGMENT\"] = \"fragment\";\n  ResponseMode[\"FORM_POST\"] = \"form_post\";\n})(ResponseMode || (ResponseMode = {}));\n/**\r\n * allowed grant_type\r\n */\n\n\nvar GrantType;\n\n(function (GrantType) {\n  GrantType[\"IMPLICIT_GRANT\"] = \"implicit\";\n  GrantType[\"AUTHORIZATION_CODE_GRANT\"] = \"authorization_code\";\n  GrantType[\"CLIENT_CREDENTIALS_GRANT\"] = \"client_credentials\";\n  GrantType[\"RESOURCE_OWNER_PASSWORD_GRANT\"] = \"password\";\n  GrantType[\"REFRESH_TOKEN_GRANT\"] = \"refresh_token\";\n  GrantType[\"DEVICE_CODE_GRANT\"] = \"device_code\";\n  GrantType[\"JWT_BEARER\"] = \"urn:ietf:params:oauth:grant-type:jwt-bearer\";\n})(GrantType || (GrantType = {}));\n/**\r\n * Account types in Cache\r\n */\n\n\nvar CacheAccountType;\n\n(function (CacheAccountType) {\n  CacheAccountType[\"MSSTS_ACCOUNT_TYPE\"] = \"MSSTS\";\n  CacheAccountType[\"ADFS_ACCOUNT_TYPE\"] = \"ADFS\";\n  CacheAccountType[\"MSAV1_ACCOUNT_TYPE\"] = \"MSA\";\n  CacheAccountType[\"GENERIC_ACCOUNT_TYPE\"] = \"Generic\"; // NTLM, Kerberos, FBA, Basic etc\n})(CacheAccountType || (CacheAccountType = {}));\n/**\r\n * Separators used in cache\r\n */\n\n\nvar Separators;\n\n(function (Separators) {\n  Separators[\"CACHE_KEY_SEPARATOR\"] = \"-\";\n  Separators[\"CLIENT_INFO_SEPARATOR\"] = \".\";\n})(Separators || (Separators = {}));\n/**\r\n * Credential Type stored in the cache\r\n */\n\n\nvar CredentialType;\n\n(function (CredentialType) {\n  CredentialType[\"ID_TOKEN\"] = \"IdToken\";\n  CredentialType[\"ACCESS_TOKEN\"] = \"AccessToken\";\n  CredentialType[\"ACCESS_TOKEN_WITH_AUTH_SCHEME\"] = \"AccessToken_With_AuthScheme\";\n  CredentialType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\n})(CredentialType || (CredentialType = {}));\n/**\r\n * Combine all cache types\r\n */\n\n\nvar CacheType;\n\n(function (CacheType) {\n  CacheType[CacheType[\"ADFS\"] = 1001] = \"ADFS\";\n  CacheType[CacheType[\"MSA\"] = 1002] = \"MSA\";\n  CacheType[CacheType[\"MSSTS\"] = 1003] = \"MSSTS\";\n  CacheType[CacheType[\"GENERIC\"] = 1004] = \"GENERIC\";\n  CacheType[CacheType[\"ACCESS_TOKEN\"] = 2001] = \"ACCESS_TOKEN\";\n  CacheType[CacheType[\"REFRESH_TOKEN\"] = 2002] = \"REFRESH_TOKEN\";\n  CacheType[CacheType[\"ID_TOKEN\"] = 2003] = \"ID_TOKEN\";\n  CacheType[CacheType[\"APP_METADATA\"] = 3001] = \"APP_METADATA\";\n  CacheType[CacheType[\"UNDEFINED\"] = 9999] = \"UNDEFINED\";\n})(CacheType || (CacheType = {}));\n/**\r\n * More Cache related constants\r\n */\n\n\nvar APP_METADATA = \"appmetadata\";\nvar CLIENT_INFO = \"client_info\";\nvar THE_FAMILY_ID = \"1\";\nvar AUTHORITY_METADATA_CONSTANTS = {\n  CACHE_KEY: \"authority-metadata\",\n  REFRESH_TIME_SECONDS: 3600 * 24 // 24 Hours\n\n};\nvar AuthorityMetadataSource;\n\n(function (AuthorityMetadataSource) {\n  AuthorityMetadataSource[\"CONFIG\"] = \"config\";\n  AuthorityMetadataSource[\"CACHE\"] = \"cache\";\n  AuthorityMetadataSource[\"NETWORK\"] = \"network\";\n  AuthorityMetadataSource[\"HARDCODED_VALUES\"] = \"hardcoded_values\";\n})(AuthorityMetadataSource || (AuthorityMetadataSource = {}));\n\nvar SERVER_TELEM_CONSTANTS = {\n  SCHEMA_VERSION: 5,\n  MAX_CUR_HEADER_BYTES: 80,\n  MAX_LAST_HEADER_BYTES: 330,\n  MAX_CACHED_ERRORS: 50,\n  CACHE_KEY: \"server-telemetry\",\n  CATEGORY_SEPARATOR: \"|\",\n  VALUE_SEPARATOR: \",\",\n  OVERFLOW_TRUE: \"1\",\n  OVERFLOW_FALSE: \"0\",\n  UNKNOWN_ERROR: \"unknown_error\"\n};\n/**\r\n * Type of the authentication request\r\n */\n\nvar AuthenticationScheme;\n\n(function (AuthenticationScheme) {\n  AuthenticationScheme[\"BEARER\"] = \"Bearer\";\n  AuthenticationScheme[\"POP\"] = \"pop\";\n  AuthenticationScheme[\"SSH\"] = \"ssh-cert\";\n})(AuthenticationScheme || (AuthenticationScheme = {}));\n/**\r\n * Constants related to throttling\r\n */\n\n\nvar ThrottlingConstants = {\n  // Default time to throttle RequestThumbprint in seconds\n  DEFAULT_THROTTLE_TIME_SECONDS: 60,\n  // Default maximum time to throttle in seconds, overrides what the server sends back\n  DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n  // Prefix for storing throttling entries\n  THROTTLING_PREFIX: \"throttling\",\n  // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n  X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\"\n};\nvar Errors = {\n  INVALID_GRANT_ERROR: \"invalid_grant\",\n  CLIENT_MISMATCH_ERROR: \"client_mismatch\"\n};\n/**\r\n * Password grant parameters\r\n */\n\nvar PasswordGrantConstants;\n\n(function (PasswordGrantConstants) {\n  PasswordGrantConstants[\"username\"] = \"username\";\n  PasswordGrantConstants[\"password\"] = \"password\";\n})(PasswordGrantConstants || (PasswordGrantConstants = {}));\n/**\r\n * Response codes\r\n */\n\n\nvar ResponseCodes;\n\n(function (ResponseCodes) {\n  ResponseCodes[ResponseCodes[\"httpSuccess\"] = 200] = \"httpSuccess\";\n  ResponseCodes[ResponseCodes[\"httpBadRequest\"] = 400] = \"httpBadRequest\";\n})(ResponseCodes || (ResponseCodes = {}));\n/**\r\n * Region Discovery Sources\r\n */\n\n\nvar RegionDiscoverySources;\n\n(function (RegionDiscoverySources) {\n  RegionDiscoverySources[\"FAILED_AUTO_DETECTION\"] = \"1\";\n  RegionDiscoverySources[\"INTERNAL_CACHE\"] = \"2\";\n  RegionDiscoverySources[\"ENVIRONMENT_VARIABLE\"] = \"3\";\n  RegionDiscoverySources[\"IMDS\"] = \"4\";\n})(RegionDiscoverySources || (RegionDiscoverySources = {}));\n/**\r\n * Region Discovery Outcomes\r\n */\n\n\nvar RegionDiscoveryOutcomes;\n\n(function (RegionDiscoveryOutcomes) {\n  RegionDiscoveryOutcomes[\"CONFIGURED_MATCHES_DETECTED\"] = \"1\";\n  RegionDiscoveryOutcomes[\"CONFIGURED_NO_AUTO_DETECTION\"] = \"2\";\n  RegionDiscoveryOutcomes[\"CONFIGURED_NOT_DETECTED\"] = \"3\";\n  RegionDiscoveryOutcomes[\"AUTO_DETECTION_REQUESTED_SUCCESSFUL\"] = \"4\";\n  RegionDiscoveryOutcomes[\"AUTO_DETECTION_REQUESTED_FAILED\"] = \"5\";\n})(RegionDiscoveryOutcomes || (RegionDiscoveryOutcomes = {}));\n\nvar CacheOutcome;\n\n(function (CacheOutcome) {\n  CacheOutcome[\"NO_CACHE_HIT\"] = \"0\";\n  CacheOutcome[\"FORCE_REFRESH\"] = \"1\";\n  CacheOutcome[\"NO_CACHED_ACCESS_TOKEN\"] = \"2\";\n  CacheOutcome[\"CACHED_ACCESS_TOKEN_EXPIRED\"] = \"3\";\n  CacheOutcome[\"REFRESH_CACHED_ACCESS_TOKEN\"] = \"4\";\n  CacheOutcome[\"CLAIMS_REQUESTED_CACHE_SKIPPED\"] = \"5\";\n})(CacheOutcome || (CacheOutcome = {}));\n\nvar JsonTypes;\n\n(function (JsonTypes) {\n  JsonTypes[\"Jwt\"] = \"JWT\";\n  JsonTypes[\"Jwk\"] = \"JWK\";\n  JsonTypes[\"Pop\"] = \"pop\";\n})(JsonTypes || (JsonTypes = {}));\n\nvar ONE_DAY_IN_MS = 86400000;\nexport { AADAuthorityConstants, AADServerParamKeys, APP_METADATA, AUTHORITY_METADATA_CONSTANTS, AuthenticationScheme, AuthorityMetadataSource, CLIENT_INFO, CacheAccountType, CacheOutcome, CacheType, ClaimsRequestKeys, CodeChallengeMethodValues, Constants, CredentialType, Errors, GrantType, HeaderNames, JsonTypes, OIDC_DEFAULT_SCOPES, OIDC_SCOPES, ONE_DAY_IN_MS, PasswordGrantConstants, PersistentCacheKeys, PromptValue, RegionDiscoveryOutcomes, RegionDiscoverySources, ResponseCodes, ResponseMode, SERVER_TELEM_CONSTANTS, SSOTypes, Separators, THE_FAMILY_ID, ThrottlingConstants };","map":{"version":3,"names":["__spreadArrays","Constants","LIBRARY_NAME","SKU","CACHE_PREFIX","DEFAULT_AUTHORITY","DEFAULT_AUTHORITY_HOST","DEFAULT_COMMON_TENANT","ADFS","DSTS","AAD_INSTANCE_DISCOVERY_ENDPT","CIAM_AUTH_URL","AAD_TENANT_DOMAIN_SUFFIX","RESOURCE_DELIM","NO_ACCOUNT","CLAIMS","CONSUMER_UTID","OPENID_SCOPE","PROFILE_SCOPE","OFFLINE_ACCESS_SCOPE","EMAIL_SCOPE","CODE_RESPONSE_TYPE","CODE_GRANT_TYPE","RT_GRANT_TYPE","FRAGMENT_RESPONSE_MODE","S256_CODE_CHALLENGE_METHOD","URL_FORM_CONTENT_TYPE","AUTHORIZATION_PENDING","NOT_DEFINED","EMPTY_STRING","NOT_APPLICABLE","FORWARD_SLASH","IMDS_ENDPOINT","IMDS_VERSION","IMDS_TIMEOUT","AZURE_REGION_AUTO_DISCOVER_FLAG","REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX","REGIONAL_AUTH_NON_MSI_QUERY_STRING","KNOWN_PUBLIC_CLOUDS","TOKEN_RESPONSE_TYPE","ID_TOKEN_RESPONSE_TYPE","SHR_NONCE_VALIDITY","INVALID_INSTANCE","OIDC_DEFAULT_SCOPES","OIDC_SCOPES","HeaderNames","PersistentCacheKeys","AADAuthorityConstants","AADServerParamKeys","ClaimsRequestKeys","PromptValue","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","CREATE","NO_SESSION","SSOTypes","CodeChallengeMethodValues","PLAIN","S256","ResponseMode","GrantType","CacheAccountType","Separators","CredentialType","CacheType","APP_METADATA","CLIENT_INFO","THE_FAMILY_ID","AUTHORITY_METADATA_CONSTANTS","CACHE_KEY","REFRESH_TIME_SECONDS","AuthorityMetadataSource","SERVER_TELEM_CONSTANTS","SCHEMA_VERSION","MAX_CUR_HEADER_BYTES","MAX_LAST_HEADER_BYTES","MAX_CACHED_ERRORS","CATEGORY_SEPARATOR","VALUE_SEPARATOR","OVERFLOW_TRUE","OVERFLOW_FALSE","UNKNOWN_ERROR","AuthenticationScheme","ThrottlingConstants","DEFAULT_THROTTLE_TIME_SECONDS","DEFAULT_MAX_THROTTLE_TIME_SECONDS","THROTTLING_PREFIX","X_MS_LIB_CAPABILITY_VALUE","Errors","INVALID_GRANT_ERROR","CLIENT_MISMATCH_ERROR","PasswordGrantConstants","ResponseCodes","RegionDiscoverySources","RegionDiscoveryOutcomes","CacheOutcome","JsonTypes","ONE_DAY_IN_MS"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-common/dist/utils/Constants.js"],"sourcesContent":["/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\nimport { __spreadArrays } from '../_virtual/_tslib.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\r\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\r\n    DEFAULT_COMMON_TENANT: \"common\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    DSTS: \"dstsv2\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\r\n    // CIAM URL\r\n    CIAM_AUTH_URL: \".ciamlogin.com\",\r\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    EMAIL_SCOPE: \"email\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    NOT_DEFINED: \"not_defined\",\r\n    EMPTY_STRING: \"\",\r\n    NOT_APPLICABLE: \"N/A\",\r\n    FORWARD_SLASH: \"/\",\r\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\r\n    IMDS_VERSION: \"2020-06-01\",\r\n    IMDS_TIMEOUT: 2000,\r\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\r\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\r\n    REGIONAL_AUTH_NON_MSI_QUERY_STRING: \"allowestsrnonmsi=true\",\r\n    KNOWN_PUBLIC_CLOUDS: [\"login.microsoftonline.com\", \"login.windows.net\", \"login.microsoft.com\", \"sts.windows.net\"],\r\n    TOKEN_RESPONSE_TYPE: \"token\",\r\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\r\n    SHR_NONCE_VALIDITY: 240,\r\n    INVALID_INSTANCE: \"invalid_instance\",\r\n};\r\nvar OIDC_DEFAULT_SCOPES = [\r\n    Constants.OPENID_SCOPE,\r\n    Constants.PROFILE_SCOPE,\r\n    Constants.OFFLINE_ACCESS_SCOPE\r\n];\r\nvar OIDC_SCOPES = __spreadArrays(OIDC_DEFAULT_SCOPES, [\r\n    Constants.EMAIL_SCOPE\r\n]);\r\n/**\r\n * Request header names\r\n */\r\nvar HeaderNames;\r\n(function (HeaderNames) {\r\n    HeaderNames[\"CONTENT_TYPE\"] = \"Content-Type\";\r\n    HeaderNames[\"RETRY_AFTER\"] = \"Retry-After\";\r\n    HeaderNames[\"CCS_HEADER\"] = \"X-AnchorMailbox\";\r\n    HeaderNames[\"WWWAuthenticate\"] = \"WWW-Authenticate\";\r\n    HeaderNames[\"AuthenticationInfo\"] = \"Authentication-Info\";\r\n    HeaderNames[\"X_MS_REQUEST_ID\"] = \"x-ms-request-id\";\r\n    HeaderNames[\"X_MS_HTTP_VERSION\"] = \"x-ms-httpver\";\r\n})(HeaderNames || (HeaderNames = {}));\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nvar PersistentCacheKeys;\r\n(function (PersistentCacheKeys) {\r\n    PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\r\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\r\n    PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\r\n    PersistentCacheKeys[\"ERROR\"] = \"error\";\r\n    PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\r\n    PersistentCacheKeys[\"ACTIVE_ACCOUNT\"] = \"active-account\";\r\n    PersistentCacheKeys[\"ACTIVE_ACCOUNT_FILTERS\"] = \"active-account-filters\"; // new cache entry for active_account for a more robust version for browser\r\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nvar AADAuthorityConstants;\r\n(function (AADAuthorityConstants) {\r\n    AADAuthorityConstants[\"COMMON\"] = \"common\";\r\n    AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\r\n    AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\r\n})(AADAuthorityConstants || (AADAuthorityConstants = {}));\r\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\r\nvar AADServerParamKeys;\r\n(function (AADServerParamKeys) {\r\n    AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\r\n    AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\r\n    AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\r\n    AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\r\n    AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\r\n    AADServerParamKeys[\"CLAIMS\"] = \"claims\";\r\n    AADServerParamKeys[\"SCOPE\"] = \"scope\";\r\n    AADServerParamKeys[\"ERROR\"] = \"error\";\r\n    AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\r\n    AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\r\n    AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\r\n    AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\r\n    AADServerParamKeys[\"STATE\"] = \"state\";\r\n    AADServerParamKeys[\"NONCE\"] = \"nonce\";\r\n    AADServerParamKeys[\"PROMPT\"] = \"prompt\";\r\n    AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\r\n    AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\r\n    AADServerParamKeys[\"CODE\"] = \"code\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\r\n    AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\r\n    AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\r\n    AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\r\n    AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-VER\";\r\n    AADServerParamKeys[\"X_CLIENT_OS\"] = \"x-client-OS\";\r\n    AADServerParamKeys[\"X_CLIENT_CPU\"] = \"x-client-CPU\";\r\n    AADServerParamKeys[\"X_CLIENT_CURR_TELEM\"] = \"x-client-current-telemetry\";\r\n    AADServerParamKeys[\"X_CLIENT_LAST_TELEM\"] = \"x-client-last-telemetry\";\r\n    AADServerParamKeys[\"X_MS_LIB_CAPABILITY\"] = \"x-ms-lib-capability\";\r\n    AADServerParamKeys[\"X_APP_NAME\"] = \"x-app-name\";\r\n    AADServerParamKeys[\"X_APP_VER\"] = \"x-app-ver\";\r\n    AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\r\n    AADServerParamKeys[\"ID_TOKEN_HINT\"] = \"id_token_hint\";\r\n    AADServerParamKeys[\"DEVICE_CODE\"] = \"device_code\";\r\n    AADServerParamKeys[\"CLIENT_SECRET\"] = \"client_secret\";\r\n    AADServerParamKeys[\"CLIENT_ASSERTION\"] = \"client_assertion\";\r\n    AADServerParamKeys[\"CLIENT_ASSERTION_TYPE\"] = \"client_assertion_type\";\r\n    AADServerParamKeys[\"TOKEN_TYPE\"] = \"token_type\";\r\n    AADServerParamKeys[\"REQ_CNF\"] = \"req_cnf\";\r\n    AADServerParamKeys[\"OBO_ASSERTION\"] = \"assertion\";\r\n    AADServerParamKeys[\"REQUESTED_TOKEN_USE\"] = \"requested_token_use\";\r\n    AADServerParamKeys[\"ON_BEHALF_OF\"] = \"on_behalf_of\";\r\n    AADServerParamKeys[\"FOCI\"] = \"foci\";\r\n    AADServerParamKeys[\"CCS_HEADER\"] = \"X-AnchorMailbox\";\r\n    AADServerParamKeys[\"RETURN_SPA_CODE\"] = \"return_spa_code\";\r\n    AADServerParamKeys[\"NATIVE_BROKER\"] = \"nativebroker\";\r\n    AADServerParamKeys[\"LOGOUT_HINT\"] = \"logout_hint\";\r\n})(AADServerParamKeys || (AADServerParamKeys = {}));\r\n/**\r\n * Claims request keys\r\n */\r\nvar ClaimsRequestKeys;\r\n(function (ClaimsRequestKeys) {\r\n    ClaimsRequestKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    ClaimsRequestKeys[\"XMS_CC\"] = \"xms_cc\";\r\n})(ClaimsRequestKeys || (ClaimsRequestKeys = {}));\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nvar PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n    CREATE: \"create\",\r\n    NO_SESSION: \"no_session\"\r\n};\r\n/**\r\n * SSO Types - generated to populate hints\r\n */\r\nvar SSOTypes;\r\n(function (SSOTypes) {\r\n    SSOTypes[\"ACCOUNT\"] = \"account\";\r\n    SSOTypes[\"SID\"] = \"sid\";\r\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\r\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\r\n    SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\r\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\r\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\r\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\r\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\r\n})(SSOTypes || (SSOTypes = {}));\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nvar CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\"\r\n};\r\n/**\r\n * allowed values for response_mode\r\n */\r\nvar ResponseMode;\r\n(function (ResponseMode) {\r\n    ResponseMode[\"QUERY\"] = \"query\";\r\n    ResponseMode[\"FRAGMENT\"] = \"fragment\";\r\n    ResponseMode[\"FORM_POST\"] = \"form_post\";\r\n})(ResponseMode || (ResponseMode = {}));\r\n/**\r\n * allowed grant_type\r\n */\r\nvar GrantType;\r\n(function (GrantType) {\r\n    GrantType[\"IMPLICIT_GRANT\"] = \"implicit\";\r\n    GrantType[\"AUTHORIZATION_CODE_GRANT\"] = \"authorization_code\";\r\n    GrantType[\"CLIENT_CREDENTIALS_GRANT\"] = \"client_credentials\";\r\n    GrantType[\"RESOURCE_OWNER_PASSWORD_GRANT\"] = \"password\";\r\n    GrantType[\"REFRESH_TOKEN_GRANT\"] = \"refresh_token\";\r\n    GrantType[\"DEVICE_CODE_GRANT\"] = \"device_code\";\r\n    GrantType[\"JWT_BEARER\"] = \"urn:ietf:params:oauth:grant-type:jwt-bearer\";\r\n})(GrantType || (GrantType = {}));\r\n/**\r\n * Account types in Cache\r\n */\r\nvar CacheAccountType;\r\n(function (CacheAccountType) {\r\n    CacheAccountType[\"MSSTS_ACCOUNT_TYPE\"] = \"MSSTS\";\r\n    CacheAccountType[\"ADFS_ACCOUNT_TYPE\"] = \"ADFS\";\r\n    CacheAccountType[\"MSAV1_ACCOUNT_TYPE\"] = \"MSA\";\r\n    CacheAccountType[\"GENERIC_ACCOUNT_TYPE\"] = \"Generic\"; // NTLM, Kerberos, FBA, Basic etc\r\n})(CacheAccountType || (CacheAccountType = {}));\r\n/**\r\n * Separators used in cache\r\n */\r\nvar Separators;\r\n(function (Separators) {\r\n    Separators[\"CACHE_KEY_SEPARATOR\"] = \"-\";\r\n    Separators[\"CLIENT_INFO_SEPARATOR\"] = \".\";\r\n})(Separators || (Separators = {}));\r\n/**\r\n * Credential Type stored in the cache\r\n */\r\nvar CredentialType;\r\n(function (CredentialType) {\r\n    CredentialType[\"ID_TOKEN\"] = \"IdToken\";\r\n    CredentialType[\"ACCESS_TOKEN\"] = \"AccessToken\";\r\n    CredentialType[\"ACCESS_TOKEN_WITH_AUTH_SCHEME\"] = \"AccessToken_With_AuthScheme\";\r\n    CredentialType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\r\n})(CredentialType || (CredentialType = {}));\r\n/**\r\n * Combine all cache types\r\n */\r\nvar CacheType;\r\n(function (CacheType) {\r\n    CacheType[CacheType[\"ADFS\"] = 1001] = \"ADFS\";\r\n    CacheType[CacheType[\"MSA\"] = 1002] = \"MSA\";\r\n    CacheType[CacheType[\"MSSTS\"] = 1003] = \"MSSTS\";\r\n    CacheType[CacheType[\"GENERIC\"] = 1004] = \"GENERIC\";\r\n    CacheType[CacheType[\"ACCESS_TOKEN\"] = 2001] = \"ACCESS_TOKEN\";\r\n    CacheType[CacheType[\"REFRESH_TOKEN\"] = 2002] = \"REFRESH_TOKEN\";\r\n    CacheType[CacheType[\"ID_TOKEN\"] = 2003] = \"ID_TOKEN\";\r\n    CacheType[CacheType[\"APP_METADATA\"] = 3001] = \"APP_METADATA\";\r\n    CacheType[CacheType[\"UNDEFINED\"] = 9999] = \"UNDEFINED\";\r\n})(CacheType || (CacheType = {}));\r\n/**\r\n * More Cache related constants\r\n */\r\nvar APP_METADATA = \"appmetadata\";\r\nvar CLIENT_INFO = \"client_info\";\r\nvar THE_FAMILY_ID = \"1\";\r\nvar AUTHORITY_METADATA_CONSTANTS = {\r\n    CACHE_KEY: \"authority-metadata\",\r\n    REFRESH_TIME_SECONDS: 3600 * 24 // 24 Hours\r\n};\r\nvar AuthorityMetadataSource;\r\n(function (AuthorityMetadataSource) {\r\n    AuthorityMetadataSource[\"CONFIG\"] = \"config\";\r\n    AuthorityMetadataSource[\"CACHE\"] = \"cache\";\r\n    AuthorityMetadataSource[\"NETWORK\"] = \"network\";\r\n    AuthorityMetadataSource[\"HARDCODED_VALUES\"] = \"hardcoded_values\";\r\n})(AuthorityMetadataSource || (AuthorityMetadataSource = {}));\r\nvar SERVER_TELEM_CONSTANTS = {\r\n    SCHEMA_VERSION: 5,\r\n    MAX_CUR_HEADER_BYTES: 80,\r\n    MAX_LAST_HEADER_BYTES: 330,\r\n    MAX_CACHED_ERRORS: 50,\r\n    CACHE_KEY: \"server-telemetry\",\r\n    CATEGORY_SEPARATOR: \"|\",\r\n    VALUE_SEPARATOR: \",\",\r\n    OVERFLOW_TRUE: \"1\",\r\n    OVERFLOW_FALSE: \"0\",\r\n    UNKNOWN_ERROR: \"unknown_error\"\r\n};\r\n/**\r\n * Type of the authentication request\r\n */\r\nvar AuthenticationScheme;\r\n(function (AuthenticationScheme) {\r\n    AuthenticationScheme[\"BEARER\"] = \"Bearer\";\r\n    AuthenticationScheme[\"POP\"] = \"pop\";\r\n    AuthenticationScheme[\"SSH\"] = \"ssh-cert\";\r\n})(AuthenticationScheme || (AuthenticationScheme = {}));\r\n/**\r\n * Constants related to throttling\r\n */\r\nvar ThrottlingConstants = {\r\n    // Default time to throttle RequestThumbprint in seconds\r\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\r\n    // Default maximum time to throttle in seconds, overrides what the server sends back\r\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\r\n    // Prefix for storing throttling entries\r\n    THROTTLING_PREFIX: \"throttling\",\r\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\r\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\"\r\n};\r\nvar Errors = {\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\r\n};\r\n/**\r\n * Password grant parameters\r\n */\r\nvar PasswordGrantConstants;\r\n(function (PasswordGrantConstants) {\r\n    PasswordGrantConstants[\"username\"] = \"username\";\r\n    PasswordGrantConstants[\"password\"] = \"password\";\r\n})(PasswordGrantConstants || (PasswordGrantConstants = {}));\r\n/**\r\n * Response codes\r\n */\r\nvar ResponseCodes;\r\n(function (ResponseCodes) {\r\n    ResponseCodes[ResponseCodes[\"httpSuccess\"] = 200] = \"httpSuccess\";\r\n    ResponseCodes[ResponseCodes[\"httpBadRequest\"] = 400] = \"httpBadRequest\";\r\n})(ResponseCodes || (ResponseCodes = {}));\r\n/**\r\n * Region Discovery Sources\r\n */\r\nvar RegionDiscoverySources;\r\n(function (RegionDiscoverySources) {\r\n    RegionDiscoverySources[\"FAILED_AUTO_DETECTION\"] = \"1\";\r\n    RegionDiscoverySources[\"INTERNAL_CACHE\"] = \"2\";\r\n    RegionDiscoverySources[\"ENVIRONMENT_VARIABLE\"] = \"3\";\r\n    RegionDiscoverySources[\"IMDS\"] = \"4\";\r\n})(RegionDiscoverySources || (RegionDiscoverySources = {}));\r\n/**\r\n * Region Discovery Outcomes\r\n */\r\nvar RegionDiscoveryOutcomes;\r\n(function (RegionDiscoveryOutcomes) {\r\n    RegionDiscoveryOutcomes[\"CONFIGURED_MATCHES_DETECTED\"] = \"1\";\r\n    RegionDiscoveryOutcomes[\"CONFIGURED_NO_AUTO_DETECTION\"] = \"2\";\r\n    RegionDiscoveryOutcomes[\"CONFIGURED_NOT_DETECTED\"] = \"3\";\r\n    RegionDiscoveryOutcomes[\"AUTO_DETECTION_REQUESTED_SUCCESSFUL\"] = \"4\";\r\n    RegionDiscoveryOutcomes[\"AUTO_DETECTION_REQUESTED_FAILED\"] = \"5\";\r\n})(RegionDiscoveryOutcomes || (RegionDiscoveryOutcomes = {}));\r\nvar CacheOutcome;\r\n(function (CacheOutcome) {\r\n    CacheOutcome[\"NO_CACHE_HIT\"] = \"0\";\r\n    CacheOutcome[\"FORCE_REFRESH\"] = \"1\";\r\n    CacheOutcome[\"NO_CACHED_ACCESS_TOKEN\"] = \"2\";\r\n    CacheOutcome[\"CACHED_ACCESS_TOKEN_EXPIRED\"] = \"3\";\r\n    CacheOutcome[\"REFRESH_CACHED_ACCESS_TOKEN\"] = \"4\";\r\n    CacheOutcome[\"CLAIMS_REQUESTED_CACHE_SKIPPED\"] = \"5\";\r\n})(CacheOutcome || (CacheOutcome = {}));\r\nvar JsonTypes;\r\n(function (JsonTypes) {\r\n    JsonTypes[\"Jwt\"] = \"JWT\";\r\n    JsonTypes[\"Jwk\"] = \"JWK\";\r\n    JsonTypes[\"Pop\"] = \"pop\";\r\n})(JsonTypes || (JsonTypes = {}));\r\nvar ONE_DAY_IN_MS = 86400000;\n\nexport { AADAuthorityConstants, AADServerParamKeys, APP_METADATA, AUTHORITY_METADATA_CONSTANTS, AuthenticationScheme, AuthorityMetadataSource, CLIENT_INFO, CacheAccountType, CacheOutcome, CacheType, ClaimsRequestKeys, CodeChallengeMethodValues, Constants, CredentialType, Errors, GrantType, HeaderNames, JsonTypes, OIDC_DEFAULT_SCOPES, OIDC_SCOPES, ONE_DAY_IN_MS, PasswordGrantConstants, PersistentCacheKeys, PromptValue, RegionDiscoveryOutcomes, RegionDiscoverySources, ResponseCodes, ResponseMode, SERVER_TELEM_CONSTANTS, SSOTypes, Separators, THE_FAMILY_ID, ThrottlingConstants };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}