{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { __extends, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { StringUtils, ClientAuthError, ServerError } from '@azure/msal-common';\nimport { BrowserAuthError, BrowserAuthErrorMessage } from '../error/BrowserAuthError.js';\nimport { TemporaryCacheKeys, ApiId } from '../utils/BrowserConstants.js';\nimport { InteractionHandler } from './InteractionHandler.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar RedirectHandler =\n/** @class */\nfunction (_super) {\n  __extends(RedirectHandler, _super);\n\n  function RedirectHandler(authCodeModule, storageImpl, authCodeRequest, logger, browserCrypto, performanceClient) {\n    var _this = _super.call(this, authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) || this;\n\n    _this.browserCrypto = browserCrypto;\n    return _this;\n  }\n  /**\r\n   * Redirects window to given URL.\r\n   * @param urlNavigate\r\n   */\n\n\n  RedirectHandler.prototype.initiateAuthRequest = function (requestUrl, params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var navigationOptions, navigate;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\n            if (!!StringUtils.isEmpty(requestUrl)) return [3\n            /*break*/\n            , 7]; // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n\n            if (params.redirectStartPage) {\n              this.logger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\n              this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\n            } // Set interaction status in the library.\n\n\n            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest, this.browserCrypto);\n            this.logger.infoPii(\"RedirectHandler.initiateAuthRequest: Navigate to: \" + requestUrl);\n            navigationOptions = {\n              apiId: ApiId.acquireTokenRedirect,\n              timeout: params.redirectTimeout,\n              noHistory: false\n            };\n            if (!(typeof params.onRedirectNavigate === \"function\")) return [3\n            /*break*/\n            , 4];\n            this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\n            navigate = params.onRedirectNavigate(requestUrl);\n            if (!(navigate !== false)) return [3\n            /*break*/\n            , 2];\n            this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\n            return [4\n            /*yield*/\n            , params.navigationClient.navigateExternal(requestUrl, navigationOptions)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n\n          case 2:\n            this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\n            return [2\n            /*return*/\n            ];\n\n          case 3:\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            // Navigate window to request URL\n            this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\n            return [4\n            /*yield*/\n            , params.navigationClient.navigateExternal(requestUrl, navigationOptions)];\n\n          case 5:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n\n          case 6:\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            // Throw error if request URL is empty.\n            this.logger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n\n          case 8:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Handle authorization code response in the window.\r\n   * @param hash\r\n   */\n\n\n  RedirectHandler.prototype.handleCodeResponseFromHash = function (locationHash, state, authority, networkModule) {\n    return __awaiter(this, void 0, void 0, function () {\n      var stateKey, requestState, authCodeResponse, nonceKey, cachedNonce, cachedCcsCred, tokenResponse;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"RedirectHandler.handleCodeResponse called\"); // Check that location hash isn't empty.\n\n            if (StringUtils.isEmpty(locationHash)) {\n              throw BrowserAuthError.createEmptyHashError(locationHash);\n            } // Interaction is completed - remove interaction status.\n\n\n            this.browserStorage.setInteractionInProgress(false);\n            stateKey = this.browserStorage.generateStateKey(state);\n            requestState = this.browserStorage.getTemporaryCache(stateKey);\n\n            if (!requestState) {\n              throw ClientAuthError.createStateNotFoundError(\"Cached State\");\n            }\n\n            try {\n              authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\n            } catch (e) {\n              if (e instanceof ServerError && e.subError === BrowserAuthErrorMessage.userCancelledError.code) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw BrowserAuthError.createUserCancelledError();\n              } else {\n                throw e;\n              }\n            }\n\n            nonceKey = this.browserStorage.generateNonceKey(requestState);\n            cachedNonce = this.browserStorage.getTemporaryCache(nonceKey); // Assign code to request\n\n            this.authCodeRequest.code = authCodeResponse.code;\n            if (!authCodeResponse.cloud_instance_host_name) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            authCodeResponse.nonce = cachedNonce || undefined;\n            authCodeResponse.state = requestState; // Add CCS parameters if available\n\n            if (authCodeResponse.client_info) {\n              this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n            } else {\n              cachedCcsCred = this.checkCcsCredentials();\n\n              if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n              }\n            }\n\n            return [4\n            /*yield*/\n            , this.authModule.acquireToken(this.authCodeRequest, authCodeResponse)];\n\n          case 3:\n            tokenResponse = _a.sent();\n            this.browserStorage.cleanRequestByState(state);\n            return [2\n            /*return*/\n            , tokenResponse];\n        }\n      });\n    });\n  };\n\n  return RedirectHandler;\n}(InteractionHandler);\n\nexport { RedirectHandler };","map":{"version":3,"names":["__extends","__awaiter","__generator","StringUtils","ClientAuthError","ServerError","BrowserAuthError","BrowserAuthErrorMessage","TemporaryCacheKeys","ApiId","InteractionHandler","RedirectHandler","_super","authCodeModule","storageImpl","authCodeRequest","logger","browserCrypto","performanceClient","_this","call","prototype","initiateAuthRequest","requestUrl","params","navigationOptions","navigate","_a","label","verbose","isEmpty","redirectStartPage","browserStorage","setTemporaryCache","ORIGIN_URI","CORRELATION_ID","correlationId","cacheCodeRequest","infoPii","apiId","acquireTokenRedirect","timeout","redirectTimeout","noHistory","onRedirectNavigate","navigationClient","navigateExternal","sent","info","createEmptyNavigationUriError","handleCodeResponseFromHash","locationHash","state","authority","networkModule","stateKey","requestState","authCodeResponse","nonceKey","cachedNonce","cachedCcsCred","tokenResponse","createEmptyHashError","setInteractionInProgress","generateStateKey","getTemporaryCache","createStateNotFoundError","authModule","handleFragmentResponse","e","subError","userCancelledError","code","createUserCancelledError","generateNonceKey","cloud_instance_host_name","updateTokenEndpointAuthority","nonce","undefined","client_info","clientInfo","checkCcsCredentials","ccsCredential","acquireToken","cleanRequestByState"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\nimport { __extends, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { StringUtils, ClientAuthError, ServerError } from '@azure/msal-common';\nimport { BrowserAuthError, BrowserAuthErrorMessage } from '../error/BrowserAuthError.js';\nimport { TemporaryCacheKeys, ApiId } from '../utils/BrowserConstants.js';\nimport { InteractionHandler } from './InteractionHandler.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar RedirectHandler = /** @class */ (function (_super) {\r\n    __extends(RedirectHandler, _super);\r\n    function RedirectHandler(authCodeModule, storageImpl, authCodeRequest, logger, browserCrypto, performanceClient) {\r\n        var _this = _super.call(this, authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) || this;\r\n        _this.browserCrypto = browserCrypto;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate\r\n     */\r\n    RedirectHandler.prototype.initiateAuthRequest = function (requestUrl, params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var navigationOptions, navigate;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\r\n                        if (!!StringUtils.isEmpty(requestUrl)) return [3 /*break*/, 7];\r\n                        // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\r\n                        if (params.redirectStartPage) {\r\n                            this.logger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\r\n                            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\r\n                        }\r\n                        // Set interaction status in the library.\r\n                        this.browserStorage.setTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\r\n                        this.browserStorage.cacheCodeRequest(this.authCodeRequest, this.browserCrypto);\r\n                        this.logger.infoPii(\"RedirectHandler.initiateAuthRequest: Navigate to: \" + requestUrl);\r\n                        navigationOptions = {\r\n                            apiId: ApiId.acquireTokenRedirect,\r\n                            timeout: params.redirectTimeout,\r\n                            noHistory: false\r\n                        };\r\n                        if (!(typeof params.onRedirectNavigate === \"function\")) return [3 /*break*/, 4];\r\n                        this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\r\n                        navigate = params.onRedirectNavigate(requestUrl);\r\n                        if (!(navigate !== false)) return [3 /*break*/, 2];\r\n                        this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\r\n                        return [4 /*yield*/, params.navigationClient.navigateExternal(requestUrl, navigationOptions)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 2:\r\n                        this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\r\n                        return [2 /*return*/];\r\n                    case 3: return [3 /*break*/, 6];\r\n                    case 4:\r\n                        // Navigate window to request URL\r\n                        this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\r\n                        return [4 /*yield*/, params.navigationClient.navigateExternal(requestUrl, navigationOptions)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 6: return [3 /*break*/, 8];\r\n                    case 7:\r\n                        // Throw error if request URL is empty.\r\n                        this.logger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\r\n                        throw BrowserAuthError.createEmptyNavigationUriError();\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash\r\n     */\r\n    RedirectHandler.prototype.handleCodeResponseFromHash = function (locationHash, state, authority, networkModule) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var stateKey, requestState, authCodeResponse, nonceKey, cachedNonce, cachedCcsCred, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\r\n                        // Check that location hash isn't empty.\r\n                        if (StringUtils.isEmpty(locationHash)) {\r\n                            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n                        }\r\n                        // Interaction is completed - remove interaction status.\r\n                        this.browserStorage.setInteractionInProgress(false);\r\n                        stateKey = this.browserStorage.generateStateKey(state);\r\n                        requestState = this.browserStorage.getTemporaryCache(stateKey);\r\n                        if (!requestState) {\r\n                            throw ClientAuthError.createStateNotFoundError(\"Cached State\");\r\n                        }\r\n                        try {\r\n                            authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\r\n                        }\r\n                        catch (e) {\r\n                            if (e instanceof ServerError && e.subError === BrowserAuthErrorMessage.userCancelledError.code) {\r\n                                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\r\n                                throw BrowserAuthError.createUserCancelledError();\r\n                            }\r\n                            else {\r\n                                throw e;\r\n                            }\r\n                        }\r\n                        nonceKey = this.browserStorage.generateNonceKey(requestState);\r\n                        cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\r\n                        // Assign code to request\r\n                        this.authCodeRequest.code = authCodeResponse.code;\r\n                        if (!authCodeResponse.cloud_instance_host_name) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        authCodeResponse.nonce = cachedNonce || undefined;\r\n                        authCodeResponse.state = requestState;\r\n                        // Add CCS parameters if available\r\n                        if (authCodeResponse.client_info) {\r\n                            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\r\n                        }\r\n                        else {\r\n                            cachedCcsCred = this.checkCcsCredentials();\r\n                            if (cachedCcsCred) {\r\n                                this.authCodeRequest.ccsCredential = cachedCcsCred;\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, this.authModule.acquireToken(this.authCodeRequest, authCodeResponse)];\r\n                    case 3:\r\n                        tokenResponse = _a.sent();\r\n                        this.browserStorage.cleanRequestByState(state);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RedirectHandler;\r\n}(InteractionHandler));\n\nexport { RedirectHandler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}