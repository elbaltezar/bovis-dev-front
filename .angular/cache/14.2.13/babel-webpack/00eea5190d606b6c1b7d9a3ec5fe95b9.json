{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { Constants } from '@azure/msal-common';\nimport { KEY_FORMAT_JWK } from '../utils/BrowserConstants.js';\nimport { BrowserStringUtils } from '../utils/BrowserStringUtils.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar MsBrowserCrypto =\n/** @class */\nfunction () {\n  function MsBrowserCrypto() {}\n\n  MsBrowserCrypto.prototype.getRandomValues = function (dataBuffer) {\n    return window[\"msCrypto\"].getRandomValues(dataBuffer);\n  };\n\n  MsBrowserCrypto.prototype.generateKey = function (algorithm, extractable, keyUsages) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          var msGenerateKey = window[\"msCrypto\"].subtle.generateKey(algorithm, extractable, keyUsages);\n          msGenerateKey.addEventListener(\"complete\", function (e) {\n            resolve(e.target.result);\n          });\n          msGenerateKey.addEventListener(\"error\", function (error) {\n            reject(error);\n          });\n        })];\n      });\n    });\n  };\n\n  MsBrowserCrypto.prototype.exportKey = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          var msExportKey = window[\"msCrypto\"].subtle.exportKey(KEY_FORMAT_JWK, key);\n          msExportKey.addEventListener(\"complete\", function (e) {\n            var resultBuffer = e.target.result;\n            var resultString = BrowserStringUtils.utf8ArrToString(new Uint8Array(resultBuffer)).replace(/\\r/g, Constants.EMPTY_STRING).replace(/\\n/g, Constants.EMPTY_STRING).replace(/\\t/g, Constants.EMPTY_STRING).split(\" \").join(Constants.EMPTY_STRING).replace(\"\\u0000\", Constants.EMPTY_STRING);\n\n            try {\n              resolve(JSON.parse(resultString));\n            } catch (e) {\n              reject(e);\n            }\n          });\n          msExportKey.addEventListener(\"error\", function (error) {\n            reject(error);\n          });\n        })];\n      });\n    });\n  };\n\n  MsBrowserCrypto.prototype.importKey = function (keyData, algorithm, extractable, keyUsages) {\n    return __awaiter(this, void 0, void 0, function () {\n      var keyString, keyBuffer;\n      return __generator(this, function (_a) {\n        keyString = BrowserStringUtils.getSortedObjectString(keyData);\n        keyBuffer = BrowserStringUtils.stringToArrayBuffer(keyString);\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          var msImportKey = window[\"msCrypto\"].subtle.importKey(KEY_FORMAT_JWK, keyBuffer, algorithm, extractable, keyUsages);\n          msImportKey.addEventListener(\"complete\", function (e) {\n            resolve(e.target.result);\n          });\n          msImportKey.addEventListener(\"error\", function (error) {\n            reject(error);\n          });\n        })];\n      });\n    });\n  };\n\n  MsBrowserCrypto.prototype.sign = function (algorithm, key, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          var msSign = window[\"msCrypto\"].subtle.sign(algorithm, key, data);\n          msSign.addEventListener(\"complete\", function (e) {\n            resolve(e.target.result);\n          });\n          msSign.addEventListener(\"error\", function (error) {\n            reject(error);\n          });\n        })];\n      });\n    });\n  };\n\n  MsBrowserCrypto.prototype.digest = function (algorithm, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          var digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\n          digestOperation.addEventListener(\"complete\", function (e) {\n            resolve(e.target.result);\n          });\n          digestOperation.addEventListener(\"error\", function (error) {\n            reject(error);\n          });\n        })];\n      });\n    });\n  };\n\n  return MsBrowserCrypto;\n}();\n\nexport { MsBrowserCrypto };","map":{"version":3,"names":["__awaiter","__generator","Constants","KEY_FORMAT_JWK","BrowserStringUtils","MsBrowserCrypto","prototype","getRandomValues","dataBuffer","window","generateKey","algorithm","extractable","keyUsages","_a","Promise","resolve","reject","msGenerateKey","subtle","addEventListener","e","target","result","error","exportKey","key","msExportKey","resultBuffer","resultString","utf8ArrToString","Uint8Array","replace","EMPTY_STRING","split","join","JSON","parse","importKey","keyData","keyString","keyBuffer","getSortedObjectString","stringToArrayBuffer","msImportKey","sign","data","msSign","digest","digestOperation","buffer"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/crypto/MsBrowserCrypto.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { Constants } from '@azure/msal-common';\nimport { KEY_FORMAT_JWK } from '../utils/BrowserConstants.js';\nimport { BrowserStringUtils } from '../utils/BrowserStringUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar MsBrowserCrypto = /** @class */ (function () {\r\n    function MsBrowserCrypto() {\r\n    }\r\n    MsBrowserCrypto.prototype.getRandomValues = function (dataBuffer) {\r\n        return window[\"msCrypto\"].getRandomValues(dataBuffer);\r\n    };\r\n    MsBrowserCrypto.prototype.generateKey = function (algorithm, extractable, keyUsages) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var msGenerateKey = window[\"msCrypto\"].subtle.generateKey(algorithm, extractable, keyUsages);\r\n                        msGenerateKey.addEventListener(\"complete\", function (e) {\r\n                            resolve(e.target.result);\r\n                        });\r\n                        msGenerateKey.addEventListener(\"error\", function (error) {\r\n                            reject(error);\r\n                        });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    MsBrowserCrypto.prototype.exportKey = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var msExportKey = window[\"msCrypto\"].subtle.exportKey(KEY_FORMAT_JWK, key);\r\n                        msExportKey.addEventListener(\"complete\", function (e) {\r\n                            var resultBuffer = e.target.result;\r\n                            var resultString = BrowserStringUtils.utf8ArrToString(new Uint8Array(resultBuffer))\r\n                                .replace(/\\r/g, Constants.EMPTY_STRING)\r\n                                .replace(/\\n/g, Constants.EMPTY_STRING)\r\n                                .replace(/\\t/g, Constants.EMPTY_STRING)\r\n                                .split(\" \").join(Constants.EMPTY_STRING)\r\n                                .replace(\"\\u0000\", Constants.EMPTY_STRING);\r\n                            try {\r\n                                resolve(JSON.parse(resultString));\r\n                            }\r\n                            catch (e) {\r\n                                reject(e);\r\n                            }\r\n                        });\r\n                        msExportKey.addEventListener(\"error\", function (error) {\r\n                            reject(error);\r\n                        });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    MsBrowserCrypto.prototype.importKey = function (keyData, algorithm, extractable, keyUsages) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var keyString, keyBuffer;\r\n            return __generator(this, function (_a) {\r\n                keyString = BrowserStringUtils.getSortedObjectString(keyData);\r\n                keyBuffer = BrowserStringUtils.stringToArrayBuffer(keyString);\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var msImportKey = window[\"msCrypto\"].subtle.importKey(KEY_FORMAT_JWK, keyBuffer, algorithm, extractable, keyUsages);\r\n                        msImportKey.addEventListener(\"complete\", function (e) {\r\n                            resolve(e.target.result);\r\n                        });\r\n                        msImportKey.addEventListener(\"error\", function (error) {\r\n                            reject(error);\r\n                        });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    MsBrowserCrypto.prototype.sign = function (algorithm, key, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var msSign = window[\"msCrypto\"].subtle.sign(algorithm, key, data);\r\n                        msSign.addEventListener(\"complete\", function (e) {\r\n                            resolve(e.target.result);\r\n                        });\r\n                        msSign.addEventListener(\"error\", function (error) {\r\n                            reject(error);\r\n                        });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    MsBrowserCrypto.prototype.digest = function (algorithm, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\r\n                        digestOperation.addEventListener(\"complete\", function (e) {\r\n                            resolve(e.target.result);\r\n                        });\r\n                        digestOperation.addEventListener(\"error\", function (error) {\r\n                            reject(error);\r\n                        });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    return MsBrowserCrypto;\r\n}());\n\nexport { MsBrowserCrypto };\n"],"mappings":"AAAA;AACA;;AACA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,uBAAvC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AAEA;AACA;AACA;AACA;;AACA,IAAIC,eAAe;AAAG;AAAe,YAAY;EAC7C,SAASA,eAAT,GAA2B,CAC1B;;EACDA,eAAe,CAACC,SAAhB,CAA0BC,eAA1B,GAA4C,UAAUC,UAAV,EAAsB;IAC9D,OAAOC,MAAM,CAAC,UAAD,CAAN,CAAmBF,eAAnB,CAAmCC,UAAnC,CAAP;EACH,CAFD;;EAGAH,eAAe,CAACC,SAAhB,CAA0BI,WAA1B,GAAwC,UAAUC,SAAV,EAAqBC,WAArB,EAAkCC,SAAlC,EAA6C;IACjF,OAAOb,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,OAAOC,WAAW,CAAC,IAAD,EAAO,UAAUa,EAAV,EAAc;QACnC,OAAO,CAAC;QAAE;QAAH,EAAe,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;UACrD,IAAIC,aAAa,GAAGT,MAAM,CAAC,UAAD,CAAN,CAAmBU,MAAnB,CAA0BT,WAA1B,CAAsCC,SAAtC,EAAiDC,WAAjD,EAA8DC,SAA9D,CAApB;UACAK,aAAa,CAACE,gBAAd,CAA+B,UAA/B,EAA2C,UAAUC,CAAV,EAAa;YACpDL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,MAAV,CAAP;UACH,CAFD;UAGAL,aAAa,CAACE,gBAAd,CAA+B,OAA/B,EAAwC,UAAUI,KAAV,EAAiB;YACrDP,MAAM,CAACO,KAAD,CAAN;UACH,CAFD;QAGH,CARiB,CAAf,CAAP;MASH,CAViB,CAAlB;IAWH,CAZe,CAAhB;EAaH,CAdD;;EAeAnB,eAAe,CAACC,SAAhB,CAA0BmB,SAA1B,GAAsC,UAAUC,GAAV,EAAe;IACjD,OAAO1B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,OAAOC,WAAW,CAAC,IAAD,EAAO,UAAUa,EAAV,EAAc;QACnC,OAAO,CAAC;QAAE;QAAH,EAAe,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;UACrD,IAAIU,WAAW,GAAGlB,MAAM,CAAC,UAAD,CAAN,CAAmBU,MAAnB,CAA0BM,SAA1B,CAAoCtB,cAApC,EAAoDuB,GAApD,CAAlB;UACAC,WAAW,CAACP,gBAAZ,CAA6B,UAA7B,EAAyC,UAAUC,CAAV,EAAa;YAClD,IAAIO,YAAY,GAAGP,CAAC,CAACC,MAAF,CAASC,MAA5B;YACA,IAAIM,YAAY,GAAGzB,kBAAkB,CAAC0B,eAAnB,CAAmC,IAAIC,UAAJ,CAAeH,YAAf,CAAnC,EACdI,OADc,CACN,KADM,EACC9B,SAAS,CAAC+B,YADX,EAEdD,OAFc,CAEN,KAFM,EAEC9B,SAAS,CAAC+B,YAFX,EAGdD,OAHc,CAGN,KAHM,EAGC9B,SAAS,CAAC+B,YAHX,EAIdC,KAJc,CAIR,GAJQ,EAIHC,IAJG,CAIEjC,SAAS,CAAC+B,YAJZ,EAKdD,OALc,CAKN,QALM,EAKI9B,SAAS,CAAC+B,YALd,CAAnB;;YAMA,IAAI;cACAjB,OAAO,CAACoB,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAD,CAAP;YACH,CAFD,CAGA,OAAOR,CAAP,EAAU;cACNJ,MAAM,CAACI,CAAD,CAAN;YACH;UACJ,CAdD;UAeAM,WAAW,CAACP,gBAAZ,CAA6B,OAA7B,EAAsC,UAAUI,KAAV,EAAiB;YACnDP,MAAM,CAACO,KAAD,CAAN;UACH,CAFD;QAGH,CApBiB,CAAf,CAAP;MAqBH,CAtBiB,CAAlB;IAuBH,CAxBe,CAAhB;EAyBH,CA1BD;;EA2BAnB,eAAe,CAACC,SAAhB,CAA0BgC,SAA1B,GAAsC,UAAUC,OAAV,EAAmB5B,SAAnB,EAA8BC,WAA9B,EAA2CC,SAA3C,EAAsD;IACxF,OAAOb,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIwC,SAAJ,EAAeC,SAAf;MACA,OAAOxC,WAAW,CAAC,IAAD,EAAO,UAAUa,EAAV,EAAc;QACnC0B,SAAS,GAAGpC,kBAAkB,CAACsC,qBAAnB,CAAyCH,OAAzC,CAAZ;QACAE,SAAS,GAAGrC,kBAAkB,CAACuC,mBAAnB,CAAuCH,SAAvC,CAAZ;QACA,OAAO,CAAC;QAAE;QAAH,EAAe,IAAIzB,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;UACrD,IAAI2B,WAAW,GAAGnC,MAAM,CAAC,UAAD,CAAN,CAAmBU,MAAnB,CAA0BmB,SAA1B,CAAoCnC,cAApC,EAAoDsC,SAApD,EAA+D9B,SAA/D,EAA0EC,WAA1E,EAAuFC,SAAvF,CAAlB;UACA+B,WAAW,CAACxB,gBAAZ,CAA6B,UAA7B,EAAyC,UAAUC,CAAV,EAAa;YAClDL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,MAAV,CAAP;UACH,CAFD;UAGAqB,WAAW,CAACxB,gBAAZ,CAA6B,OAA7B,EAAsC,UAAUI,KAAV,EAAiB;YACnDP,MAAM,CAACO,KAAD,CAAN;UACH,CAFD;QAGH,CARiB,CAAf,CAAP;MASH,CAZiB,CAAlB;IAaH,CAfe,CAAhB;EAgBH,CAjBD;;EAkBAnB,eAAe,CAACC,SAAhB,CAA0BuC,IAA1B,GAAiC,UAAUlC,SAAV,EAAqBe,GAArB,EAA0BoB,IAA1B,EAAgC;IAC7D,OAAO9C,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,OAAOC,WAAW,CAAC,IAAD,EAAO,UAAUa,EAAV,EAAc;QACnC,OAAO,CAAC;QAAE;QAAH,EAAe,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;UACrD,IAAI8B,MAAM,GAAGtC,MAAM,CAAC,UAAD,CAAN,CAAmBU,MAAnB,CAA0B0B,IAA1B,CAA+BlC,SAA/B,EAA0Ce,GAA1C,EAA+CoB,IAA/C,CAAb;UACAC,MAAM,CAAC3B,gBAAP,CAAwB,UAAxB,EAAoC,UAAUC,CAAV,EAAa;YAC7CL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,MAAV,CAAP;UACH,CAFD;UAGAwB,MAAM,CAAC3B,gBAAP,CAAwB,OAAxB,EAAiC,UAAUI,KAAV,EAAiB;YAC9CP,MAAM,CAACO,KAAD,CAAN;UACH,CAFD;QAGH,CARiB,CAAf,CAAP;MASH,CAViB,CAAlB;IAWH,CAZe,CAAhB;EAaH,CAdD;;EAeAnB,eAAe,CAACC,SAAhB,CAA0B0C,MAA1B,GAAmC,UAAUrC,SAAV,EAAqBmC,IAArB,EAA2B;IAC1D,OAAO9C,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,OAAOC,WAAW,CAAC,IAAD,EAAO,UAAUa,EAAV,EAAc;QACnC,OAAO,CAAC;QAAE;QAAH,EAAe,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;UACrD,IAAIgC,eAAe,GAAGxC,MAAM,CAAC,UAAD,CAAN,CAAmBU,MAAnB,CAA0B6B,MAA1B,CAAiCrC,SAAjC,EAA4CmC,IAAI,CAACI,MAAjD,CAAtB;UACAD,eAAe,CAAC7B,gBAAhB,CAAiC,UAAjC,EAA6C,UAAUC,CAAV,EAAa;YACtDL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,MAAV,CAAP;UACH,CAFD;UAGA0B,eAAe,CAAC7B,gBAAhB,CAAiC,OAAjC,EAA0C,UAAUI,KAAV,EAAiB;YACvDP,MAAM,CAACO,KAAD,CAAN;UACH,CAFD;QAGH,CARiB,CAAf,CAAP;MASH,CAViB,CAAlB;IAWH,CAZe,CAAhB;EAaH,CAdD;;EAeA,OAAOnB,eAAP;AACH,CAjGoC,EAArC;;AAmGA,SAASA,eAAT"},"metadata":{},"sourceType":"module"}