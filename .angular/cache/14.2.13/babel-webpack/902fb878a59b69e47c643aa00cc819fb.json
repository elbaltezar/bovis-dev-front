{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { __extends, __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { AuthError, PerformanceEvents, Constants, StringUtils, PromptValue, UrlString, ProtocolUtils } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { InteractionType } from '../utils/BrowserConstants.js';\nimport { SilentHandler } from '../interaction_handler/SilentHandler.js';\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.js';\nimport { NativeInteractionClient } from './NativeInteractionClient.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar SilentIframeClient =\n/** @class */\nfunction (_super) {\n  __extends(SilentIframeClient, _super);\n\n  function SilentIframeClient(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n    var _this = _super.call(this, config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) || this;\n\n    _this.apiId = apiId;\n    _this.nativeStorage = nativeStorageImpl;\n    return _this;\n  }\n  /**\r\n   * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\r\n   * @param request\r\n   */\n\n\n  SilentIframeClient.prototype.acquireToken = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var acquireTokenMeasurement, silentRequest, serverTelemetryManager, authClient, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\n            this.logger.verbose(\"acquireTokenByIframe called\");\n            acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId); // Check that we have some SSO data\n\n            if (StringUtils.isEmpty(request.loginHint) && StringUtils.isEmpty(request.sid) && (!request.account || StringUtils.isEmpty(request.account.username))) {\n              this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\n            } // Check that prompt is set to none or no_session, throw error if it is set to anything else.\n\n\n            if (request.prompt && request.prompt !== PromptValue.NONE && request.prompt !== PromptValue.NO_SESSION) {\n              acquireTokenMeasurement.endMeasurement({\n                success: false\n              });\n              throw BrowserAuthError.createSilentPromptValueError(request.prompt);\n            } // Create silent request\n\n\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n            return [4\n            /*yield*/\n            , this.initializeAuthorizationRequest(__assign(__assign({}, request), {\n              prompt: request.prompt || PromptValue.NONE\n            }), InteractionType.Silent)];\n\n          case 1:\n            silentRequest = _a.sent();\n            this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\n            serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 5,, 6]); // Initialize the client\n\n\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\n            return [4\n            /*yield*/\n            , this.createAuthCodeClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions)];\n\n          case 3:\n            authClient = _a.sent();\n            this.logger.verbose(\"Auth code client created\");\n            this.performanceClient.setPreQueueTime(PerformanceEvents.SilentIframeClientTokenHelper, request.correlationId);\n            return [4\n            /*yield*/\n            , this.silentTokenHelper(authClient, silentRequest).then(function (result) {\n              acquireTokenMeasurement.endMeasurement({\n                success: true,\n                fromCache: false,\n                requestId: result.requestId\n              });\n              return result;\n            })];\n\n          case 4:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 5:\n            e_1 = _a.sent();\n\n            if (e_1 instanceof AuthError) {\n              e_1.setCorrelationId(this.correlationId);\n            }\n\n            serverTelemetryManager.cacheFailedRequest(e_1);\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            acquireTokenMeasurement.endMeasurement({\n              errorCode: e_1 instanceof AuthError && e_1.errorCode || undefined,\n              subErrorCode: e_1 instanceof AuthError && e_1.subError || undefined,\n              success: false\n            });\n            throw e_1;\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Currently Unsupported\r\n   */\n\n\n  SilentIframeClient.prototype.logout = function () {\n    // Synchronous so we must reject\n    return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n  };\n  /**\r\n   * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n   * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n   * @param navigateUrl\r\n   * @param userRequestScopes\r\n   */\n\n\n  SilentIframeClient.prototype.silentTokenHelper = function (authClient, silentRequest) {\n    return __awaiter(this, void 0, void 0, function () {\n      var authCodeRequest, navigateUrl, silentHandler, msalFrame, hash, serverParams, state, nativeInteractionClient, userRequestState;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientTokenHelper, silentRequest.correlationId); // Create auth code request and generate PKCE params\n\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, silentRequest.correlationId);\n            return [4\n            /*yield*/\n            , this.initializeAuthorizationCodeRequest(silentRequest)];\n\n          case 1:\n            authCodeRequest = _a.sent(); // Create authorize request url\n\n            this.performanceClient.setPreQueueTime(PerformanceEvents.GetAuthCodeUrl, silentRequest.correlationId);\n            return [4\n            /*yield*/\n            , authClient.getAuthCodeUrl(__assign(__assign({}, silentRequest), {\n              nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme)\n            }))];\n\n          case 2:\n            navigateUrl = _a.sent();\n            silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system, this.performanceClient); // Get the frame handle for the silent request\n\n            this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerInitiateAuthRequest, silentRequest.correlationId);\n            return [4\n            /*yield*/\n            , silentHandler.initiateAuthRequest(navigateUrl)];\n\n          case 3:\n            msalFrame = _a.sent(); // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n\n            this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerMonitorIframeForHash, silentRequest.correlationId);\n            return [4\n            /*yield*/\n            , silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout)];\n\n          case 4:\n            hash = _a.sent();\n            serverParams = UrlString.getDeserializedHash(hash);\n            state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Silent, authCodeRequest.correlationId);\n\n            if (serverParams.accountId) {\n              this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n\n              if (!this.nativeMessageHandler) {\n                throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n              }\n\n              nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, this.correlationId);\n              userRequestState = ProtocolUtils.parseRequestState(this.browserCrypto, state).userRequestState;\n              return [2\n              /*return*/\n              , nativeInteractionClient.acquireToken(__assign(__assign({}, silentRequest), {\n                state: userRequestState,\n                prompt: silentRequest.prompt || PromptValue.NONE\n              })).finally(function () {\n                _this.browserStorage.cleanRequestByState(state);\n              })];\n            } // Handle response from hash string\n\n\n            this.performanceClient.setPreQueueTime(PerformanceEvents.HandleCodeResponseFromHash, silentRequest.correlationId);\n            return [2\n            /*return*/\n            , silentHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient)];\n        }\n      });\n    });\n  };\n\n  return SilentIframeClient;\n}(StandardInteractionClient);\n\nexport { SilentIframeClient };","map":{"version":3,"names":["__extends","__awaiter","__generator","__assign","AuthError","PerformanceEvents","Constants","StringUtils","PromptValue","UrlString","ProtocolUtils","StandardInteractionClient","BrowserAuthError","InteractionType","SilentHandler","NativeMessageHandler","NativeInteractionClient","SilentIframeClient","_super","config","storageImpl","browserCrypto","logger","eventHandler","navigationClient","apiId","performanceClient","nativeStorageImpl","nativeMessageHandler","correlationId","_this","call","nativeStorage","prototype","acquireToken","request","acquireTokenMeasurement","silentRequest","serverTelemetryManager","authClient","e_1","_a","label","addQueueMeasurement","SilentIframeClientAcquireToken","verbose","startMeasurement","isEmpty","loginHint","sid","account","username","warning","prompt","NONE","NO_SESSION","endMeasurement","success","createSilentPromptValueError","setPreQueueTime","StandardInteractionClientInitializeAuthorizationRequest","initializeAuthorizationRequest","Silent","sent","browserStorage","updateCacheEntries","state","nonce","authority","EMPTY_STRING","initializeServerTelemetryManager","trys","push","StandardInteractionClientCreateAuthCodeClient","createAuthCodeClient","azureCloudOptions","SilentIframeClientTokenHelper","silentTokenHelper","then","result","fromCache","requestId","setCorrelationId","cacheFailedRequest","cleanRequestByState","errorCode","undefined","subErrorCode","subError","logout","Promise","reject","createSilentLogoutUnsupportedError","authCodeRequest","navigateUrl","silentHandler","msalFrame","hash","serverParams","nativeInteractionClient","userRequestState","StandardInteractionClientInitializeAuthorizationCodeRequest","initializeAuthorizationCodeRequest","GetAuthCodeUrl","getAuthCodeUrl","nativeBroker","isNativeAvailable","authenticationScheme","system","SilentHandlerInitiateAuthRequest","initiateAuthRequest","SilentHandlerMonitorIframeForHash","monitorIframeForHash","iframeHashTimeout","getDeserializedHash","validateAndExtractStateFromHash","accountId","createNativeConnectionNotEstablishedError","parseRequestState","finally","HandleCodeResponseFromHash","handleCodeResponseFromHash","networkClient"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\nimport { __extends, __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { AuthError, PerformanceEvents, Constants, StringUtils, PromptValue, UrlString, ProtocolUtils } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { InteractionType } from '../utils/BrowserConstants.js';\nimport { SilentHandler } from '../interaction_handler/SilentHandler.js';\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.js';\nimport { NativeInteractionClient } from './NativeInteractionClient.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar SilentIframeClient = /** @class */ (function (_super) {\r\n    __extends(SilentIframeClient, _super);\r\n    function SilentIframeClient(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\r\n        var _this = _super.call(this, config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) || this;\r\n        _this.apiId = apiId;\r\n        _this.nativeStorage = nativeStorageImpl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\r\n     * @param request\r\n     */\r\n    SilentIframeClient.prototype.acquireToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var acquireTokenMeasurement, silentRequest, serverTelemetryManager, authClient, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\r\n                        this.logger.verbose(\"acquireTokenByIframe called\");\r\n                        acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\r\n                        // Check that we have some SSO data\r\n                        if (StringUtils.isEmpty(request.loginHint) && StringUtils.isEmpty(request.sid) && (!request.account || StringUtils.isEmpty(request.account.username))) {\r\n                            this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\r\n                        }\r\n                        // Check that prompt is set to none or no_session, throw error if it is set to anything else.\r\n                        if (request.prompt && (request.prompt !== PromptValue.NONE) && (request.prompt !== PromptValue.NO_SESSION)) {\r\n                            acquireTokenMeasurement.endMeasurement({\r\n                                success: false\r\n                            });\r\n                            throw BrowserAuthError.createSilentPromptValueError(request.prompt);\r\n                        }\r\n                        // Create silent request\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\r\n                        return [4 /*yield*/, this.initializeAuthorizationRequest(__assign(__assign({}, request), { prompt: request.prompt || PromptValue.NONE }), InteractionType.Silent)];\r\n                    case 1:\r\n                        silentRequest = _a.sent();\r\n                        this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 5, , 6]);\r\n                        // Initialize the client\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions)];\r\n                    case 3:\r\n                        authClient = _a.sent();\r\n                        this.logger.verbose(\"Auth code client created\");\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.SilentIframeClientTokenHelper, request.correlationId);\r\n                        return [4 /*yield*/, this.silentTokenHelper(authClient, silentRequest).then(function (result) {\r\n                                acquireTokenMeasurement.endMeasurement({\r\n                                    success: true,\r\n                                    fromCache: false,\r\n                                    requestId: result.requestId\r\n                                });\r\n                                return result;\r\n                            })];\r\n                    case 4: return [2 /*return*/, _a.sent()];\r\n                    case 5:\r\n                        e_1 = _a.sent();\r\n                        if (e_1 instanceof AuthError) {\r\n                            e_1.setCorrelationId(this.correlationId);\r\n                        }\r\n                        serverTelemetryManager.cacheFailedRequest(e_1);\r\n                        this.browserStorage.cleanRequestByState(silentRequest.state);\r\n                        acquireTokenMeasurement.endMeasurement({\r\n                            errorCode: e_1 instanceof AuthError && e_1.errorCode || undefined,\r\n                            subErrorCode: e_1 instanceof AuthError && e_1.subError || undefined,\r\n                            success: false\r\n                        });\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    SilentIframeClient.prototype.logout = function () {\r\n        // Synchronous so we must reject\r\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\r\n    };\r\n    /**\r\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     * @param userRequestScopes\r\n     */\r\n    SilentIframeClient.prototype.silentTokenHelper = function (authClient, silentRequest) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authCodeRequest, navigateUrl, silentHandler, msalFrame, hash, serverParams, state, nativeInteractionClient, userRequestState;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientTokenHelper, silentRequest.correlationId);\r\n                        // Create auth code request and generate PKCE params\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, silentRequest.correlationId);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(silentRequest)];\r\n                    case 1:\r\n                        authCodeRequest = _a.sent();\r\n                        // Create authorize request url\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.GetAuthCodeUrl, silentRequest.correlationId);\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(__assign(__assign({}, silentRequest), { nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme) }))];\r\n                    case 2:\r\n                        navigateUrl = _a.sent();\r\n                        silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system, this.performanceClient);\r\n                        // Get the frame handle for the silent request\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerInitiateAuthRequest, silentRequest.correlationId);\r\n                        return [4 /*yield*/, silentHandler.initiateAuthRequest(navigateUrl)];\r\n                    case 3:\r\n                        msalFrame = _a.sent();\r\n                        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerMonitorIframeForHash, silentRequest.correlationId);\r\n                        return [4 /*yield*/, silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout)];\r\n                    case 4:\r\n                        hash = _a.sent();\r\n                        serverParams = UrlString.getDeserializedHash(hash);\r\n                        state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Silent, authCodeRequest.correlationId);\r\n                        if (serverParams.accountId) {\r\n                            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\r\n                            if (!this.nativeMessageHandler) {\r\n                                throw BrowserAuthError.createNativeConnectionNotEstablishedError();\r\n                            }\r\n                            nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, this.correlationId);\r\n                            userRequestState = ProtocolUtils.parseRequestState(this.browserCrypto, state).userRequestState;\r\n                            return [2 /*return*/, nativeInteractionClient.acquireToken(__assign(__assign({}, silentRequest), { state: userRequestState, prompt: silentRequest.prompt || PromptValue.NONE })).finally(function () {\r\n                                    _this.browserStorage.cleanRequestByState(state);\r\n                                })];\r\n                        }\r\n                        // Handle response from hash string\r\n                        this.performanceClient.setPreQueueTime(PerformanceEvents.HandleCodeResponseFromHash, silentRequest.correlationId);\r\n                        return [2 /*return*/, silentHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SilentIframeClient;\r\n}(StandardInteractionClient));\n\nexport { SilentIframeClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}