{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { __awaiter, __generator, __spread, __assign } from '../_virtual/_tslib.js';\nimport { AccountEntity, AuthenticationScheme, ClientConfigurationError, StringUtils, PerformanceEvents, UrlString, ServerTelemetryManager, AuthorityFactory } from '@azure/msal-common';\nimport { version } from '../packageMetadata.js';\nimport { BrowserConstants } from '../utils/BrowserConstants.js';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar BaseInteractionClient =\n/** @class */\nfunction () {\n  function BaseInteractionClient(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) {\n    this.config = config;\n    this.browserStorage = storageImpl;\n    this.browserCrypto = browserCrypto;\n    this.networkClient = this.config.system.networkClient;\n    this.eventHandler = eventHandler;\n    this.navigationClient = navigationClient;\n    this.nativeMessageHandler = nativeMessageHandler;\n    this.correlationId = correlationId || this.browserCrypto.createNewGuid();\n    this.logger = logger.clone(BrowserConstants.MSAL_SKU, version, this.correlationId);\n    this.performanceClient = performanceClient;\n  }\n\n  BaseInteractionClient.prototype.clearCacheOnLogout = function (account) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!account) return [3\n            /*break*/\n            , 5];\n\n            if (AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\n              this.logger.verbose(\"Setting active account to null\");\n              this.browserStorage.setActiveAccount(null);\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.browserStorage.removeAccount(AccountEntity.generateAccountCacheKey(account))];\n\n          case 2:\n            _a.sent();\n\n            this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            _a.sent();\n\n            this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [3\n            /*break*/\n            , 9];\n\n          case 5:\n            _a.trys.push([5, 8,, 9]);\n\n            this.logger.verbose(\"No account provided in logout request, clearing all cache items.\", this.correlationId); // Clear all accounts and tokens\n\n            return [4\n            /*yield*/\n            , this.browserStorage.clear()];\n\n          case 6:\n            // Clear all accounts and tokens\n            _a.sent(); // Clear any stray keys from IndexedDB\n\n\n            return [4\n            /*yield*/\n            , this.browserCrypto.clearKeystore()];\n\n          case 7:\n            // Clear any stray keys from IndexedDB\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            _a.sent();\n\n            this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\n            return [3\n            /*break*/\n            , 9];\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Initializer function for all request APIs\r\n   * @param request\r\n   */\n\n\n  BaseInteractionClient.prototype.initializeBaseRequest = function (request, account) {\n    return __awaiter(this, void 0, void 0, function () {\n      var authority, scopes, validatedRequest, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            this.performanceClient.addQueueMeasurement(PerformanceEvents.InitializeBaseRequest, request.correlationId);\n            this.logger.verbose(\"Initializing BaseAuthRequest\");\n            authority = request.authority || this.config.auth.authority;\n            if (!account) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.validateRequestAuthority(authority, account)];\n\n          case 1:\n            _b.sent();\n\n            _b.label = 2;\n\n          case 2:\n            scopes = __spread(request && request.scopes || []);\n            validatedRequest = __assign(__assign({}, request), {\n              correlationId: this.correlationId,\n              authority: authority,\n              scopes: scopes\n            }); // Set authenticationScheme to BEARER if not explicitly set in the request\n\n            if (!validatedRequest.authenticationScheme) {\n              validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\n              this.logger.verbose(\"Authentication Scheme wasn't explicitly set in request, defaulting to \\\"Bearer\\\" request\");\n            } else {\n              if (validatedRequest.authenticationScheme === AuthenticationScheme.SSH) {\n                if (!request.sshJwk) {\n                  throw ClientConfigurationError.createMissingSshJwkError();\n                }\n\n                if (!request.sshKid) {\n                  throw ClientConfigurationError.createMissingSshKidError();\n                }\n              }\n\n              this.logger.verbose(\"Authentication Scheme set to \\\"\" + validatedRequest.authenticationScheme + \"\\\" as configured in Auth request\");\n            }\n\n            if (!(this.config.cache.claimsBasedCachingEnabled && request.claims && !StringUtils.isEmptyObj(request.claims))) return [3\n            /*break*/\n            , 4];\n            _a = validatedRequest;\n            return [4\n            /*yield*/\n            , this.browserCrypto.hashString(request.claims)];\n\n          case 3:\n            _a.requestedClaimsHash = _b.sent();\n            _b.label = 4;\n\n          case 4:\n            return [2\n            /*return*/\n            , validatedRequest];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * Use to get the redirect uri configured in MSAL or null.\r\n   * @param requestRedirectUri\r\n   * @returns Redirect URL\r\n   *\r\n   */\n\n\n  BaseInteractionClient.prototype.getRedirectUri = function (requestRedirectUri) {\n    this.logger.verbose(\"getRedirectUri called\");\n    var redirectUri = requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\n    return UrlString.getAbsoluteUrl(redirectUri, BrowserUtils.getCurrentUri());\n  };\n  /*\r\n   * If authority provided in the request does not match environment/authority specified\r\n   * in the account or MSAL config, we throw an error.\r\n   */\n\n\n  BaseInteractionClient.prototype.validateRequestAuthority = function (authority, account) {\n    return __awaiter(this, void 0, void 0, function () {\n      var discoveredAuthority;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getDiscoveredAuthority(authority)];\n\n          case 1:\n            discoveredAuthority = _a.sent();\n\n            if (!discoveredAuthority.isAlias(account.environment)) {\n              throw ClientConfigurationError.createAuthorityMismatchError();\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   *\r\n   * @param apiId\r\n   * @param correlationId\r\n   * @param forceRefresh\r\n   */\n\n\n  BaseInteractionClient.prototype.initializeServerTelemetryManager = function (apiId, forceRefresh) {\n    this.logger.verbose(\"initializeServerTelemetryManager called\");\n    var telemetryPayload = {\n      clientId: this.config.auth.clientId,\n      correlationId: this.correlationId,\n      apiId: apiId,\n      forceRefresh: forceRefresh || false,\n      wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\n      wrapperVer: this.browserStorage.getWrapperMetadata()[1]\n    };\n    return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\n  };\n  /**\r\n   * Used to get a discovered version of the default authority.\r\n   * @param requestAuthority\r\n   * @param requestCorrelationId\r\n   */\n\n\n  BaseInteractionClient.prototype.getDiscoveredAuthority = function (requestAuthority) {\n    return __awaiter(this, void 0, void 0, function () {\n      var authorityOptions;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"getDiscoveredAuthority called\");\n            authorityOptions = {\n              protocolMode: this.config.auth.protocolMode,\n              knownAuthorities: this.config.auth.knownAuthorities,\n              cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n              authorityMetadata: this.config.auth.authorityMetadata\n            };\n            if (!requestAuthority) return [3\n            /*break*/\n            , 2];\n            this.logger.verbose(\"Creating discovered authority with request authority\");\n            return [4\n            /*yield*/\n            , AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 2:\n            this.logger.verbose(\"Creating discovered authority with configured authority\");\n            return [4\n            /*yield*/\n            , AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger)];\n\n          case 3:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  return BaseInteractionClient;\n}();\n\nexport { BaseInteractionClient };","map":{"version":3,"names":["__awaiter","__generator","__spread","__assign","AccountEntity","AuthenticationScheme","ClientConfigurationError","StringUtils","PerformanceEvents","UrlString","ServerTelemetryManager","AuthorityFactory","version","BrowserConstants","BrowserUtils","BaseInteractionClient","config","storageImpl","browserCrypto","logger","eventHandler","navigationClient","performanceClient","nativeMessageHandler","correlationId","browserStorage","networkClient","system","createNewGuid","clone","MSAL_SKU","prototype","clearCacheOnLogout","account","_a","label","accountInfoIsEqual","getActiveAccount","verbose","setActiveAccount","trys","push","removeAccount","generateAccountCacheKey","sent","error","clear","clearKeystore","initializeBaseRequest","request","authority","scopes","validatedRequest","_b","addQueueMeasurement","InitializeBaseRequest","auth","validateRequestAuthority","authenticationScheme","BEARER","SSH","sshJwk","createMissingSshJwkError","sshKid","createMissingSshKidError","cache","claimsBasedCachingEnabled","claims","isEmptyObj","hashString","requestedClaimsHash","getRedirectUri","requestRedirectUri","redirectUri","getCurrentUri","getAbsoluteUrl","discoveredAuthority","getDiscoveredAuthority","isAlias","environment","createAuthorityMismatchError","initializeServerTelemetryManager","apiId","forceRefresh","telemetryPayload","clientId","wrapperSKU","getWrapperMetadata","wrapperVer","requestAuthority","authorityOptions","protocolMode","knownAuthorities","cloudDiscoveryMetadata","authorityMetadata","createDiscoveredInstance"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\nimport { __awaiter, __generator, __spread, __assign } from '../_virtual/_tslib.js';\nimport { AccountEntity, AuthenticationScheme, ClientConfigurationError, StringUtils, PerformanceEvents, UrlString, ServerTelemetryManager, AuthorityFactory } from '@azure/msal-common';\nimport { version } from '../packageMetadata.js';\nimport { BrowserConstants } from '../utils/BrowserConstants.js';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar BaseInteractionClient = /** @class */ (function () {\r\n    function BaseInteractionClient(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) {\r\n        this.config = config;\r\n        this.browserStorage = storageImpl;\r\n        this.browserCrypto = browserCrypto;\r\n        this.networkClient = this.config.system.networkClient;\r\n        this.eventHandler = eventHandler;\r\n        this.navigationClient = navigationClient;\r\n        this.nativeMessageHandler = nativeMessageHandler;\r\n        this.correlationId = correlationId || this.browserCrypto.createNewGuid();\r\n        this.logger = logger.clone(BrowserConstants.MSAL_SKU, version, this.correlationId);\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    BaseInteractionClient.prototype.clearCacheOnLogout = function (account) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!account) return [3 /*break*/, 5];\r\n                        if (AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\r\n                            this.logger.verbose(\"Setting active account to null\");\r\n                            this.browserStorage.setActiveAccount(null);\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.browserStorage.removeAccount(AccountEntity.generateAccountCacheKey(account))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _a.sent();\r\n                        this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [3 /*break*/, 9];\r\n                    case 5:\r\n                        _a.trys.push([5, 8, , 9]);\r\n                        this.logger.verbose(\"No account provided in logout request, clearing all cache items.\", this.correlationId);\r\n                        // Clear all accounts and tokens\r\n                        return [4 /*yield*/, this.browserStorage.clear()];\r\n                    case 6:\r\n                        // Clear all accounts and tokens\r\n                        _a.sent();\r\n                        // Clear any stray keys from IndexedDB\r\n                        return [4 /*yield*/, this.browserCrypto.clearKeystore()];\r\n                    case 7:\r\n                        // Clear any stray keys from IndexedDB\r\n                        _a.sent();\r\n                        return [3 /*break*/, 9];\r\n                    case 8:\r\n                        _a.sent();\r\n                        this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\r\n                        return [3 /*break*/, 9];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initializer function for all request APIs\r\n     * @param request\r\n     */\r\n    BaseInteractionClient.prototype.initializeBaseRequest = function (request, account) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authority, scopes, validatedRequest, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        this.performanceClient.addQueueMeasurement(PerformanceEvents.InitializeBaseRequest, request.correlationId);\r\n                        this.logger.verbose(\"Initializing BaseAuthRequest\");\r\n                        authority = request.authority || this.config.auth.authority;\r\n                        if (!account) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.validateRequestAuthority(authority, account)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        scopes = __spread(((request && request.scopes) || []));\r\n                        validatedRequest = __assign(__assign({}, request), { correlationId: this.correlationId, authority: authority,\r\n                            scopes: scopes });\r\n                        // Set authenticationScheme to BEARER if not explicitly set in the request\r\n                        if (!validatedRequest.authenticationScheme) {\r\n                            validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\r\n                            this.logger.verbose(\"Authentication Scheme wasn't explicitly set in request, defaulting to \\\"Bearer\\\" request\");\r\n                        }\r\n                        else {\r\n                            if (validatedRequest.authenticationScheme === AuthenticationScheme.SSH) {\r\n                                if (!request.sshJwk) {\r\n                                    throw ClientConfigurationError.createMissingSshJwkError();\r\n                                }\r\n                                if (!request.sshKid) {\r\n                                    throw ClientConfigurationError.createMissingSshKidError();\r\n                                }\r\n                            }\r\n                            this.logger.verbose(\"Authentication Scheme set to \\\"\" + validatedRequest.authenticationScheme + \"\\\" as configured in Auth request\");\r\n                        }\r\n                        if (!(this.config.cache.claimsBasedCachingEnabled && request.claims && !StringUtils.isEmptyObj(request.claims))) return [3 /*break*/, 4];\r\n                        _a = validatedRequest;\r\n                        return [4 /*yield*/, this.browserCrypto.hashString(request.claims)];\r\n                    case 3:\r\n                        _a.requestedClaimsHash = _b.sent();\r\n                        _b.label = 4;\r\n                    case 4: return [2 /*return*/, validatedRequest];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * @param requestRedirectUri\r\n     * @returns Redirect URL\r\n     *\r\n     */\r\n    BaseInteractionClient.prototype.getRedirectUri = function (requestRedirectUri) {\r\n        this.logger.verbose(\"getRedirectUri called\");\r\n        var redirectUri = requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\r\n        return UrlString.getAbsoluteUrl(redirectUri, BrowserUtils.getCurrentUri());\r\n    };\r\n    /*\r\n     * If authority provided in the request does not match environment/authority specified\r\n     * in the account or MSAL config, we throw an error.\r\n     */\r\n    BaseInteractionClient.prototype.validateRequestAuthority = function (authority, account) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var discoveredAuthority;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDiscoveredAuthority(authority)];\r\n                    case 1:\r\n                        discoveredAuthority = _a.sent();\r\n                        if (!discoveredAuthority.isAlias(account.environment)) {\r\n                            throw ClientConfigurationError.createAuthorityMismatchError();\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param apiId\r\n     * @param correlationId\r\n     * @param forceRefresh\r\n     */\r\n    BaseInteractionClient.prototype.initializeServerTelemetryManager = function (apiId, forceRefresh) {\r\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\r\n        var telemetryPayload = {\r\n            clientId: this.config.auth.clientId,\r\n            correlationId: this.correlationId,\r\n            apiId: apiId,\r\n            forceRefresh: forceRefresh || false,\r\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\r\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1]\r\n        };\r\n        return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\r\n    };\r\n    /**\r\n     * Used to get a discovered version of the default authority.\r\n     * @param requestAuthority\r\n     * @param requestCorrelationId\r\n     */\r\n    BaseInteractionClient.prototype.getDiscoveredAuthority = function (requestAuthority) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authorityOptions;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"getDiscoveredAuthority called\");\r\n                        authorityOptions = {\r\n                            protocolMode: this.config.auth.protocolMode,\r\n                            knownAuthorities: this.config.auth.knownAuthorities,\r\n                            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n                            authorityMetadata: this.config.auth.authorityMetadata\r\n                        };\r\n                        if (!requestAuthority) return [3 /*break*/, 2];\r\n                        this.logger.verbose(\"Creating discovered authority with request authority\");\r\n                        return [4 /*yield*/, AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                    case 2:\r\n                        this.logger.verbose(\"Creating discovered authority with configured authority\");\r\n                        return [4 /*yield*/, AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger)];\r\n                    case 3: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return BaseInteractionClient;\r\n}());\n\nexport { BaseInteractionClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}