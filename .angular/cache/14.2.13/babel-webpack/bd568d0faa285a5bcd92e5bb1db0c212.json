{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { EventType } from './EventType.js';\nimport { InteractionType, InteractionStatus } from '../utils/BrowserConstants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar EventMessageUtils =\n/** @class */\nfunction () {\n  function EventMessageUtils() {}\n  /**\r\n   * Gets interaction status from event message\r\n   * @param message\r\n   * @param currentStatus\r\n   */\n\n\n  EventMessageUtils.getInteractionStatusFromEvent = function (message, currentStatus) {\n    switch (message.eventType) {\n      case EventType.LOGIN_START:\n        return InteractionStatus.Login;\n\n      case EventType.SSO_SILENT_START:\n        return InteractionStatus.SsoSilent;\n\n      case EventType.ACQUIRE_TOKEN_START:\n        if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n          return InteractionStatus.AcquireToken;\n        }\n\n        break;\n\n      case EventType.HANDLE_REDIRECT_START:\n        return InteractionStatus.HandleRedirect;\n\n      case EventType.LOGOUT_START:\n        return InteractionStatus.Logout;\n\n      case EventType.SSO_SILENT_SUCCESS:\n      case EventType.SSO_SILENT_FAILURE:\n        if (currentStatus && currentStatus !== InteractionStatus.SsoSilent) {\n          // Prevent this event from clearing any status other than ssoSilent\n          break;\n        }\n\n        return InteractionStatus.None;\n\n      case EventType.LOGOUT_END:\n        if (currentStatus && currentStatus !== InteractionStatus.Logout) {\n          // Prevent this event from clearing any status other than logout\n          break;\n        }\n\n        return InteractionStatus.None;\n\n      case EventType.HANDLE_REDIRECT_END:\n        if (currentStatus && currentStatus !== InteractionStatus.HandleRedirect) {\n          // Prevent this event from clearing any status other than handleRedirect\n          break;\n        }\n\n        return InteractionStatus.None;\n\n      case EventType.LOGIN_SUCCESS:\n      case EventType.LOGIN_FAILURE:\n      case EventType.ACQUIRE_TOKEN_SUCCESS:\n      case EventType.ACQUIRE_TOKEN_FAILURE:\n      case EventType.RESTORE_FROM_BFCACHE:\n        if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n          if (currentStatus && currentStatus !== InteractionStatus.Login && currentStatus !== InteractionStatus.AcquireToken) {\n            // Prevent this event from clearing any status other than login or acquireToken\n            break;\n          }\n\n          return InteractionStatus.None;\n        }\n\n        break;\n    }\n\n    return null;\n  };\n\n  return EventMessageUtils;\n}();\n\nexport { EventMessageUtils };","map":{"version":3,"names":["EventType","InteractionType","InteractionStatus","EventMessageUtils","getInteractionStatusFromEvent","message","currentStatus","eventType","LOGIN_START","Login","SSO_SILENT_START","SsoSilent","ACQUIRE_TOKEN_START","interactionType","Redirect","Popup","AcquireToken","HANDLE_REDIRECT_START","HandleRedirect","LOGOUT_START","Logout","SSO_SILENT_SUCCESS","SSO_SILENT_FAILURE","None","LOGOUT_END","HANDLE_REDIRECT_END","LOGIN_SUCCESS","LOGIN_FAILURE","ACQUIRE_TOKEN_SUCCESS","ACQUIRE_TOKEN_FAILURE","RESTORE_FROM_BFCACHE"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/event/EventMessage.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\nimport { EventType } from './EventType.js';\nimport { InteractionType, InteractionStatus } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar EventMessageUtils = /** @class */ (function () {\r\n    function EventMessageUtils() {\r\n    }\r\n    /**\r\n     * Gets interaction status from event message\r\n     * @param message\r\n     * @param currentStatus\r\n     */\r\n    EventMessageUtils.getInteractionStatusFromEvent = function (message, currentStatus) {\r\n        switch (message.eventType) {\r\n            case EventType.LOGIN_START:\r\n                return InteractionStatus.Login;\r\n            case EventType.SSO_SILENT_START:\r\n                return InteractionStatus.SsoSilent;\r\n            case EventType.ACQUIRE_TOKEN_START:\r\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\r\n                    return InteractionStatus.AcquireToken;\r\n                }\r\n                break;\r\n            case EventType.HANDLE_REDIRECT_START:\r\n                return InteractionStatus.HandleRedirect;\r\n            case EventType.LOGOUT_START:\r\n                return InteractionStatus.Logout;\r\n            case EventType.SSO_SILENT_SUCCESS:\r\n            case EventType.SSO_SILENT_FAILURE:\r\n                if (currentStatus && currentStatus !== InteractionStatus.SsoSilent) {\r\n                    // Prevent this event from clearing any status other than ssoSilent\r\n                    break;\r\n                }\r\n                return InteractionStatus.None;\r\n            case EventType.LOGOUT_END:\r\n                if (currentStatus && currentStatus !== InteractionStatus.Logout) {\r\n                    // Prevent this event from clearing any status other than logout\r\n                    break;\r\n                }\r\n                return InteractionStatus.None;\r\n            case EventType.HANDLE_REDIRECT_END:\r\n                if (currentStatus && currentStatus !== InteractionStatus.HandleRedirect) {\r\n                    // Prevent this event from clearing any status other than handleRedirect\r\n                    break;\r\n                }\r\n                return InteractionStatus.None;\r\n            case EventType.LOGIN_SUCCESS:\r\n            case EventType.LOGIN_FAILURE:\r\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\r\n            case EventType.ACQUIRE_TOKEN_FAILURE:\r\n            case EventType.RESTORE_FROM_BFCACHE:\r\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\r\n                    if (currentStatus && currentStatus !== InteractionStatus.Login && currentStatus !== InteractionStatus.AcquireToken) {\r\n                        // Prevent this event from clearing any status other than login or acquireToken\r\n                        break;\r\n                    }\r\n                    return InteractionStatus.None;\r\n                }\r\n                break;\r\n        }\r\n        return null;\r\n    };\r\n    return EventMessageUtils;\r\n}());\n\nexport { EventMessageUtils };\n"],"mappings":"AAAA;AACA;;AACA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,8BAAnD;AAEA;AACA;AACA;AACA;;AACA,IAAIC,iBAAiB;AAAG;AAAe,YAAY;EAC/C,SAASA,iBAAT,GAA6B,CAC5B;EACD;AACJ;AACA;AACA;AACA;;;EACIA,iBAAiB,CAACC,6BAAlB,GAAkD,UAAUC,OAAV,EAAmBC,aAAnB,EAAkC;IAChF,QAAQD,OAAO,CAACE,SAAhB;MACI,KAAKP,SAAS,CAACQ,WAAf;QACI,OAAON,iBAAiB,CAACO,KAAzB;;MACJ,KAAKT,SAAS,CAACU,gBAAf;QACI,OAAOR,iBAAiB,CAACS,SAAzB;;MACJ,KAAKX,SAAS,CAACY,mBAAf;QACI,IAAIP,OAAO,CAACQ,eAAR,KAA4BZ,eAAe,CAACa,QAA5C,IAAwDT,OAAO,CAACQ,eAAR,KAA4BZ,eAAe,CAACc,KAAxG,EAA+G;UAC3G,OAAOb,iBAAiB,CAACc,YAAzB;QACH;;QACD;;MACJ,KAAKhB,SAAS,CAACiB,qBAAf;QACI,OAAOf,iBAAiB,CAACgB,cAAzB;;MACJ,KAAKlB,SAAS,CAACmB,YAAf;QACI,OAAOjB,iBAAiB,CAACkB,MAAzB;;MACJ,KAAKpB,SAAS,CAACqB,kBAAf;MACA,KAAKrB,SAAS,CAACsB,kBAAf;QACI,IAAIhB,aAAa,IAAIA,aAAa,KAAKJ,iBAAiB,CAACS,SAAzD,EAAoE;UAChE;UACA;QACH;;QACD,OAAOT,iBAAiB,CAACqB,IAAzB;;MACJ,KAAKvB,SAAS,CAACwB,UAAf;QACI,IAAIlB,aAAa,IAAIA,aAAa,KAAKJ,iBAAiB,CAACkB,MAAzD,EAAiE;UAC7D;UACA;QACH;;QACD,OAAOlB,iBAAiB,CAACqB,IAAzB;;MACJ,KAAKvB,SAAS,CAACyB,mBAAf;QACI,IAAInB,aAAa,IAAIA,aAAa,KAAKJ,iBAAiB,CAACgB,cAAzD,EAAyE;UACrE;UACA;QACH;;QACD,OAAOhB,iBAAiB,CAACqB,IAAzB;;MACJ,KAAKvB,SAAS,CAAC0B,aAAf;MACA,KAAK1B,SAAS,CAAC2B,aAAf;MACA,KAAK3B,SAAS,CAAC4B,qBAAf;MACA,KAAK5B,SAAS,CAAC6B,qBAAf;MACA,KAAK7B,SAAS,CAAC8B,oBAAf;QACI,IAAIzB,OAAO,CAACQ,eAAR,KAA4BZ,eAAe,CAACa,QAA5C,IAAwDT,OAAO,CAACQ,eAAR,KAA4BZ,eAAe,CAACc,KAAxG,EAA+G;UAC3G,IAAIT,aAAa,IAAIA,aAAa,KAAKJ,iBAAiB,CAACO,KAArD,IAA8DH,aAAa,KAAKJ,iBAAiB,CAACc,YAAtG,EAAoH;YAChH;YACA;UACH;;UACD,OAAOd,iBAAiB,CAACqB,IAAzB;QACH;;QACD;IA7CR;;IA+CA,OAAO,IAAP;EACH,CAjDD;;EAkDA,OAAOpB,iBAAP;AACH,CA3DsC,EAAvC;;AA6DA,SAASA,iBAAT"},"metadata":{},"sourceType":"module"}