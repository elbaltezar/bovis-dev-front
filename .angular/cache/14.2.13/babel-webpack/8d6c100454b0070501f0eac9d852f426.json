{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { Constants } from '@azure/msal-common';\nimport { BrowserStringUtils } from '../utils/BrowserStringUtils.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\n\nvar Base64Encode =\n/** @class */\nfunction () {\n  function Base64Encode() {}\n  /**\r\n   * Returns URL Safe b64 encoded string from a plaintext string.\r\n   * @param input\r\n   */\n\n\n  Base64Encode.prototype.urlEncode = function (input) {\n    return encodeURIComponent(this.encode(input).replace(/=/g, Constants.EMPTY_STRING).replace(/\\+/g, \"-\").replace(/\\//g, \"_\"));\n  };\n  /**\r\n   * Returns URL Safe b64 encoded string from an int8Array.\r\n   * @param inputArr\r\n   */\n\n\n  Base64Encode.prototype.urlEncodeArr = function (inputArr) {\n    return this.base64EncArr(inputArr).replace(/=/g, Constants.EMPTY_STRING).replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n  };\n  /**\r\n   * Returns b64 encoded string from plaintext string.\r\n   * @param input\r\n   */\n\n\n  Base64Encode.prototype.encode = function (input) {\n    var inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\n    return this.base64EncArr(inputUtf8Arr);\n  };\n  /**\r\n   * Base64 encode byte array\r\n   * @param aBytes\r\n   */\n\n\n  Base64Encode.prototype.base64EncArr = function (aBytes) {\n    var eqLen = (3 - aBytes.length % 3) % 3;\n    var sB64Enc = Constants.EMPTY_STRING;\n\n    for (var nMod3 = void 0, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n      nMod3 = nIdx % 3;\n      /* Uncomment the following line in order to split the output in lines 76-character long: */\n\n      /*\r\n       *if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n       */\n\n      nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\n\n      if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n        sB64Enc += String.fromCharCode(this.uint6ToB64(nUint24 >>> 18 & 63), this.uint6ToB64(nUint24 >>> 12 & 63), this.uint6ToB64(nUint24 >>> 6 & 63), this.uint6ToB64(nUint24 & 63));\n        nUint24 = 0;\n      }\n    }\n\n    return eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\n  };\n  /**\r\n   * Base64 string to array encoding helper\r\n   * @param nUint6\r\n   */\n\n\n  Base64Encode.prototype.uint6ToB64 = function (nUint6) {\n    return nUint6 < 26 ? nUint6 + 65 : nUint6 < 52 ? nUint6 + 71 : nUint6 < 62 ? nUint6 - 4 : nUint6 === 62 ? 43 : nUint6 === 63 ? 47 : 65;\n  };\n\n  return Base64Encode;\n}();\n\nexport { Base64Encode };","map":{"version":3,"names":["Constants","BrowserStringUtils","Base64Encode","prototype","urlEncode","input","encodeURIComponent","encode","replace","EMPTY_STRING","urlEncodeArr","inputArr","base64EncArr","inputUtf8Arr","stringToUtf8Arr","aBytes","eqLen","length","sB64Enc","nMod3","nLen","nUint24","nIdx","String","fromCharCode","uint6ToB64","substring","nUint6"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/encode/Base64Encode.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\nimport { Constants } from '@azure/msal-common';\nimport { BrowserStringUtils } from '../utils/BrowserStringUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar Base64Encode = /** @class */ (function () {\r\n    function Base64Encode() {\r\n    }\r\n    /**\r\n     * Returns URL Safe b64 encoded string from a plaintext string.\r\n     * @param input\r\n     */\r\n    Base64Encode.prototype.urlEncode = function (input) {\r\n        return encodeURIComponent(this.encode(input)\r\n            .replace(/=/g, Constants.EMPTY_STRING)\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\"));\r\n    };\r\n    /**\r\n     * Returns URL Safe b64 encoded string from an int8Array.\r\n     * @param inputArr\r\n     */\r\n    Base64Encode.prototype.urlEncodeArr = function (inputArr) {\r\n        return this.base64EncArr(inputArr)\r\n            .replace(/=/g, Constants.EMPTY_STRING)\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    };\r\n    /**\r\n     * Returns b64 encoded string from plaintext string.\r\n     * @param input\r\n     */\r\n    Base64Encode.prototype.encode = function (input) {\r\n        var inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\r\n        return this.base64EncArr(inputUtf8Arr);\r\n    };\r\n    /**\r\n     * Base64 encode byte array\r\n     * @param aBytes\r\n     */\r\n    Base64Encode.prototype.base64EncArr = function (aBytes) {\r\n        var eqLen = (3 - (aBytes.length % 3)) % 3;\r\n        var sB64Enc = Constants.EMPTY_STRING;\r\n        for (var nMod3 = void 0, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\r\n            /*\r\n             *if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n             */\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(this.uint6ToB64(nUint24 >>> 18 & 63), this.uint6ToB64(nUint24 >>> 12 & 63), this.uint6ToB64(nUint24 >>> 6 & 63), this.uint6ToB64(nUint24 & 63));\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n        return eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\r\n    };\r\n    /**\r\n     * Base64 string to array encoding helper\r\n     * @param nUint6\r\n     */\r\n    Base64Encode.prototype.uint6ToB64 = function (nUint6) {\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                                65;\r\n    };\r\n    return Base64Encode;\r\n}());\n\nexport { Base64Encode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}