{"ast":null,"code":"/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\n\nimport { SERVER_TELEM_CONSTANTS } from '../../utils/Constants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar ServerTelemetryEntity =\n/** @class */\nfunction () {\n  function ServerTelemetryEntity() {\n    this.failedRequests = [];\n    this.errors = [];\n    this.cacheHits = 0;\n  }\n  /**\r\n   * validates if a given cache entry is \"Telemetry\", parses <key,value>\r\n   * @param key\r\n   * @param entity\r\n   */\n\n\n  ServerTelemetryEntity.isServerTelemetryEntity = function (key, entity) {\n    var validateKey = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n    var validateEntity = true;\n\n    if (entity) {\n      validateEntity = entity.hasOwnProperty(\"failedRequests\") && entity.hasOwnProperty(\"errors\") && entity.hasOwnProperty(\"cacheHits\");\n    }\n\n    return validateKey && validateEntity;\n  };\n\n  return ServerTelemetryEntity;\n}();\n\nexport { ServerTelemetryEntity };","map":{"version":3,"names":["SERVER_TELEM_CONSTANTS","ServerTelemetryEntity","failedRequests","errors","cacheHits","isServerTelemetryEntity","key","entity","validateKey","indexOf","CACHE_KEY","validateEntity","hasOwnProperty"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-common/dist/cache/entities/ServerTelemetryEntity.js"],"sourcesContent":["/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\nimport { SERVER_TELEM_CONSTANTS } from '../../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar ServerTelemetryEntity = /** @class */ (function () {\r\n    function ServerTelemetryEntity() {\r\n        this.failedRequests = [];\r\n        this.errors = [];\r\n        this.cacheHits = 0;\r\n    }\r\n    /**\r\n     * validates if a given cache entry is \"Telemetry\", parses <key,value>\r\n     * @param key\r\n     * @param entity\r\n     */\r\n    ServerTelemetryEntity.isServerTelemetryEntity = function (key, entity) {\r\n        var validateKey = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\r\n        var validateEntity = true;\r\n        if (entity) {\r\n            validateEntity =\r\n                entity.hasOwnProperty(\"failedRequests\") &&\r\n                    entity.hasOwnProperty(\"errors\") &&\r\n                    entity.hasOwnProperty(\"cacheHits\");\r\n        }\r\n        return validateKey && validateEntity;\r\n    };\r\n    return ServerTelemetryEntity;\r\n}());\n\nexport { ServerTelemetryEntity };\n"],"mappings":"AAAA;AACA;;AACA,SAASA,sBAAT,QAAuC,0BAAvC;AAEA;AACA;AACA;AACA;;AACA,IAAIC,qBAAqB;AAAG;AAAe,YAAY;EACnD,SAASA,qBAAT,GAAiC;IAC7B,KAAKC,cAAL,GAAsB,EAAtB;IACA,KAAKC,MAAL,GAAc,EAAd;IACA,KAAKC,SAAL,GAAiB,CAAjB;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIH,qBAAqB,CAACI,uBAAtB,GAAgD,UAAUC,GAAV,EAAeC,MAAf,EAAuB;IACnE,IAAIC,WAAW,GAAGF,GAAG,CAACG,OAAJ,CAAYT,sBAAsB,CAACU,SAAnC,MAAkD,CAApE;IACA,IAAIC,cAAc,GAAG,IAArB;;IACA,IAAIJ,MAAJ,EAAY;MACRI,cAAc,GACVJ,MAAM,CAACK,cAAP,CAAsB,gBAAtB,KACIL,MAAM,CAACK,cAAP,CAAsB,QAAtB,CADJ,IAEIL,MAAM,CAACK,cAAP,CAAsB,WAAtB,CAHR;IAIH;;IACD,OAAOJ,WAAW,IAAIG,cAAtB;EACH,CAVD;;EAWA,OAAOV,qBAAP;AACH,CAvB0C,EAA3C;;AAyBA,SAASA,qBAAT"},"metadata":{},"sourceType":"module"}