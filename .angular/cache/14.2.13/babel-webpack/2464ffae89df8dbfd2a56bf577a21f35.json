{"ast":null,"code":"/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\n\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { Constants } from '../utils/Constants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Log message level.\r\n */\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\n  LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\n  LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n  LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\n  LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\n})(LogLevel || (LogLevel = {}));\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\n\n\nvar Logger =\n/** @class */\nfunction () {\n  function Logger(loggerOptions, packageName, packageVersion) {\n    // Current log level, defaults to info.\n    this.level = LogLevel.Info;\n\n    var defaultLoggerCallback = function () {\n      return;\n    };\n\n    var setLoggerOptions = loggerOptions || Logger.createDefaultLoggerOptions();\n    this.localCallback = setLoggerOptions.loggerCallback || defaultLoggerCallback;\n    this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\n    this.level = typeof setLoggerOptions.logLevel === \"number\" ? setLoggerOptions.logLevel : LogLevel.Info;\n    this.correlationId = setLoggerOptions.correlationId || Constants.EMPTY_STRING;\n    this.packageName = packageName || Constants.EMPTY_STRING;\n    this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n  }\n\n  Logger.createDefaultLoggerOptions = function () {\n    return {\n      loggerCallback: function () {// allow users to not set loggerCallback\n      },\n      piiLoggingEnabled: false,\n      logLevel: LogLevel.Info\n    };\n  };\n  /**\r\n   * Create new Logger with existing configurations.\r\n   */\n\n\n  Logger.prototype.clone = function (packageName, packageVersion, correlationId) {\n    return new Logger({\n      loggerCallback: this.localCallback,\n      piiLoggingEnabled: this.piiLoggingEnabled,\n      logLevel: this.level,\n      correlationId: correlationId || this.correlationId\n    }, packageName, packageVersion);\n  };\n  /**\r\n   * Log message with required options.\r\n   */\n\n\n  Logger.prototype.logMessage = function (logMessage, options) {\n    if (options.logLevel > this.level || !this.piiLoggingEnabled && options.containsPii) {\n      return;\n    }\n\n    var timestamp = new Date().toUTCString(); // Add correlationId to logs if set, correlationId provided on log messages take precedence\n\n    var logHeader;\n\n    if (!StringUtils.isEmpty(options.correlationId)) {\n      logHeader = \"[\" + timestamp + \"] : [\" + options.correlationId + \"]\";\n    } else if (!StringUtils.isEmpty(this.correlationId)) {\n      logHeader = \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\n    } else {\n      logHeader = \"[\" + timestamp + \"]\";\n    }\n\n    var log = logHeader + \" : \" + this.packageName + \"@\" + this.packageVersion + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage; // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n\n    this.executeCallback(options.logLevel, log, options.containsPii || false);\n  };\n  /**\r\n   * Execute callback with message.\r\n   */\n\n\n  Logger.prototype.executeCallback = function (level, message, containsPii) {\n    if (this.localCallback) {\n      this.localCallback(level, message, containsPii);\n    }\n  };\n  /**\r\n   * Logs error messages.\r\n   */\n\n\n  Logger.prototype.error = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Error,\n      containsPii: false,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  };\n  /**\r\n   * Logs error messages with PII.\r\n   */\n\n\n  Logger.prototype.errorPii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Error,\n      containsPii: true,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  };\n  /**\r\n   * Logs warning messages.\r\n   */\n\n\n  Logger.prototype.warning = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Warning,\n      containsPii: false,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  };\n  /**\r\n   * Logs warning messages with PII.\r\n   */\n\n\n  Logger.prototype.warningPii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Warning,\n      containsPii: true,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  };\n  /**\r\n   * Logs info messages.\r\n   */\n\n\n  Logger.prototype.info = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Info,\n      containsPii: false,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  };\n  /**\r\n   * Logs info messages with PII.\r\n   */\n\n\n  Logger.prototype.infoPii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Info,\n      containsPii: true,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  };\n  /**\r\n   * Logs verbose messages.\r\n   */\n\n\n  Logger.prototype.verbose = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Verbose,\n      containsPii: false,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  };\n  /**\r\n   * Logs verbose messages with PII.\r\n   */\n\n\n  Logger.prototype.verbosePii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Verbose,\n      containsPii: true,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  };\n  /**\r\n   * Logs trace messages.\r\n   */\n\n\n  Logger.prototype.trace = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Trace,\n      containsPii: false,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  };\n  /**\r\n   * Logs trace messages with PII.\r\n   */\n\n\n  Logger.prototype.tracePii = function (message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Trace,\n      containsPii: true,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  };\n  /**\r\n   * Returns whether PII Logging is enabled or not.\r\n   */\n\n\n  Logger.prototype.isPiiLoggingEnabled = function () {\n    return this.piiLoggingEnabled || false;\n  };\n\n  return Logger;\n}();\n\nexport { LogLevel, Logger };","map":{"version":3,"names":["StringUtils","Constants","LogLevel","Logger","loggerOptions","packageName","packageVersion","level","Info","defaultLoggerCallback","setLoggerOptions","createDefaultLoggerOptions","localCallback","loggerCallback","piiLoggingEnabled","logLevel","correlationId","EMPTY_STRING","prototype","clone","logMessage","options","containsPii","timestamp","Date","toUTCString","logHeader","isEmpty","log","executeCallback","message","error","Error","errorPii","warning","Warning","warningPii","info","infoPii","verbose","Verbose","verbosePii","trace","Trace","tracePii","isPiiLoggingEnabled"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-common/dist/logger/Logger.js"],"sourcesContent":["/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { Constants } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(loggerOptions, packageName, packageVersion) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        var defaultLoggerCallback = function () {\r\n            return;\r\n        };\r\n        var setLoggerOptions = loggerOptions || Logger.createDefaultLoggerOptions();\r\n        this.localCallback = setLoggerOptions.loggerCallback || defaultLoggerCallback;\r\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\r\n        this.level = typeof (setLoggerOptions.logLevel) === \"number\" ? setLoggerOptions.logLevel : LogLevel.Info;\r\n        this.correlationId = setLoggerOptions.correlationId || Constants.EMPTY_STRING;\r\n        this.packageName = packageName || Constants.EMPTY_STRING;\r\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\r\n    }\r\n    Logger.createDefaultLoggerOptions = function () {\r\n        return {\r\n            loggerCallback: function () {\r\n                // allow users to not set loggerCallback\r\n            },\r\n            piiLoggingEnabled: false,\r\n            logLevel: LogLevel.Info\r\n        };\r\n    };\r\n    /**\r\n     * Create new Logger with existing configurations.\r\n     */\r\n    Logger.prototype.clone = function (packageName, packageVersion, correlationId) {\r\n        return new Logger({ loggerCallback: this.localCallback, piiLoggingEnabled: this.piiLoggingEnabled, logLevel: this.level, correlationId: correlationId || this.correlationId }, packageName, packageVersion);\r\n    };\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    Logger.prototype.logMessage = function (logMessage, options) {\r\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\r\n        var logHeader;\r\n        if (!StringUtils.isEmpty(options.correlationId)) {\r\n            logHeader = \"[\" + timestamp + \"] : [\" + options.correlationId + \"]\";\r\n        }\r\n        else if (!StringUtils.isEmpty(this.correlationId)) {\r\n            logHeader = \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\r\n        }\r\n        else {\r\n            logHeader = \"[\" + timestamp + \"]\";\r\n        }\r\n        var log = logHeader + \" : \" + this.packageName + \"@\" + this.packageVersion + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\r\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\r\n    };\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    Logger.prototype.error = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING\r\n        });\r\n    };\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    Logger.prototype.errorPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    Logger.prototype.warning = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    Logger.prototype.warningPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    Logger.prototype.info = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    Logger.prototype.infoPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    Logger.prototype.verbose = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    Logger.prototype.verbosePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING\r\n        });\r\n    };\r\n    /**\r\n     * Logs trace messages.\r\n     */\r\n    Logger.prototype.trace = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING\r\n        });\r\n    };\r\n    /**\r\n     * Logs trace messages with PII.\r\n     */\r\n    Logger.prototype.tracePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    Logger.prototype.isPiiLoggingEnabled = function () {\r\n        return this.piiLoggingEnabled || false;\r\n    };\r\n    return Logger;\r\n}());\n\nexport { LogLevel, Logger };\n"],"mappings":"AAAA;AACA;;AACA,SAASA,WAAT,QAA4B,yBAA5B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA,IAAIC,QAAJ;;AACA,CAAC,UAAUA,QAAV,EAAoB;EACjBA,QAAQ,CAACA,QAAQ,CAAC,OAAD,CAAR,GAAoB,CAArB,CAAR,GAAkC,OAAlC;EACAA,QAAQ,CAACA,QAAQ,CAAC,SAAD,CAAR,GAAsB,CAAvB,CAAR,GAAoC,SAApC;EACAA,QAAQ,CAACA,QAAQ,CAAC,MAAD,CAAR,GAAmB,CAApB,CAAR,GAAiC,MAAjC;EACAA,QAAQ,CAACA,QAAQ,CAAC,SAAD,CAAR,GAAsB,CAAvB,CAAR,GAAoC,SAApC;EACAA,QAAQ,CAACA,QAAQ,CAAC,OAAD,CAAR,GAAoB,CAArB,CAAR,GAAkC,OAAlC;AACH,CAND,EAMGA,QAAQ,KAAKA,QAAQ,GAAG,EAAhB,CANX;AAOA;AACA;AACA;;;AACA,IAAIC,MAAM;AAAG;AAAe,YAAY;EACpC,SAASA,MAAT,CAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,cAA5C,EAA4D;IACxD;IACA,KAAKC,KAAL,GAAaL,QAAQ,CAACM,IAAtB;;IACA,IAAIC,qBAAqB,GAAG,YAAY;MACpC;IACH,CAFD;;IAGA,IAAIC,gBAAgB,GAAGN,aAAa,IAAID,MAAM,CAACQ,0BAAP,EAAxC;IACA,KAAKC,aAAL,GAAqBF,gBAAgB,CAACG,cAAjB,IAAmCJ,qBAAxD;IACA,KAAKK,iBAAL,GAAyBJ,gBAAgB,CAACI,iBAAjB,IAAsC,KAA/D;IACA,KAAKP,KAAL,GAAa,OAAQG,gBAAgB,CAACK,QAAzB,KAAuC,QAAvC,GAAkDL,gBAAgB,CAACK,QAAnE,GAA8Eb,QAAQ,CAACM,IAApG;IACA,KAAKQ,aAAL,GAAqBN,gBAAgB,CAACM,aAAjB,IAAkCf,SAAS,CAACgB,YAAjE;IACA,KAAKZ,WAAL,GAAmBA,WAAW,IAAIJ,SAAS,CAACgB,YAA5C;IACA,KAAKX,cAAL,GAAsBA,cAAc,IAAIL,SAAS,CAACgB,YAAlD;EACH;;EACDd,MAAM,CAACQ,0BAAP,GAAoC,YAAY;IAC5C,OAAO;MACHE,cAAc,EAAE,YAAY,CACxB;MACH,CAHE;MAIHC,iBAAiB,EAAE,KAJhB;MAKHC,QAAQ,EAAEb,QAAQ,CAACM;IALhB,CAAP;EAOH,CARD;EASA;AACJ;AACA;;;EACIL,MAAM,CAACe,SAAP,CAAiBC,KAAjB,GAAyB,UAAUd,WAAV,EAAuBC,cAAvB,EAAuCU,aAAvC,EAAsD;IAC3E,OAAO,IAAIb,MAAJ,CAAW;MAAEU,cAAc,EAAE,KAAKD,aAAvB;MAAsCE,iBAAiB,EAAE,KAAKA,iBAA9D;MAAiFC,QAAQ,EAAE,KAAKR,KAAhG;MAAuGS,aAAa,EAAEA,aAAa,IAAI,KAAKA;IAA5I,CAAX,EAAwKX,WAAxK,EAAqLC,cAArL,CAAP;EACH,CAFD;EAGA;AACJ;AACA;;;EACIH,MAAM,CAACe,SAAP,CAAiBE,UAAjB,GAA8B,UAAUA,UAAV,EAAsBC,OAAtB,EAA+B;IACzD,IAAKA,OAAO,CAACN,QAAR,GAAmB,KAAKR,KAAzB,IAAoC,CAAC,KAAKO,iBAAN,IAA2BO,OAAO,CAACC,WAA3E,EAAyF;MACrF;IACH;;IACD,IAAIC,SAAS,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAhB,CAJyD,CAKzD;;IACA,IAAIC,SAAJ;;IACA,IAAI,CAAC1B,WAAW,CAAC2B,OAAZ,CAAoBN,OAAO,CAACL,aAA5B,CAAL,EAAiD;MAC7CU,SAAS,GAAG,MAAMH,SAAN,GAAkB,OAAlB,GAA4BF,OAAO,CAACL,aAApC,GAAoD,GAAhE;IACH,CAFD,MAGK,IAAI,CAAChB,WAAW,CAAC2B,OAAZ,CAAoB,KAAKX,aAAzB,CAAL,EAA8C;MAC/CU,SAAS,GAAG,MAAMH,SAAN,GAAkB,OAAlB,GAA4B,KAAKP,aAAjC,GAAiD,GAA7D;IACH,CAFI,MAGA;MACDU,SAAS,GAAG,MAAMH,SAAN,GAAkB,GAA9B;IACH;;IACD,IAAIK,GAAG,GAAGF,SAAS,GAAG,KAAZ,GAAoB,KAAKrB,WAAzB,GAAuC,GAAvC,GAA6C,KAAKC,cAAlD,GAAmE,KAAnE,GAA2EJ,QAAQ,CAACmB,OAAO,CAACN,QAAT,CAAnF,GAAwG,KAAxG,GAAgHK,UAA1H,CAhByD,CAiBzD;;IACA,KAAKS,eAAL,CAAqBR,OAAO,CAACN,QAA7B,EAAuCa,GAAvC,EAA4CP,OAAO,CAACC,WAAR,IAAuB,KAAnE;EACH,CAnBD;EAoBA;AACJ;AACA;;;EACInB,MAAM,CAACe,SAAP,CAAiBW,eAAjB,GAAmC,UAAUtB,KAAV,EAAiBuB,OAAjB,EAA0BR,WAA1B,EAAuC;IACtE,IAAI,KAAKV,aAAT,EAAwB;MACpB,KAAKA,aAAL,CAAmBL,KAAnB,EAA0BuB,OAA1B,EAAmCR,WAAnC;IACH;EACJ,CAJD;EAKA;AACJ;AACA;;;EACInB,MAAM,CAACe,SAAP,CAAiBa,KAAjB,GAAyB,UAAUD,OAAV,EAAmBd,aAAnB,EAAkC;IACvD,KAAKI,UAAL,CAAgBU,OAAhB,EAAyB;MACrBf,QAAQ,EAAEb,QAAQ,CAAC8B,KADE;MAErBV,WAAW,EAAE,KAFQ;MAGrBN,aAAa,EAAEA,aAAa,IAAIf,SAAS,CAACgB;IAHrB,CAAzB;EAKH,CAND;EAOA;AACJ;AACA;;;EACId,MAAM,CAACe,SAAP,CAAiBe,QAAjB,GAA4B,UAAUH,OAAV,EAAmBd,aAAnB,EAAkC;IAC1D,KAAKI,UAAL,CAAgBU,OAAhB,EAAyB;MACrBf,QAAQ,EAAEb,QAAQ,CAAC8B,KADE;MAErBV,WAAW,EAAE,IAFQ;MAGrBN,aAAa,EAAEA,aAAa,IAAIf,SAAS,CAACgB;IAHrB,CAAzB;EAKH,CAND;EAOA;AACJ;AACA;;;EACId,MAAM,CAACe,SAAP,CAAiBgB,OAAjB,GAA2B,UAAUJ,OAAV,EAAmBd,aAAnB,EAAkC;IACzD,KAAKI,UAAL,CAAgBU,OAAhB,EAAyB;MACrBf,QAAQ,EAAEb,QAAQ,CAACiC,OADE;MAErBb,WAAW,EAAE,KAFQ;MAGrBN,aAAa,EAAEA,aAAa,IAAIf,SAAS,CAACgB;IAHrB,CAAzB;EAKH,CAND;EAOA;AACJ;AACA;;;EACId,MAAM,CAACe,SAAP,CAAiBkB,UAAjB,GAA8B,UAAUN,OAAV,EAAmBd,aAAnB,EAAkC;IAC5D,KAAKI,UAAL,CAAgBU,OAAhB,EAAyB;MACrBf,QAAQ,EAAEb,QAAQ,CAACiC,OADE;MAErBb,WAAW,EAAE,IAFQ;MAGrBN,aAAa,EAAEA,aAAa,IAAIf,SAAS,CAACgB;IAHrB,CAAzB;EAKH,CAND;EAOA;AACJ;AACA;;;EACId,MAAM,CAACe,SAAP,CAAiBmB,IAAjB,GAAwB,UAAUP,OAAV,EAAmBd,aAAnB,EAAkC;IACtD,KAAKI,UAAL,CAAgBU,OAAhB,EAAyB;MACrBf,QAAQ,EAAEb,QAAQ,CAACM,IADE;MAErBc,WAAW,EAAE,KAFQ;MAGrBN,aAAa,EAAEA,aAAa,IAAIf,SAAS,CAACgB;IAHrB,CAAzB;EAKH,CAND;EAOA;AACJ;AACA;;;EACId,MAAM,CAACe,SAAP,CAAiBoB,OAAjB,GAA2B,UAAUR,OAAV,EAAmBd,aAAnB,EAAkC;IACzD,KAAKI,UAAL,CAAgBU,OAAhB,EAAyB;MACrBf,QAAQ,EAAEb,QAAQ,CAACM,IADE;MAErBc,WAAW,EAAE,IAFQ;MAGrBN,aAAa,EAAEA,aAAa,IAAIf,SAAS,CAACgB;IAHrB,CAAzB;EAKH,CAND;EAOA;AACJ;AACA;;;EACId,MAAM,CAACe,SAAP,CAAiBqB,OAAjB,GAA2B,UAAUT,OAAV,EAAmBd,aAAnB,EAAkC;IACzD,KAAKI,UAAL,CAAgBU,OAAhB,EAAyB;MACrBf,QAAQ,EAAEb,QAAQ,CAACsC,OADE;MAErBlB,WAAW,EAAE,KAFQ;MAGrBN,aAAa,EAAEA,aAAa,IAAIf,SAAS,CAACgB;IAHrB,CAAzB;EAKH,CAND;EAOA;AACJ;AACA;;;EACId,MAAM,CAACe,SAAP,CAAiBuB,UAAjB,GAA8B,UAAUX,OAAV,EAAmBd,aAAnB,EAAkC;IAC5D,KAAKI,UAAL,CAAgBU,OAAhB,EAAyB;MACrBf,QAAQ,EAAEb,QAAQ,CAACsC,OADE;MAErBlB,WAAW,EAAE,IAFQ;MAGrBN,aAAa,EAAEA,aAAa,IAAIf,SAAS,CAACgB;IAHrB,CAAzB;EAKH,CAND;EAOA;AACJ;AACA;;;EACId,MAAM,CAACe,SAAP,CAAiBwB,KAAjB,GAAyB,UAAUZ,OAAV,EAAmBd,aAAnB,EAAkC;IACvD,KAAKI,UAAL,CAAgBU,OAAhB,EAAyB;MACrBf,QAAQ,EAAEb,QAAQ,CAACyC,KADE;MAErBrB,WAAW,EAAE,KAFQ;MAGrBN,aAAa,EAAEA,aAAa,IAAIf,SAAS,CAACgB;IAHrB,CAAzB;EAKH,CAND;EAOA;AACJ;AACA;;;EACId,MAAM,CAACe,SAAP,CAAiB0B,QAAjB,GAA4B,UAAUd,OAAV,EAAmBd,aAAnB,EAAkC;IAC1D,KAAKI,UAAL,CAAgBU,OAAhB,EAAyB;MACrBf,QAAQ,EAAEb,QAAQ,CAACyC,KADE;MAErBrB,WAAW,EAAE,IAFQ;MAGrBN,aAAa,EAAEA,aAAa,IAAIf,SAAS,CAACgB;IAHrB,CAAzB;EAKH,CAND;EAOA;AACJ;AACA;;;EACId,MAAM,CAACe,SAAP,CAAiB2B,mBAAjB,GAAuC,YAAY;IAC/C,OAAO,KAAK/B,iBAAL,IAA0B,KAAjC;EACH,CAFD;;EAGA,OAAOX,MAAP;AACH,CAxK2B,EAA5B;;AA0KA,SAASD,QAAT,EAAmBC,MAAnB"},"metadata":{},"sourceType":"module"}