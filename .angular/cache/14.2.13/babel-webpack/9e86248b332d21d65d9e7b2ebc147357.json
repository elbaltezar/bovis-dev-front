{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { AsyncMemoryStorage } from './AsyncMemoryStorage.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar CryptoKeyStoreNames;\n\n(function (CryptoKeyStoreNames) {\n  CryptoKeyStoreNames[\"asymmetricKeys\"] = \"asymmetricKeys\";\n  CryptoKeyStoreNames[\"symmetricKeys\"] = \"symmetricKeys\";\n})(CryptoKeyStoreNames || (CryptoKeyStoreNames = {}));\n/**\r\n * MSAL CryptoKeyStore DB Version 2\r\n */\n\n\nvar CryptoKeyStore =\n/** @class */\nfunction () {\n  function CryptoKeyStore(logger) {\n    this.logger = logger;\n    this.asymmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.asymmetricKeys);\n    this.symmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.symmetricKeys);\n  }\n\n  CryptoKeyStore.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Delete in-memory keystores\n            this.asymmetricKeys.clearInMemory();\n            this.symmetricKeys.clearInMemory();\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.asymmetricKeys.clearPersistent()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n\n          case 3:\n            e_1 = _a.sent();\n\n            if (e_1 instanceof Error) {\n              this.logger.error(\"Clearing keystore failed with error: \" + e_1.message);\n            } else {\n              this.logger.error(\"Clearing keystore failed with unknown error\");\n            }\n\n            return [2\n            /*return*/\n            , false];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return CryptoKeyStore;\n}();\n\nexport { CryptoKeyStore, CryptoKeyStoreNames };","map":{"version":3,"names":["__awaiter","__generator","AsyncMemoryStorage","CryptoKeyStoreNames","CryptoKeyStore","logger","asymmetricKeys","symmetricKeys","prototype","clear","e_1","_a","label","clearInMemory","trys","push","clearPersistent","sent","Error","error","message"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/cache/CryptoKeyStore.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { AsyncMemoryStorage } from './AsyncMemoryStorage.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar CryptoKeyStoreNames;\r\n(function (CryptoKeyStoreNames) {\r\n    CryptoKeyStoreNames[\"asymmetricKeys\"] = \"asymmetricKeys\";\r\n    CryptoKeyStoreNames[\"symmetricKeys\"] = \"symmetricKeys\";\r\n})(CryptoKeyStoreNames || (CryptoKeyStoreNames = {}));\r\n/**\r\n * MSAL CryptoKeyStore DB Version 2\r\n */\r\nvar CryptoKeyStore = /** @class */ (function () {\r\n    function CryptoKeyStore(logger) {\r\n        this.logger = logger;\r\n        this.asymmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.asymmetricKeys);\r\n        this.symmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.symmetricKeys);\r\n    }\r\n    CryptoKeyStore.prototype.clear = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Delete in-memory keystores\r\n                        this.asymmetricKeys.clearInMemory();\r\n                        this.symmetricKeys.clearInMemory();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.asymmetricKeys.clearPersistent()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, true];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        if (e_1 instanceof Error) {\r\n                            this.logger.error(\"Clearing keystore failed with error: \" + e_1.message);\r\n                        }\r\n                        else {\r\n                            this.logger.error(\"Clearing keystore failed with unknown error\");\r\n                        }\r\n                        return [2 /*return*/, false];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CryptoKeyStore;\r\n}());\n\nexport { CryptoKeyStore, CryptoKeyStoreNames };\n"],"mappings":"AAAA;AACA;;AACA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,uBAAvC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AAEA;AACA;AACA;AACA;;AACA,IAAIC,mBAAJ;;AACA,CAAC,UAAUA,mBAAV,EAA+B;EAC5BA,mBAAmB,CAAC,gBAAD,CAAnB,GAAwC,gBAAxC;EACAA,mBAAmB,CAAC,eAAD,CAAnB,GAAuC,eAAvC;AACH,CAHD,EAGGA,mBAAmB,KAAKA,mBAAmB,GAAG,EAA3B,CAHtB;AAIA;AACA;AACA;;;AACA,IAAIC,cAAc;AAAG;AAAe,YAAY;EAC5C,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;IAC5B,KAAKA,MAAL,GAAcA,MAAd;IACA,KAAKC,cAAL,GAAsB,IAAIJ,kBAAJ,CAAuB,KAAKG,MAA5B,EAAoCF,mBAAmB,CAACG,cAAxD,CAAtB;IACA,KAAKC,aAAL,GAAqB,IAAIL,kBAAJ,CAAuB,KAAKG,MAA5B,EAAoCF,mBAAmB,CAACI,aAAxD,CAArB;EACH;;EACDH,cAAc,CAACI,SAAf,CAAyBC,KAAzB,GAAiC,YAAY;IACzC,OAAOT,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIU,GAAJ;MACA,OAAOT,WAAW,CAAC,IAAD,EAAO,UAAUU,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACC,KAAX;UACI,KAAK,CAAL;YACI;YACA,KAAKN,cAAL,CAAoBO,aAApB;YACA,KAAKN,aAAL,CAAmBM,aAAnB;YACAF,EAAE,CAACC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACID,EAAE,CAACG,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKT,cAAL,CAAoBU,eAApB,EAAd,CAAP;;UACJ,KAAK,CAAL;YACIL,EAAE,CAACM,IAAH;;YACA,OAAO,CAAC;YAAE;YAAH,EAAe,IAAf,CAAP;;UACJ,KAAK,CAAL;YACIP,GAAG,GAAGC,EAAE,CAACM,IAAH,EAAN;;YACA,IAAIP,GAAG,YAAYQ,KAAnB,EAA0B;cACtB,KAAKb,MAAL,CAAYc,KAAZ,CAAkB,0CAA0CT,GAAG,CAACU,OAAhE;YACH,CAFD,MAGK;cACD,KAAKf,MAAL,CAAYc,KAAZ,CAAkB,6CAAlB;YACH;;YACD,OAAO,CAAC;YAAE;YAAH,EAAe,KAAf,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,CAAP;QArBZ;MAuBH,CAxBiB,CAAlB;IAyBH,CA3Be,CAAhB;EA4BH,CA7BD;;EA8BA,OAAOf,cAAP;AACH,CArCmC,EAApC;;AAuCA,SAASA,cAAT,EAAyBD,mBAAzB"},"metadata":{},"sourceType":"module"}