{"ast":null,"code":"/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\n\nimport { __extends, __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { BaseClient } from './BaseClient.js';\nimport { RequestParameterBuilder } from '../request/RequestParameterBuilder.js';\nimport { AuthenticationScheme, GrantType, HeaderNames, Errors } from '../utils/Constants.js';\nimport { ResponseHandler } from '../response/ResponseHandler.js';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { ServerError } from '../error/ServerError.js';\nimport { TimeUtils } from '../utils/TimeUtils.js';\nimport { UrlString } from '../url/UrlString.js';\nimport { CcsCredentialType } from '../account/CcsCredential.js';\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.js';\nimport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage } from '../error/InteractionRequiredAuthError.js';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * OAuth2.0 refresh token client\r\n */\n\nvar RefreshTokenClient =\n/** @class */\nfunction (_super) {\n  __extends(RefreshTokenClient, _super);\n\n  function RefreshTokenClient(configuration, performanceClient) {\n    return _super.call(this, configuration, performanceClient) || this;\n  }\n\n  RefreshTokenClient.prototype.acquireToken = function (request) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var atsMeasurement, reqTimestamp, response, httpVerToken, requestId, responseHandler;\n\n      var _this = this;\n\n      return __generator(this, function (_h) {\n        switch (_h.label) {\n          case 0:\n            (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\n            atsMeasurement = (_b = this.performanceClient) === null || _b === void 0 ? void 0 : _b.startMeasurement(PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\n            this.logger.verbose(\"RefreshTokenClientAcquireToken called\", request.correlationId);\n            reqTimestamp = TimeUtils.nowSeconds();\n            (_c = this.performanceClient) === null || _c === void 0 ? void 0 : _c.setPreQueueTime(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\n            return [4\n            /*yield*/\n            , this.executeTokenRequest(request, this.authority)];\n\n          case 1:\n            response = _h.sent();\n            httpVerToken = (_d = response.headers) === null || _d === void 0 ? void 0 : _d[HeaderNames.X_MS_HTTP_VERSION];\n            atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.addStaticFields({\n              refreshTokenSize: ((_e = response.body.refresh_token) === null || _e === void 0 ? void 0 : _e.length) || 0\n            });\n\n            if (httpVerToken) {\n              atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.addStaticFields({\n                httpVerToken: httpVerToken\n              });\n            }\n\n            requestId = (_f = response.headers) === null || _f === void 0 ? void 0 : _f[HeaderNames.X_MS_REQUEST_ID];\n            responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\n            responseHandler.validateTokenResponse(response.body);\n            (_g = this.performanceClient) === null || _g === void 0 ? void 0 : _g.setPreQueueTime(PerformanceEvents.HandleServerTokenResponse, request.correlationId);\n            return [2\n            /*return*/\n            , responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, undefined, undefined, true, request.forceCache, requestId).then(function (result) {\n              atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.endMeasurement({\n                success: true\n              });\n              return result;\n            }).catch(function (error) {\n              _this.logger.verbose(\"Error in fetching refresh token\", request.correlationId);\n\n              atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.endMeasurement({\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                success: false\n              });\n              throw error;\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * Gets cached refresh token and attaches to request, then calls acquireToken API\r\n   * @param request\r\n   */\n\n\n  RefreshTokenClient.prototype.acquireTokenByRefreshToken = function (request) {\n    var _a, _b, _c, _d;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var isFOCI, noFamilyRTInCache, clientMismatchErrorWithFamilyRT;\n      return __generator(this, function (_e) {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n          throw ClientConfigurationError.createEmptyTokenRequestError();\n        }\n\n        (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId); // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n\n        if (!request.account) {\n          throw ClientAuthError.createNoAccountInSilentRequestError();\n        }\n\n        isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment); // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n\n        if (isFOCI) {\n          try {\n            (_b = this.performanceClient) === null || _b === void 0 ? void 0 : _b.setPreQueueTime(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n            return [2\n            /*return*/\n            , this.acquireTokenWithCachedRefreshToken(request, true)];\n          } catch (e) {\n            noFamilyRTInCache = e instanceof InteractionRequiredAuthError && e.errorCode === InteractionRequiredAuthErrorMessage.noTokensFoundError.code;\n            clientMismatchErrorWithFamilyRT = e instanceof ServerError && e.errorCode === Errors.INVALID_GRANT_ERROR && e.subError === Errors.CLIENT_MISMATCH_ERROR; // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n\n            if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n              (_c = this.performanceClient) === null || _c === void 0 ? void 0 : _c.setPreQueueTime(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n              return [2\n              /*return*/\n              , this.acquireTokenWithCachedRefreshToken(request, false)]; // throw in all other cases\n            } else {\n              throw e;\n            }\n          }\n        } // fall back to application refresh token acquisition\n\n\n        (_d = this.performanceClient) === null || _d === void 0 ? void 0 : _d.setPreQueueTime(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n        return [2\n        /*return*/\n        , this.acquireTokenWithCachedRefreshToken(request, false)];\n      });\n    });\n  };\n  /**\r\n   * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\r\n   * @param request\r\n   */\n\n\n  RefreshTokenClient.prototype.acquireTokenWithCachedRefreshToken = function (request, foci) {\n    var _a, _b, _c;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var atsMeasurement, refreshToken, refreshTokenRequest;\n      return __generator(this, function (_d) {\n        (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n        atsMeasurement = (_b = this.performanceClient) === null || _b === void 0 ? void 0 : _b.startMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n        this.logger.verbose(\"RefreshTokenClientAcquireTokenWithCachedRefreshToken called\", request.correlationId);\n        refreshToken = this.cacheManager.getRefreshToken(request.account, foci);\n\n        if (!refreshToken) {\n          atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.discardMeasurement();\n          throw InteractionRequiredAuthError.createNoTokensFoundError();\n        } // attach cached RT size to the current measurement\n\n\n        atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.endMeasurement({\n          success: true\n        });\n        refreshTokenRequest = __assign(__assign({}, request), {\n          refreshToken: refreshToken.secret,\n          authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER,\n          ccsCredential: {\n            credential: request.account.homeAccountId,\n            type: CcsCredentialType.HOME_ACCOUNT_ID\n          }\n        });\n        (_c = this.performanceClient) === null || _c === void 0 ? void 0 : _c.setPreQueueTime(PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\n        return [2\n        /*return*/\n        , this.acquireToken(refreshTokenRequest)];\n      });\n    });\n  };\n  /**\r\n   * Constructs the network message and makes a NW call to the underlying secure token service\r\n   * @param request\r\n   * @param authority\r\n   */\n\n\n  RefreshTokenClient.prototype.executeTokenRequest = function (request, authority) {\n    var _a, _b, _c;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var acquireTokenMeasurement, queryParametersString, endpoint, requestBody, headers, thumbprint;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.addQueueMeasurement(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\n            acquireTokenMeasurement = (_b = this.performanceClient) === null || _b === void 0 ? void 0 : _b.startMeasurement(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\n            (_c = this.performanceClient) === null || _c === void 0 ? void 0 : _c.setPreQueueTime(PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\n            queryParametersString = this.createTokenQueryParameters(request);\n            endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\n            return [4\n            /*yield*/\n            , this.createTokenRequestBody(request)];\n\n          case 1:\n            requestBody = _d.sent();\n            headers = this.createTokenRequestHeaders(request.ccsCredential);\n            thumbprint = {\n              clientId: this.config.authOptions.clientId,\n              authority: authority.canonicalAuthority,\n              scopes: request.scopes,\n              claims: request.claims,\n              authenticationScheme: request.authenticationScheme,\n              resourceRequestMethod: request.resourceRequestMethod,\n              resourceRequestUri: request.resourceRequestUri,\n              shrClaims: request.shrClaims,\n              sshKid: request.sshKid\n            };\n            return [2\n            /*return*/\n            , this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint).then(function (result) {\n              acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\n                success: true\n              });\n              return result;\n            }).catch(function (error) {\n              acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\n                success: false\n              });\n              throw error;\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * Helper function to create the token request body\r\n   * @param request\r\n   */\n\n\n  RefreshTokenClient.prototype.createTokenRequestBody = function (request) {\n    var _a, _b, _c;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var correlationId, acquireTokenMeasurement, parameterBuilder, clientAssertion, popTokenGenerator, reqCnfData, clientInfo;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.addQueueMeasurement(PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\n            correlationId = request.correlationId;\n            acquireTokenMeasurement = (_b = this.performanceClient) === null || _b === void 0 ? void 0 : _b.startMeasurement(PerformanceEvents.BaseClientCreateTokenRequestHeaders, correlationId);\n            parameterBuilder = new RequestParameterBuilder();\n            parameterBuilder.addClientId(this.config.authOptions.clientId);\n            parameterBuilder.addScopes(request.scopes);\n            parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\n            parameterBuilder.addClientInfo();\n            parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n            parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n            parameterBuilder.addThrottling();\n\n            if (this.serverTelemetryManager) {\n              parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n            }\n\n            parameterBuilder.addCorrelationId(correlationId);\n            parameterBuilder.addRefreshToken(request.refreshToken);\n\n            if (this.config.clientCredentials.clientSecret) {\n              parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n            }\n\n            if (this.config.clientCredentials.clientAssertion) {\n              clientAssertion = this.config.clientCredentials.clientAssertion;\n              parameterBuilder.addClientAssertion(clientAssertion.assertion);\n              parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n            }\n\n            if (!(request.authenticationScheme === AuthenticationScheme.POP)) return [3\n            /*break*/\n            , 2];\n            popTokenGenerator = new PopTokenGenerator(this.cryptoUtils, this.performanceClient);\n            (_c = this.performanceClient) === null || _c === void 0 ? void 0 : _c.setPreQueueTime(PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\n            return [4\n            /*yield*/\n            , popTokenGenerator.generateCnf(request)];\n\n          case 1:\n            reqCnfData = _d.sent(); // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            if (request.authenticationScheme === AuthenticationScheme.SSH) {\n              if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n              } else {\n                acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\n                  success: false\n                });\n                throw ClientConfigurationError.createMissingSshJwkError();\n              }\n            }\n\n            _d.label = 3;\n\n          case 3:\n            if (!StringUtils.isEmptyObj(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\n              parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n            }\n\n            if (this.config.systemOptions.preventCorsPreflight && request.ccsCredential) {\n              switch (request.ccsCredential.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                  try {\n                    clientInfo = buildClientInfoFromHomeAccountId(request.ccsCredential.credential);\n                    parameterBuilder.addCcsOid(clientInfo);\n                  } catch (e) {\n                    this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                  }\n\n                  break;\n\n                case CcsCredentialType.UPN:\n                  parameterBuilder.addCcsUpn(request.ccsCredential.credential);\n                  break;\n              }\n            }\n\n            acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\n              success: true\n            });\n            return [2\n            /*return*/\n            , parameterBuilder.createQueryString()];\n        }\n      });\n    });\n  };\n\n  return RefreshTokenClient;\n}(BaseClient);\n\nexport { RefreshTokenClient };","map":{"version":3,"names":["__extends","__awaiter","__generator","__assign","BaseClient","RequestParameterBuilder","AuthenticationScheme","GrantType","HeaderNames","Errors","ResponseHandler","PopTokenGenerator","StringUtils","ClientConfigurationError","ClientAuthError","ServerError","TimeUtils","UrlString","CcsCredentialType","buildClientInfoFromHomeAccountId","InteractionRequiredAuthError","InteractionRequiredAuthErrorMessage","PerformanceEvents","RefreshTokenClient","_super","configuration","performanceClient","call","prototype","acquireToken","request","_a","_b","_c","_d","_e","_f","_g","atsMeasurement","reqTimestamp","response","httpVerToken","requestId","responseHandler","_this","_h","label","addQueueMeasurement","RefreshTokenClientAcquireToken","correlationId","startMeasurement","logger","verbose","nowSeconds","setPreQueueTime","RefreshTokenClientExecuteTokenRequest","executeTokenRequest","authority","sent","headers","X_MS_HTTP_VERSION","addStaticFields","refreshTokenSize","body","refresh_token","length","X_MS_REQUEST_ID","config","authOptions","clientId","cacheManager","cryptoUtils","serializableCache","persistencePlugin","validateTokenResponse","HandleServerTokenResponse","handleServerTokenResponse","undefined","forceCache","then","result","endMeasurement","success","catch","error","errorCode","subErrorCode","subError","acquireTokenByRefreshToken","isFOCI","noFamilyRTInCache","clientMismatchErrorWithFamilyRT","createEmptyTokenRequestError","RefreshTokenClientAcquireTokenByRefreshToken","account","createNoAccountInSilentRequestError","isAppMetadataFOCI","environment","RefreshTokenClientAcquireTokenWithCachedRefreshToken","acquireTokenWithCachedRefreshToken","e","noTokensFoundError","code","INVALID_GRANT_ERROR","CLIENT_MISMATCH_ERROR","foci","refreshToken","refreshTokenRequest","getRefreshToken","discardMeasurement","createNoTokensFoundError","secret","authenticationScheme","BEARER","ccsCredential","credential","homeAccountId","type","HOME_ACCOUNT_ID","acquireTokenMeasurement","queryParametersString","endpoint","requestBody","thumbprint","RefreshTokenClientCreateTokenRequestBody","createTokenQueryParameters","appendQueryString","tokenEndpoint","createTokenRequestBody","createTokenRequestHeaders","canonicalAuthority","scopes","claims","resourceRequestMethod","resourceRequestUri","shrClaims","sshKid","executePostToTokenEndpoint","parameterBuilder","clientAssertion","popTokenGenerator","reqCnfData","clientInfo","BaseClientCreateTokenRequestHeaders","addClientId","addScopes","addGrantType","REFRESH_TOKEN_GRANT","addClientInfo","addLibraryInfo","libraryInfo","addApplicationTelemetry","telemetry","application","addThrottling","serverTelemetryManager","addServerTelemetry","addCorrelationId","addRefreshToken","clientCredentials","clientSecret","addClientSecret","addClientAssertion","assertion","addClientAssertionType","assertionType","POP","PopTokenGenerateCnf","generateCnf","addPopToken","reqCnfString","SSH","sshJwk","addSshJwk","createMissingSshJwkError","isEmptyObj","clientCapabilities","addClaims","systemOptions","preventCorsPreflight","addCcsOid","UPN","addCcsUpn","createQueryString"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-common/dist/client/RefreshTokenClient.js"],"sourcesContent":["/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\nimport { __extends, __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { BaseClient } from './BaseClient.js';\nimport { RequestParameterBuilder } from '../request/RequestParameterBuilder.js';\nimport { AuthenticationScheme, GrantType, HeaderNames, Errors } from '../utils/Constants.js';\nimport { ResponseHandler } from '../response/ResponseHandler.js';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { ServerError } from '../error/ServerError.js';\nimport { TimeUtils } from '../utils/TimeUtils.js';\nimport { UrlString } from '../url/UrlString.js';\nimport { CcsCredentialType } from '../account/CcsCredential.js';\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.js';\nimport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage } from '../error/InteractionRequiredAuthError.js';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 refresh token client\r\n */\r\nvar RefreshTokenClient = /** @class */ (function (_super) {\r\n    __extends(RefreshTokenClient, _super);\r\n    function RefreshTokenClient(configuration, performanceClient) {\r\n        return _super.call(this, configuration, performanceClient) || this;\r\n    }\r\n    RefreshTokenClient.prototype.acquireToken = function (request) {\r\n        var _a, _b, _c, _d, _e, _f, _g;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var atsMeasurement, reqTimestamp, response, httpVerToken, requestId, responseHandler;\r\n            var _this = this;\r\n            return __generator(this, function (_h) {\r\n                switch (_h.label) {\r\n                    case 0:\r\n                        (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\r\n                        atsMeasurement = (_b = this.performanceClient) === null || _b === void 0 ? void 0 : _b.startMeasurement(PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\r\n                        this.logger.verbose(\"RefreshTokenClientAcquireToken called\", request.correlationId);\r\n                        reqTimestamp = TimeUtils.nowSeconds();\r\n                        (_c = this.performanceClient) === null || _c === void 0 ? void 0 : _c.setPreQueueTime(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\r\n                        return [4 /*yield*/, this.executeTokenRequest(request, this.authority)];\r\n                    case 1:\r\n                        response = _h.sent();\r\n                        httpVerToken = (_d = response.headers) === null || _d === void 0 ? void 0 : _d[HeaderNames.X_MS_HTTP_VERSION];\r\n                        atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.addStaticFields({\r\n                            refreshTokenSize: ((_e = response.body.refresh_token) === null || _e === void 0 ? void 0 : _e.length) || 0,\r\n                        });\r\n                        if (httpVerToken) {\r\n                            atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.addStaticFields({\r\n                                httpVerToken: httpVerToken,\r\n                            });\r\n                        }\r\n                        requestId = (_f = response.headers) === null || _f === void 0 ? void 0 : _f[HeaderNames.X_MS_REQUEST_ID];\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\r\n                        responseHandler.validateTokenResponse(response.body);\r\n                        (_g = this.performanceClient) === null || _g === void 0 ? void 0 : _g.setPreQueueTime(PerformanceEvents.HandleServerTokenResponse, request.correlationId);\r\n                        return [2 /*return*/, responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, undefined, undefined, true, request.forceCache, requestId).then(function (result) {\r\n                                atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.endMeasurement({\r\n                                    success: true\r\n                                });\r\n                                return result;\r\n                            })\r\n                                .catch(function (error) {\r\n                                _this.logger.verbose(\"Error in fetching refresh token\", request.correlationId);\r\n                                atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.endMeasurement({\r\n                                    errorCode: error.errorCode,\r\n                                    subErrorCode: error.subError,\r\n                                    success: false\r\n                                });\r\n                                throw error;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\r\n     * @param request\r\n     */\r\n    RefreshTokenClient.prototype.acquireTokenByRefreshToken = function (request) {\r\n        var _a, _b, _c, _d;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isFOCI, noFamilyRTInCache, clientMismatchErrorWithFamilyRT;\r\n            return __generator(this, function (_e) {\r\n                // Cannot renew token if no request object is given.\r\n                if (!request) {\r\n                    throw ClientConfigurationError.createEmptyTokenRequestError();\r\n                }\r\n                (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\r\n                // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n                if (!request.account) {\r\n                    throw ClientAuthError.createNoAccountInSilentRequestError();\r\n                }\r\n                isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment);\r\n                // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\r\n                if (isFOCI) {\r\n                    try {\r\n                        (_b = this.performanceClient) === null || _b === void 0 ? void 0 : _b.setPreQueueTime(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\r\n                        return [2 /*return*/, this.acquireTokenWithCachedRefreshToken(request, true)];\r\n                    }\r\n                    catch (e) {\r\n                        noFamilyRTInCache = e instanceof InteractionRequiredAuthError && e.errorCode === InteractionRequiredAuthErrorMessage.noTokensFoundError.code;\r\n                        clientMismatchErrorWithFamilyRT = e instanceof ServerError && e.errorCode === Errors.INVALID_GRANT_ERROR && e.subError === Errors.CLIENT_MISMATCH_ERROR;\r\n                        // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\r\n                        if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\r\n                            (_c = this.performanceClient) === null || _c === void 0 ? void 0 : _c.setPreQueueTime(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\r\n                            return [2 /*return*/, this.acquireTokenWithCachedRefreshToken(request, false)];\r\n                            // throw in all other cases\r\n                        }\r\n                        else {\r\n                            throw e;\r\n                        }\r\n                    }\r\n                }\r\n                // fall back to application refresh token acquisition\r\n                (_d = this.performanceClient) === null || _d === void 0 ? void 0 : _d.setPreQueueTime(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\r\n                return [2 /*return*/, this.acquireTokenWithCachedRefreshToken(request, false)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\r\n     * @param request\r\n     */\r\n    RefreshTokenClient.prototype.acquireTokenWithCachedRefreshToken = function (request, foci) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var atsMeasurement, refreshToken, refreshTokenRequest;\r\n            return __generator(this, function (_d) {\r\n                (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\r\n                atsMeasurement = (_b = this.performanceClient) === null || _b === void 0 ? void 0 : _b.startMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\r\n                this.logger.verbose(\"RefreshTokenClientAcquireTokenWithCachedRefreshToken called\", request.correlationId);\r\n                refreshToken = this.cacheManager.getRefreshToken(request.account, foci);\r\n                if (!refreshToken) {\r\n                    atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.discardMeasurement();\r\n                    throw InteractionRequiredAuthError.createNoTokensFoundError();\r\n                }\r\n                // attach cached RT size to the current measurement\r\n                atsMeasurement === null || atsMeasurement === void 0 ? void 0 : atsMeasurement.endMeasurement({\r\n                    success: true\r\n                });\r\n                refreshTokenRequest = __assign(__assign({}, request), { refreshToken: refreshToken.secret, authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER, ccsCredential: {\r\n                        credential: request.account.homeAccountId,\r\n                        type: CcsCredentialType.HOME_ACCOUNT_ID\r\n                    } });\r\n                (_c = this.performanceClient) === null || _c === void 0 ? void 0 : _c.setPreQueueTime(PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\r\n                return [2 /*return*/, this.acquireToken(refreshTokenRequest)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Constructs the network message and makes a NW call to the underlying secure token service\r\n     * @param request\r\n     * @param authority\r\n     */\r\n    RefreshTokenClient.prototype.executeTokenRequest = function (request, authority) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var acquireTokenMeasurement, queryParametersString, endpoint, requestBody, headers, thumbprint;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.addQueueMeasurement(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\r\n                        acquireTokenMeasurement = (_b = this.performanceClient) === null || _b === void 0 ? void 0 : _b.startMeasurement(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\r\n                        (_c = this.performanceClient) === null || _c === void 0 ? void 0 : _c.setPreQueueTime(PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\r\n                        queryParametersString = this.createTokenQueryParameters(request);\r\n                        endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\r\n                        return [4 /*yield*/, this.createTokenRequestBody(request)];\r\n                    case 1:\r\n                        requestBody = _d.sent();\r\n                        headers = this.createTokenRequestHeaders(request.ccsCredential);\r\n                        thumbprint = {\r\n                            clientId: this.config.authOptions.clientId,\r\n                            authority: authority.canonicalAuthority,\r\n                            scopes: request.scopes,\r\n                            claims: request.claims,\r\n                            authenticationScheme: request.authenticationScheme,\r\n                            resourceRequestMethod: request.resourceRequestMethod,\r\n                            resourceRequestUri: request.resourceRequestUri,\r\n                            shrClaims: request.shrClaims,\r\n                            sshKid: request.sshKid\r\n                        };\r\n                        return [2 /*return*/, this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint)\r\n                                .then(function (result) {\r\n                                acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\r\n                                    success: true\r\n                                });\r\n                                return result;\r\n                            })\r\n                                .catch(function (error) {\r\n                                acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\r\n                                    success: false\r\n                                });\r\n                                throw error;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper function to create the token request body\r\n     * @param request\r\n     */\r\n    RefreshTokenClient.prototype.createTokenRequestBody = function (request) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var correlationId, acquireTokenMeasurement, parameterBuilder, clientAssertion, popTokenGenerator, reqCnfData, clientInfo;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        (_a = this.performanceClient) === null || _a === void 0 ? void 0 : _a.addQueueMeasurement(PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\r\n                        correlationId = request.correlationId;\r\n                        acquireTokenMeasurement = (_b = this.performanceClient) === null || _b === void 0 ? void 0 : _b.startMeasurement(PerformanceEvents.BaseClientCreateTokenRequestHeaders, correlationId);\r\n                        parameterBuilder = new RequestParameterBuilder();\r\n                        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n                        parameterBuilder.addScopes(request.scopes);\r\n                        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\r\n                        parameterBuilder.addClientInfo();\r\n                        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n                        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\r\n                        parameterBuilder.addThrottling();\r\n                        if (this.serverTelemetryManager) {\r\n                            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\r\n                        }\r\n                        parameterBuilder.addCorrelationId(correlationId);\r\n                        parameterBuilder.addRefreshToken(request.refreshToken);\r\n                        if (this.config.clientCredentials.clientSecret) {\r\n                            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n                        }\r\n                        if (this.config.clientCredentials.clientAssertion) {\r\n                            clientAssertion = this.config.clientCredentials.clientAssertion;\r\n                            parameterBuilder.addClientAssertion(clientAssertion.assertion);\r\n                            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n                        }\r\n                        if (!(request.authenticationScheme === AuthenticationScheme.POP)) return [3 /*break*/, 2];\r\n                        popTokenGenerator = new PopTokenGenerator(this.cryptoUtils, this.performanceClient);\r\n                        (_c = this.performanceClient) === null || _c === void 0 ? void 0 : _c.setPreQueueTime(PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\r\n                        return [4 /*yield*/, popTokenGenerator.generateCnf(request)];\r\n                    case 1:\r\n                        reqCnfData = _d.sent();\r\n                        // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\r\n                        parameterBuilder.addPopToken(reqCnfData.reqCnfString);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        if (request.authenticationScheme === AuthenticationScheme.SSH) {\r\n                            if (request.sshJwk) {\r\n                                parameterBuilder.addSshJwk(request.sshJwk);\r\n                            }\r\n                            else {\r\n                                acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\r\n                                    success: false\r\n                                });\r\n                                throw ClientConfigurationError.createMissingSshJwkError();\r\n                            }\r\n                        }\r\n                        _d.label = 3;\r\n                    case 3:\r\n                        if (!StringUtils.isEmptyObj(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\r\n                            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n                        }\r\n                        if (this.config.systemOptions.preventCorsPreflight && request.ccsCredential) {\r\n                            switch (request.ccsCredential.type) {\r\n                                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                                    try {\r\n                                        clientInfo = buildClientInfoFromHomeAccountId(request.ccsCredential.credential);\r\n                                        parameterBuilder.addCcsOid(clientInfo);\r\n                                    }\r\n                                    catch (e) {\r\n                                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\r\n                                    }\r\n                                    break;\r\n                                case CcsCredentialType.UPN:\r\n                                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        acquireTokenMeasurement === null || acquireTokenMeasurement === void 0 ? void 0 : acquireTokenMeasurement.endMeasurement({\r\n                            success: true\r\n                        });\r\n                        return [2 /*return*/, parameterBuilder.createQueryString()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RefreshTokenClient;\r\n}(BaseClient));\n\nexport { RefreshTokenClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}