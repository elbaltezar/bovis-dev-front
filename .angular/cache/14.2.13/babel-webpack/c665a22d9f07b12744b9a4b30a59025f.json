{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar BrowserPerformanceMeasurement =\n/** @class */\nfunction () {\n  function BrowserPerformanceMeasurement(name, correlationId) {\n    this.correlationId = correlationId;\n    this.measureName = BrowserPerformanceMeasurement.makeMeasureName(name, correlationId);\n    this.startMark = BrowserPerformanceMeasurement.makeStartMark(name, correlationId);\n    this.endMark = BrowserPerformanceMeasurement.makeEndMark(name, correlationId);\n  }\n\n  BrowserPerformanceMeasurement.makeMeasureName = function (name, correlationId) {\n    return \"msal.measure.\" + name + \".\" + correlationId;\n  };\n\n  BrowserPerformanceMeasurement.makeStartMark = function (name, correlationId) {\n    return \"msal.start.\" + name + \".\" + correlationId;\n  };\n\n  BrowserPerformanceMeasurement.makeEndMark = function (name, correlationId) {\n    return \"msal.end.\" + name + \".\" + correlationId;\n  };\n\n  BrowserPerformanceMeasurement.supportsBrowserPerformance = function () {\n    return typeof window !== \"undefined\" && typeof window.performance !== \"undefined\" && typeof window.performance.mark === \"function\" && typeof window.performance.measure === \"function\" && typeof window.performance.clearMarks === \"function\" && typeof window.performance.clearMeasures === \"function\" && typeof window.performance.getEntriesByName === \"function\";\n  };\n  /**\r\n   * Flush browser marks and measurements.\r\n   * @param {string} correlationId\r\n   * @param {SubMeasurement} measurements\r\n   */\n\n\n  BrowserPerformanceMeasurement.flushMeasurements = function (correlationId, measurements) {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        measurements.forEach(function (measurement) {\n          var measureName = BrowserPerformanceMeasurement.makeMeasureName(measurement.name, correlationId);\n          var entriesForMeasurement = window.performance.getEntriesByName(measureName, \"measure\");\n\n          if (entriesForMeasurement.length > 0) {\n            window.performance.clearMeasures(measureName);\n            window.performance.clearMarks(BrowserPerformanceMeasurement.makeStartMark(measureName, correlationId));\n            window.performance.clearMarks(BrowserPerformanceMeasurement.makeEndMark(measureName, correlationId));\n          }\n        });\n      } catch (e) {// Silently catch and return null\n      }\n    }\n  };\n\n  BrowserPerformanceMeasurement.prototype.startMeasurement = function () {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        window.performance.mark(this.startMark);\n      } catch (e) {// Silently catch\n      }\n    }\n  };\n\n  BrowserPerformanceMeasurement.prototype.endMeasurement = function () {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        window.performance.mark(this.endMark);\n        window.performance.measure(this.measureName, this.startMark, this.endMark);\n      } catch (e) {// Silently catch\n      }\n    }\n  };\n\n  BrowserPerformanceMeasurement.prototype.flushMeasurement = function () {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        var entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\n\n        if (entriesForMeasurement.length > 0) {\n          var durationMs = entriesForMeasurement[0].duration;\n          window.performance.clearMeasures(this.measureName);\n          window.performance.clearMarks(this.startMark);\n          window.performance.clearMarks(this.endMark);\n          return durationMs;\n        }\n      } catch (e) {// Silently catch and return null\n      }\n    }\n\n    return null;\n  };\n\n  return BrowserPerformanceMeasurement;\n}();\n\nexport { BrowserPerformanceMeasurement };","map":{"version":3,"names":["BrowserPerformanceMeasurement","name","correlationId","measureName","makeMeasureName","startMark","makeStartMark","endMark","makeEndMark","supportsBrowserPerformance","window","performance","mark","measure","clearMarks","clearMeasures","getEntriesByName","flushMeasurements","measurements","forEach","measurement","entriesForMeasurement","length","e","prototype","startMeasurement","endMeasurement","flushMeasurement","durationMs","duration"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar BrowserPerformanceMeasurement = /** @class */ (function () {\r\n    function BrowserPerformanceMeasurement(name, correlationId) {\r\n        this.correlationId = correlationId;\r\n        this.measureName = BrowserPerformanceMeasurement.makeMeasureName(name, correlationId);\r\n        this.startMark = BrowserPerformanceMeasurement.makeStartMark(name, correlationId);\r\n        this.endMark = BrowserPerformanceMeasurement.makeEndMark(name, correlationId);\r\n    }\r\n    BrowserPerformanceMeasurement.makeMeasureName = function (name, correlationId) {\r\n        return \"msal.measure.\" + name + \".\" + correlationId;\r\n    };\r\n    BrowserPerformanceMeasurement.makeStartMark = function (name, correlationId) {\r\n        return \"msal.start.\" + name + \".\" + correlationId;\r\n    };\r\n    BrowserPerformanceMeasurement.makeEndMark = function (name, correlationId) {\r\n        return \"msal.end.\" + name + \".\" + correlationId;\r\n    };\r\n    BrowserPerformanceMeasurement.supportsBrowserPerformance = function () {\r\n        return typeof window !== \"undefined\" &&\r\n            typeof window.performance !== \"undefined\" &&\r\n            typeof window.performance.mark === \"function\" &&\r\n            typeof window.performance.measure === \"function\" &&\r\n            typeof window.performance.clearMarks === \"function\" &&\r\n            typeof window.performance.clearMeasures === \"function\" &&\r\n            typeof window.performance.getEntriesByName === \"function\";\r\n    };\r\n    /**\r\n     * Flush browser marks and measurements.\r\n     * @param {string} correlationId\r\n     * @param {SubMeasurement} measurements\r\n     */\r\n    BrowserPerformanceMeasurement.flushMeasurements = function (correlationId, measurements) {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                measurements.forEach(function (measurement) {\r\n                    var measureName = BrowserPerformanceMeasurement.makeMeasureName(measurement.name, correlationId);\r\n                    var entriesForMeasurement = window.performance.getEntriesByName(measureName, \"measure\");\r\n                    if (entriesForMeasurement.length > 0) {\r\n                        window.performance.clearMeasures(measureName);\r\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeStartMark(measureName, correlationId));\r\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeEndMark(measureName, correlationId));\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                // Silently catch and return null\r\n            }\r\n        }\r\n    };\r\n    BrowserPerformanceMeasurement.prototype.startMeasurement = function () {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                window.performance.mark(this.startMark);\r\n            }\r\n            catch (e) {\r\n                // Silently catch\r\n            }\r\n        }\r\n    };\r\n    BrowserPerformanceMeasurement.prototype.endMeasurement = function () {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                window.performance.mark(this.endMark);\r\n                window.performance.measure(this.measureName, this.startMark, this.endMark);\r\n            }\r\n            catch (e) {\r\n                // Silently catch\r\n            }\r\n        }\r\n    };\r\n    BrowserPerformanceMeasurement.prototype.flushMeasurement = function () {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                var entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\r\n                if (entriesForMeasurement.length > 0) {\r\n                    var durationMs = entriesForMeasurement[0].duration;\r\n                    window.performance.clearMeasures(this.measureName);\r\n                    window.performance.clearMarks(this.startMark);\r\n                    window.performance.clearMarks(this.endMark);\r\n                    return durationMs;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Silently catch and return null\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return BrowserPerformanceMeasurement;\r\n}());\n\nexport { BrowserPerformanceMeasurement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}