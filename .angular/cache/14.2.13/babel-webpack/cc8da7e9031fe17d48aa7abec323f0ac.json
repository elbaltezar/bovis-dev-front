{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { __extends, __awaiter, __generator, __rest, __assign } from '../_virtual/_tslib.js';\nimport { ScopeSet, AuthToken, Constants, AccountEntity, AuthorityType, IdTokenEntity, AccessTokenEntity, CacheRecord, PerformanceEvents, TimeUtils, ClientAuthError, AuthenticationScheme, PopTokenGenerator, UrlString, OIDC_DEFAULT_SCOPES, PromptValue } from '@azure/msal-common';\nimport { BaseInteractionClient } from './BaseInteractionClient.js';\nimport { TemporaryCacheKeys, NativeExtensionMethod, NativeConstants, ApiId } from '../utils/BrowserConstants.js';\nimport { NativeAuthError } from '../error/NativeAuthError.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { SilentCacheClient } from './SilentCacheClient.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar NativeInteractionClient =\n/** @class */\nfunction (_super) {\n  __extends(NativeInteractionClient, _super);\n\n  function NativeInteractionClient(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, provider, accountId, nativeStorageImpl, correlationId) {\n    var _this = _super.call(this, config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId) || this;\n\n    _this.apiId = apiId;\n    _this.accountId = accountId;\n    _this.nativeMessageHandler = provider;\n    _this.nativeStorageManager = nativeStorageImpl;\n    _this.silentCacheClient = new SilentCacheClient(config, _this.nativeStorageManager, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\n    return _this;\n  }\n  /**\r\n   * Acquire token from native platform via browser extension\r\n   * @param request\r\n   */\n\n\n  NativeInteractionClient.prototype.acquireToken = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var nativeATMeasurement, reqTimestamp, nativeRequest, result, messageBody, response, validatedResponse;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\n            nativeATMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\n            reqTimestamp = TimeUtils.nowSeconds();\n            return [4\n            /*yield*/\n            , this.initializeNativeRequest(request)];\n\n          case 1:\n            nativeRequest = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this.acquireTokensFromCache(this.accountId, nativeRequest)];\n\n          case 3:\n            result = _a.sent();\n            nativeATMeasurement.endMeasurement({\n              success: true,\n              isNativeBroker: false,\n              fromCache: true\n            });\n            return [2\n            /*return*/\n            , result];\n\n          case 4:\n            _a.sent(); // continue with a native call for any and all errors\n\n\n            this.logger.info(\"MSAL internal Cache does not contain tokens, proceed to make a native call\");\n            return [3\n            /*break*/\n            , 5];\n\n          case 5:\n            messageBody = {\n              method: NativeExtensionMethod.GetToken,\n              request: nativeRequest\n            };\n            return [4\n            /*yield*/\n            , this.nativeMessageHandler.sendMessage(messageBody)];\n\n          case 6:\n            response = _a.sent();\n            validatedResponse = this.validateNativeResponse(response);\n            return [2\n            /*return*/\n            , this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp).then(function (result) {\n              nativeATMeasurement.endMeasurement({\n                success: true,\n                isNativeBroker: true,\n                requestId: result.requestId\n              });\n              return result;\n            }).catch(function (error) {\n              nativeATMeasurement.endMeasurement({\n                success: false,\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                isNativeBroker: true\n              });\n              throw error;\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * Creates silent flow request\r\n   * @param request\r\n   * @param cachedAccount\r\n   * @returns CommonSilentFlowRequest\r\n   */\n\n\n  NativeInteractionClient.prototype.createSilentCacheRequest = function (request, cachedAccount) {\n    return {\n      authority: request.authority,\n      correlationId: this.correlationId,\n      scopes: ScopeSet.fromString(request.scope).asArray(),\n      account: cachedAccount,\n      forceRefresh: false\n    };\n  };\n  /**\r\n   * Fetches the tokens from the cache if un-expired\r\n   * @param nativeAccountId\r\n   * @param request\r\n   * @returns authenticationResult\r\n   */\n\n\n  NativeInteractionClient.prototype.acquireTokensFromCache = function (nativeAccountId, request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var account, silentRequest, result, e_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!nativeAccountId) {\n              this.logger.warning(\"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\");\n              throw ClientAuthError.createNoAccountFoundError();\n            }\n\n            account = this.browserStorage.getAccountInfoFilteredBy({\n              nativeAccountId: nativeAccountId\n            });\n\n            if (!account) {\n              throw ClientAuthError.createNoAccountFoundError();\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            silentRequest = this.createSilentCacheRequest(request, account);\n            return [4\n            /*yield*/\n            , this.silentCacheClient.acquireToken(silentRequest)];\n\n          case 2:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n\n          case 3:\n            e_2 = _a.sent();\n            throw e_2;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\r\n   * @param request\r\n   */\n\n\n  NativeInteractionClient.prototype.acquireTokenRedirect = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var nativeRequest, messageBody, response, e_3, navigationOptions, redirectUri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\n            return [4\n            /*yield*/\n            , this.initializeNativeRequest(request)];\n\n          case 1:\n            nativeRequest = _a.sent();\n            messageBody = {\n              method: NativeExtensionMethod.GetToken,\n              request: nativeRequest\n            };\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this.nativeMessageHandler.sendMessage(messageBody)];\n\n          case 3:\n            response = _a.sent();\n            this.validateNativeResponse(response);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            e_3 = _a.sent(); // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\n\n            if (e_3 instanceof NativeAuthError && e_3.isFatal()) {\n              throw e_3;\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 5:\n            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\n            navigationOptions = {\n              apiId: ApiId.acquireTokenRedirect,\n              timeout: this.config.system.redirectNavigationTimeout,\n              noHistory: false\n            };\n            redirectUri = this.config.auth.navigateToLoginRequestUrl ? window.location.href : this.getRedirectUri(request.redirectUri);\n            return [4\n            /*yield*/\n            , this.navigationClient.navigateExternal(redirectUri, navigationOptions)];\n\n          case 6:\n            _a.sent(); // Need to treat this as external to ensure handleRedirectPromise is run again\n\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\r\n   */\n\n\n  NativeInteractionClient.prototype.handleRedirectPromise = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var cachedRequest, prompt, request, messageBody, reqTimestamp, response, result, e_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\n\n            if (!this.browserStorage.isInteractionInProgress(true)) {\n              this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n              return [2\n              /*return*/\n              , null];\n            }\n\n            cachedRequest = this.browserStorage.getCachedNativeRequest();\n\n            if (!cachedRequest) {\n              this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\n              return [2\n              /*return*/\n              , null];\n            }\n\n            prompt = cachedRequest.prompt, request = __rest(cachedRequest, [\"prompt\"]);\n\n            if (prompt) {\n              this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\");\n            }\n\n            this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\n            messageBody = {\n              method: NativeExtensionMethod.GetToken,\n              request: request\n            };\n            reqTimestamp = TimeUtils.nowSeconds();\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\n            return [4\n            /*yield*/\n            , this.nativeMessageHandler.sendMessage(messageBody)];\n\n          case 2:\n            response = _a.sent();\n            this.validateNativeResponse(response);\n            result = this.handleNativeResponse(response, request, reqTimestamp);\n            this.browserStorage.setInteractionInProgress(false);\n            return [2\n            /*return*/\n            , result];\n\n          case 3:\n            e_4 = _a.sent();\n            this.browserStorage.setInteractionInProgress(false);\n            throw e_4;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Logout from native platform via browser extension\r\n   * @param request\r\n   */\n\n\n  NativeInteractionClient.prototype.logout = function () {\n    this.logger.trace(\"NativeInteractionClient - logout called.\");\n    return Promise.reject(\"Logout not implemented yet\");\n  };\n  /**\r\n   * Transform response from native platform into AuthenticationResult object which will be returned to the end user\r\n   * @param response\r\n   * @param request\r\n   * @param reqTimestamp\r\n   */\n\n\n  NativeInteractionClient.prototype.handleNativeResponse = function (response, request, reqTimestamp) {\n    return __awaiter(this, void 0, void 0, function () {\n      var authority, authorityPreferredCache, idTokenObj, homeAccountIdentifier, accountEntity, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\n\n            if (response.account.id !== request.accountId) {\n              // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\n              throw NativeAuthError.createUserSwitchError();\n            }\n\n            return [4\n            /*yield*/\n            , this.getDiscoveredAuthority(request.authority)];\n\n          case 1:\n            authority = _a.sent();\n            authorityPreferredCache = authority.getPreferredCache();\n            idTokenObj = this.createIdTokenObj(response);\n            homeAccountIdentifier = this.createHomeAccountIdentifier(response, idTokenObj);\n            accountEntity = this.createAccountEntity(response, homeAccountIdentifier, idTokenObj, authorityPreferredCache);\n            return [4\n            /*yield*/\n            , this.generateAuthenticationResult(response, request, idTokenObj, accountEntity, authority.canonicalAuthority, reqTimestamp)];\n\n          case 2:\n            result = _a.sent(); // cache accounts and tokens in the appropriate storage\n\n            this.cacheAccount(accountEntity);\n            this.cacheNativeTokens(response, request, homeAccountIdentifier, accountEntity, idTokenObj, result.accessToken, result.tenantId, reqTimestamp);\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\r\n   * Create an idToken Object (not entity)\r\n   * @param response\r\n   * @returns\r\n   */\n\n\n  NativeInteractionClient.prototype.createIdTokenObj = function (response) {\n    return new AuthToken(response.id_token || Constants.EMPTY_STRING, this.browserCrypto);\n  };\n  /**\r\n   * creates an homeAccountIdentifier for the account\r\n   * @param response\r\n   * @param idTokenObj\r\n   * @returns\r\n   */\n\n\n  NativeInteractionClient.prototype.createHomeAccountIdentifier = function (response, idTokenObj) {\n    // Save account in browser storage\n    var homeAccountIdentifier = AccountEntity.generateHomeAccountId(response.client_info || Constants.EMPTY_STRING, AuthorityType.Default, this.logger, this.browserCrypto, idTokenObj);\n    return homeAccountIdentifier;\n  };\n  /**\r\n   * Creates account entity\r\n   * @param response\r\n   * @param homeAccountIdentifier\r\n   * @param idTokenObj\r\n   * @param authority\r\n   * @returns\r\n   */\n\n\n  NativeInteractionClient.prototype.createAccountEntity = function (response, homeAccountIdentifier, idTokenObj, authority) {\n    return AccountEntity.createAccount(response.client_info, homeAccountIdentifier, idTokenObj, undefined, undefined, undefined, authority, response.account.id);\n  };\n  /**\r\n   * Helper to generate scopes\r\n   * @param response\r\n   * @param request\r\n   * @returns\r\n   */\n\n\n  NativeInteractionClient.prototype.generateScopes = function (response, request) {\n    return response.scope ? ScopeSet.fromString(response.scope) : ScopeSet.fromString(request.scope);\n  };\n  /**\r\n   * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\r\n   * @param request\r\n   * @param response\r\n   */\n\n\n  NativeInteractionClient.prototype.generatePopAccessToken = function (response, request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var popTokenGenerator, shrParameters;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(request.tokenType === AuthenticationScheme.POP)) return [3\n            /*break*/\n            , 2];\n            /**\r\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\r\n             * is still received, SHR is calculated locally\r\n             */\n            // Check if native layer returned an SHR token\n\n            if (response.shr) {\n              this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\n              return [2\n              /*return*/\n              , response.shr];\n            }\n\n            popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            shrParameters = {\n              resourceRequestMethod: request.resourceRequestMethod,\n              resourceRequestUri: request.resourceRequestUri,\n              shrClaims: request.shrClaims,\n              shrNonce: request.shrNonce\n            };\n            /**\r\n             * KeyID must be present in the native request from when the PoP key was generated in order for\r\n             * PopTokenGenerator to query the full key for signing\r\n             */\n\n            if (!request.keyId) {\n              throw ClientAuthError.createKeyIdMissingError();\n            }\n\n            return [4\n            /*yield*/\n            , popTokenGenerator.signPopToken(response.access_token, request.keyId, shrParameters)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 2:\n            return [2\n            /*return*/\n            , response.access_token];\n        }\n      });\n    });\n  };\n  /**\r\n   * Generates authentication result\r\n   * @param response\r\n   * @param request\r\n   * @param idTokenObj\r\n   * @param accountEntity\r\n   * @param authority\r\n   * @param reqTimestamp\r\n   * @returns\r\n   */\n\n\n  NativeInteractionClient.prototype.generateAuthenticationResult = function (response, request, idTokenObj, accountEntity, authority, reqTimestamp) {\n    return __awaiter(this, void 0, void 0, function () {\n      var mats, responseScopes, accountProperties, uid, tid, responseAccessToken, tokenType, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            mats = this.addTelemetryFromNativeResponse(response);\n            responseScopes = response.scope ? ScopeSet.fromString(response.scope) : ScopeSet.fromString(request.scope);\n            accountProperties = response.account.properties || {};\n            uid = accountProperties[\"UID\"] || idTokenObj.claims.oid || idTokenObj.claims.sub || Constants.EMPTY_STRING;\n            tid = accountProperties[\"TenantId\"] || idTokenObj.claims.tid || Constants.EMPTY_STRING;\n            return [4\n            /*yield*/\n            , this.generatePopAccessToken(response, request)];\n\n          case 1:\n            responseAccessToken = _a.sent();\n            tokenType = request.tokenType === AuthenticationScheme.POP ? AuthenticationScheme.POP : AuthenticationScheme.BEARER;\n            result = {\n              authority: authority,\n              uniqueId: uid,\n              tenantId: tid,\n              scopes: responseScopes.asArray(),\n              account: accountEntity.getAccountInfo(),\n              idToken: response.id_token,\n              idTokenClaims: idTokenObj.claims,\n              accessToken: responseAccessToken,\n              fromCache: mats ? this.isResponseFromCache(mats) : false,\n              expiresOn: new Date(Number(reqTimestamp + response.expires_in) * 1000),\n              tokenType: tokenType,\n              correlationId: this.correlationId,\n              state: response.state,\n              fromNativeBroker: true\n            };\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\r\n   * cache the account entity in browser storage\r\n   * @param accountEntity\r\n   */\n\n\n  NativeInteractionClient.prototype.cacheAccount = function (accountEntity) {\n    var _this = this; // Store the account info and hence `nativeAccountId` in browser cache\n\n\n    this.browserStorage.setAccount(accountEntity); // Remove any existing cached tokens for this account in browser storage\n\n    this.browserStorage.removeAccountContext(accountEntity).catch(function (e) {\n      _this.logger.error(\"Error occurred while removing account context from browser storage. \" + e);\n    });\n  };\n  /**\r\n   * Stores the access_token and id_token in inmemory storage\r\n   * @param response\r\n   * @param request\r\n   * @param homeAccountIdentifier\r\n   * @param idTokenObj\r\n   * @param responseAccessToken\r\n   * @param tenantId\r\n   * @param reqTimestamp\r\n   */\n\n\n  NativeInteractionClient.prototype.cacheNativeTokens = function (response, request, homeAccountIdentifier, accountEntity, idTokenObj, responseAccessToken, tenantId, reqTimestamp) {\n    var cachedIdToken = IdTokenEntity.createIdTokenEntity(homeAccountIdentifier, request.authority, response.id_token || Constants.EMPTY_STRING, request.clientId, idTokenObj.claims.tid || Constants.EMPTY_STRING); // cache accessToken in inmemory storage\n\n    var expiresIn = request.tokenType === AuthenticationScheme.POP ? Constants.SHR_NONCE_VALIDITY : (typeof response.expires_in === \"string\" ? parseInt(response.expires_in, 10) : response.expires_in) || 0;\n    var tokenExpirationSeconds = reqTimestamp + expiresIn;\n    var responseScopes = this.generateScopes(response, request);\n    var cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(homeAccountIdentifier, request.authority, responseAccessToken, request.clientId, idTokenObj ? idTokenObj.claims.tid || Constants.EMPTY_STRING : tenantId, responseScopes.printScopes(), tokenExpirationSeconds, 0, this.browserCrypto);\n    var nativeCacheRecord = new CacheRecord(accountEntity, cachedIdToken, cachedAccessToken);\n    this.nativeStorageManager.saveCacheRecord(nativeCacheRecord);\n  };\n\n  NativeInteractionClient.prototype.addTelemetryFromNativeResponse = function (response) {\n    var mats = this.getMATSFromResponse(response);\n\n    if (!mats) {\n      return null;\n    }\n\n    this.performanceClient.addStaticFields({\n      extensionId: this.nativeMessageHandler.getExtensionId(),\n      extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\n      matsBrokerVersion: mats.broker_version,\n      matsAccountJoinOnStart: mats.account_join_on_start,\n      matsAccountJoinOnEnd: mats.account_join_on_end,\n      matsDeviceJoin: mats.device_join,\n      matsPromptBehavior: mats.prompt_behavior,\n      matsApiErrorCode: mats.api_error_code,\n      matsUiVisible: mats.ui_visible,\n      matsSilentCode: mats.silent_code,\n      matsSilentBiSubCode: mats.silent_bi_sub_code,\n      matsSilentMessage: mats.silent_message,\n      matsSilentStatus: mats.silent_status,\n      matsHttpStatus: mats.http_status,\n      matsHttpEventCount: mats.http_event_count\n    }, this.correlationId);\n    return mats;\n  };\n  /**\r\n   * Validates native platform response before processing\r\n   * @param response\r\n   */\n\n\n  NativeInteractionClient.prototype.validateNativeResponse = function (response) {\n    if (response.hasOwnProperty(\"access_token\") && response.hasOwnProperty(\"id_token\") && response.hasOwnProperty(\"client_info\") && response.hasOwnProperty(\"account\") && response.hasOwnProperty(\"scope\") && response.hasOwnProperty(\"expires_in\")) {\n      return response;\n    } else {\n      throw NativeAuthError.createUnexpectedError(\"Response missing expected properties.\");\n    }\n  };\n  /**\r\n   * Gets MATS telemetry from native response\r\n   * @param response\r\n   * @returns\r\n   */\n\n\n  NativeInteractionClient.prototype.getMATSFromResponse = function (response) {\n    if (response.properties.MATS) {\n      try {\n        return JSON.parse(response.properties.MATS);\n      } catch (e) {\n        this.logger.error(\"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\");\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns whether or not response came from native cache\r\n   * @param response\r\n   * @returns\r\n   */\n\n\n  NativeInteractionClient.prototype.isResponseFromCache = function (mats) {\n    if (typeof mats.is_cached === \"undefined\") {\n      this.logger.verbose(\"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\");\n      return false;\n    }\n\n    return !!mats.is_cached;\n  };\n  /**\r\n   * Translates developer provided request object into NativeRequest object\r\n   * @param request\r\n   */\n\n\n  NativeInteractionClient.prototype.initializeNativeRequest = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var authority, canonicalAuthority, scopes, remainingProperties, scopeSet, getPrompt, validatedRequest, shrParameters, popTokenGenerator, reqCnfData;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\n            authority = request.authority || this.config.auth.authority;\n            if (!request.account) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.validateRequestAuthority(authority, request.account)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            canonicalAuthority = new UrlString(authority);\n            canonicalAuthority.validateAsUri();\n            scopes = request.scopes, remainingProperties = __rest(request, [\"scopes\"]);\n            scopeSet = new ScopeSet(scopes || []);\n            scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\n\n            getPrompt = function () {\n              // If request is silent, prompt is always none\n              switch (_this.apiId) {\n                case ApiId.ssoSilent:\n                case ApiId.acquireTokenSilent_silentFlow:\n                  _this.logger.trace(\"initializeNativeRequest: silent request sets prompt to none\");\n\n                  return PromptValue.NONE;\n              } // Prompt not provided, request may proceed and native broker decides if it needs to prompt\n\n\n              if (!request.prompt) {\n                _this.logger.trace(\"initializeNativeRequest: prompt was not provided\");\n\n                return undefined;\n              } // If request is interactive, check if prompt provided is allowed to go directly to native broker\n\n\n              switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                  _this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\n\n                  return request.prompt;\n\n                default:\n                  _this.logger.trace(\"initializeNativeRequest: prompt = \" + request.prompt + \" is not compatible with native flow\");\n\n                  throw BrowserAuthError.createNativePromptParameterNotSupportedError();\n              }\n            };\n\n            validatedRequest = __assign(__assign({}, remainingProperties), {\n              accountId: this.accountId,\n              clientId: this.config.auth.clientId,\n              authority: canonicalAuthority.urlString,\n              scope: scopeSet.printScopes(),\n              redirectUri: this.getRedirectUri(request.redirectUri),\n              prompt: getPrompt(),\n              correlationId: this.correlationId,\n              tokenType: request.authenticationScheme,\n              windowTitleSubstring: document.title,\n              extraParameters: __assign(__assign(__assign({}, request.extraQueryParameters), request.tokenQueryParameters), {\n                telemetry: NativeConstants.MATS_TELEMETRY\n              }),\n              extendedExpiryToken: false // Make this configurable?\n\n            });\n            if (!(request.authenticationScheme === AuthenticationScheme.POP)) return [3\n            /*break*/\n            , 4];\n            shrParameters = {\n              resourceRequestUri: request.resourceRequestUri,\n              resourceRequestMethod: request.resourceRequestMethod,\n              shrClaims: request.shrClaims,\n              shrNonce: request.shrNonce\n            };\n            popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            return [4\n            /*yield*/\n            , popTokenGenerator.generateCnf(shrParameters)];\n\n          case 3:\n            reqCnfData = _a.sent(); // to reduce the URL length, it is recommended to send the short form of the req_cnf \n\n            validatedRequest.reqCnf = reqCnfData.reqCnfString;\n            validatedRequest.keyId = reqCnfData.kid;\n            _a.label = 4;\n\n          case 4:\n            return [2\n            /*return*/\n            , validatedRequest];\n        }\n      });\n    });\n  };\n\n  return NativeInteractionClient;\n}(BaseInteractionClient);\n\nexport { NativeInteractionClient };","map":{"version":3,"names":["__extends","__awaiter","__generator","__rest","__assign","ScopeSet","AuthToken","Constants","AccountEntity","AuthorityType","IdTokenEntity","AccessTokenEntity","CacheRecord","PerformanceEvents","TimeUtils","ClientAuthError","AuthenticationScheme","PopTokenGenerator","UrlString","OIDC_DEFAULT_SCOPES","PromptValue","BaseInteractionClient","TemporaryCacheKeys","NativeExtensionMethod","NativeConstants","ApiId","NativeAuthError","BrowserAuthError","SilentCacheClient","NativeInteractionClient","_super","config","browserStorage","browserCrypto","logger","eventHandler","navigationClient","apiId","performanceClient","provider","accountId","nativeStorageImpl","correlationId","_this","call","nativeMessageHandler","nativeStorageManager","silentCacheClient","prototype","acquireToken","request","nativeATMeasurement","reqTimestamp","nativeRequest","result","messageBody","response","validatedResponse","_a","label","trace","startMeasurement","NativeInteractionClientAcquireToken","nowSeconds","initializeNativeRequest","sent","trys","push","acquireTokensFromCache","endMeasurement","success","isNativeBroker","fromCache","info","method","GetToken","sendMessage","validateNativeResponse","handleNativeResponse","then","requestId","catch","error","errorCode","subErrorCode","subError","createSilentCacheRequest","cachedAccount","authority","scopes","fromString","scope","asArray","account","forceRefresh","nativeAccountId","silentRequest","e_2","warning","createNoAccountFoundError","getAccountInfoFilteredBy","acquireTokenRedirect","e_3","navigationOptions","redirectUri","isFatal","setTemporaryCache","NATIVE_REQUEST","JSON","stringify","timeout","system","redirectNavigationTimeout","noHistory","auth","navigateToLoginRequestUrl","window","location","href","getRedirectUri","navigateExternal","handleRedirectPromise","cachedRequest","prompt","e_4","isInteractionInProgress","getCachedNativeRequest","verbose","removeItem","generateCacheKey","setInteractionInProgress","logout","Promise","reject","authorityPreferredCache","idTokenObj","homeAccountIdentifier","accountEntity","id","createUserSwitchError","getDiscoveredAuthority","getPreferredCache","createIdTokenObj","createHomeAccountIdentifier","createAccountEntity","generateAuthenticationResult","canonicalAuthority","cacheAccount","cacheNativeTokens","accessToken","tenantId","id_token","EMPTY_STRING","generateHomeAccountId","client_info","Default","createAccount","undefined","generateScopes","generatePopAccessToken","popTokenGenerator","shrParameters","tokenType","POP","shr","resourceRequestMethod","resourceRequestUri","shrClaims","shrNonce","keyId","createKeyIdMissingError","signPopToken","access_token","mats","responseScopes","accountProperties","uid","tid","responseAccessToken","addTelemetryFromNativeResponse","properties","claims","oid","sub","BEARER","uniqueId","getAccountInfo","idToken","idTokenClaims","isResponseFromCache","expiresOn","Date","Number","expires_in","state","fromNativeBroker","setAccount","removeAccountContext","e","cachedIdToken","createIdTokenEntity","clientId","expiresIn","SHR_NONCE_VALIDITY","parseInt","tokenExpirationSeconds","cachedAccessToken","createAccessTokenEntity","printScopes","nativeCacheRecord","saveCacheRecord","getMATSFromResponse","addStaticFields","extensionId","getExtensionId","extensionVersion","getExtensionVersion","matsBrokerVersion","broker_version","matsAccountJoinOnStart","account_join_on_start","matsAccountJoinOnEnd","account_join_on_end","matsDeviceJoin","device_join","matsPromptBehavior","prompt_behavior","matsApiErrorCode","api_error_code","matsUiVisible","ui_visible","matsSilentCode","silent_code","matsSilentBiSubCode","silent_bi_sub_code","matsSilentMessage","silent_message","matsSilentStatus","silent_status","matsHttpStatus","http_status","matsHttpEventCount","http_event_count","hasOwnProperty","createUnexpectedError","MATS","parse","is_cached","remainingProperties","scopeSet","getPrompt","validatedRequest","reqCnfData","validateRequestAuthority","validateAsUri","appendScopes","ssoSilent","acquireTokenSilent_silentFlow","NONE","CONSENT","LOGIN","createNativePromptParameterNotSupportedError","urlString","authenticationScheme","windowTitleSubstring","document","title","extraParameters","extraQueryParameters","tokenQueryParameters","telemetry","MATS_TELEMETRY","extendedExpiryToken","generateCnf","reqCnf","reqCnfString","kid"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\nimport { __extends, __awaiter, __generator, __rest, __assign } from '../_virtual/_tslib.js';\nimport { ScopeSet, AuthToken, Constants, AccountEntity, AuthorityType, IdTokenEntity, AccessTokenEntity, CacheRecord, PerformanceEvents, TimeUtils, ClientAuthError, AuthenticationScheme, PopTokenGenerator, UrlString, OIDC_DEFAULT_SCOPES, PromptValue } from '@azure/msal-common';\nimport { BaseInteractionClient } from './BaseInteractionClient.js';\nimport { TemporaryCacheKeys, NativeExtensionMethod, NativeConstants, ApiId } from '../utils/BrowserConstants.js';\nimport { NativeAuthError } from '../error/NativeAuthError.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { SilentCacheClient } from './SilentCacheClient.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar NativeInteractionClient = /** @class */ (function (_super) {\r\n    __extends(NativeInteractionClient, _super);\r\n    function NativeInteractionClient(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, provider, accountId, nativeStorageImpl, correlationId) {\r\n        var _this = _super.call(this, config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId) || this;\r\n        _this.apiId = apiId;\r\n        _this.accountId = accountId;\r\n        _this.nativeMessageHandler = provider;\r\n        _this.nativeStorageManager = nativeStorageImpl;\r\n        _this.silentCacheClient = new SilentCacheClient(config, _this.nativeStorageManager, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Acquire token from native platform via browser extension\r\n     * @param request\r\n     */\r\n    NativeInteractionClient.prototype.acquireToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var nativeATMeasurement, reqTimestamp, nativeRequest, result, messageBody, response, validatedResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\r\n                        nativeATMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\r\n                        reqTimestamp = TimeUtils.nowSeconds();\r\n                        return [4 /*yield*/, this.initializeNativeRequest(request)];\r\n                    case 1:\r\n                        nativeRequest = _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.acquireTokensFromCache(this.accountId, nativeRequest)];\r\n                    case 3:\r\n                        result = _a.sent();\r\n                        nativeATMeasurement.endMeasurement({\r\n                            success: true,\r\n                            isNativeBroker: false,\r\n                            fromCache: true\r\n                        });\r\n                        return [2 /*return*/, result];\r\n                    case 4:\r\n                        _a.sent();\r\n                        // continue with a native call for any and all errors\r\n                        this.logger.info(\"MSAL internal Cache does not contain tokens, proceed to make a native call\");\r\n                        return [3 /*break*/, 5];\r\n                    case 5:\r\n                        messageBody = {\r\n                            method: NativeExtensionMethod.GetToken,\r\n                            request: nativeRequest\r\n                        };\r\n                        return [4 /*yield*/, this.nativeMessageHandler.sendMessage(messageBody)];\r\n                    case 6:\r\n                        response = _a.sent();\r\n                        validatedResponse = this.validateNativeResponse(response);\r\n                        return [2 /*return*/, this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp)\r\n                                .then(function (result) {\r\n                                nativeATMeasurement.endMeasurement({\r\n                                    success: true,\r\n                                    isNativeBroker: true,\r\n                                    requestId: result.requestId\r\n                                });\r\n                                return result;\r\n                            })\r\n                                .catch(function (error) {\r\n                                nativeATMeasurement.endMeasurement({\r\n                                    success: false,\r\n                                    errorCode: error.errorCode,\r\n                                    subErrorCode: error.subError,\r\n                                    isNativeBroker: true\r\n                                });\r\n                                throw error;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates silent flow request\r\n     * @param request\r\n     * @param cachedAccount\r\n     * @returns CommonSilentFlowRequest\r\n     */\r\n    NativeInteractionClient.prototype.createSilentCacheRequest = function (request, cachedAccount) {\r\n        return {\r\n            authority: request.authority,\r\n            correlationId: this.correlationId,\r\n            scopes: ScopeSet.fromString(request.scope).asArray(),\r\n            account: cachedAccount,\r\n            forceRefresh: false,\r\n        };\r\n    };\r\n    /**\r\n     * Fetches the tokens from the cache if un-expired\r\n     * @param nativeAccountId\r\n     * @param request\r\n     * @returns authenticationResult\r\n     */\r\n    NativeInteractionClient.prototype.acquireTokensFromCache = function (nativeAccountId, request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var account, silentRequest, result, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!nativeAccountId) {\r\n                            this.logger.warning(\"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\");\r\n                            throw ClientAuthError.createNoAccountFoundError();\r\n                        }\r\n                        account = this.browserStorage.getAccountInfoFilteredBy({ nativeAccountId: nativeAccountId });\r\n                        if (!account) {\r\n                            throw ClientAuthError.createNoAccountFoundError();\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        silentRequest = this.createSilentCacheRequest(request, account);\r\n                        return [4 /*yield*/, this.silentCacheClient.acquireToken(silentRequest)];\r\n                    case 2:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                    case 3:\r\n                        e_2 = _a.sent();\r\n                        throw e_2;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\r\n     * @param request\r\n     */\r\n    NativeInteractionClient.prototype.acquireTokenRedirect = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var nativeRequest, messageBody, response, e_3, navigationOptions, redirectUri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\r\n                        return [4 /*yield*/, this.initializeNativeRequest(request)];\r\n                    case 1:\r\n                        nativeRequest = _a.sent();\r\n                        messageBody = {\r\n                            method: NativeExtensionMethod.GetToken,\r\n                            request: nativeRequest\r\n                        };\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.nativeMessageHandler.sendMessage(messageBody)];\r\n                    case 3:\r\n                        response = _a.sent();\r\n                        this.validateNativeResponse(response);\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_3 = _a.sent();\r\n                        // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\r\n                        if (e_3 instanceof NativeAuthError && e_3.isFatal()) {\r\n                            throw e_3;\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 5:\r\n                        this.browserStorage.setTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\r\n                        navigationOptions = {\r\n                            apiId: ApiId.acquireTokenRedirect,\r\n                            timeout: this.config.system.redirectNavigationTimeout,\r\n                            noHistory: false\r\n                        };\r\n                        redirectUri = this.config.auth.navigateToLoginRequestUrl ? window.location.href : this.getRedirectUri(request.redirectUri);\r\n                        return [4 /*yield*/, this.navigationClient.navigateExternal(redirectUri, navigationOptions)];\r\n                    case 6:\r\n                        _a.sent(); // Need to treat this as external to ensure handleRedirectPromise is run again\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\r\n     */\r\n    NativeInteractionClient.prototype.handleRedirectPromise = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var cachedRequest, prompt, request, messageBody, reqTimestamp, response, result, e_4;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\r\n                        if (!this.browserStorage.isInteractionInProgress(true)) {\r\n                            this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        cachedRequest = this.browserStorage.getCachedNativeRequest();\r\n                        if (!cachedRequest) {\r\n                            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        prompt = cachedRequest.prompt, request = __rest(cachedRequest, [\"prompt\"]);\r\n                        if (prompt) {\r\n                            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\");\r\n                        }\r\n                        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\r\n                        messageBody = {\r\n                            method: NativeExtensionMethod.GetToken,\r\n                            request: request\r\n                        };\r\n                        reqTimestamp = TimeUtils.nowSeconds();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\r\n                        return [4 /*yield*/, this.nativeMessageHandler.sendMessage(messageBody)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        this.validateNativeResponse(response);\r\n                        result = this.handleNativeResponse(response, request, reqTimestamp);\r\n                        this.browserStorage.setInteractionInProgress(false);\r\n                        return [2 /*return*/, result];\r\n                    case 3:\r\n                        e_4 = _a.sent();\r\n                        this.browserStorage.setInteractionInProgress(false);\r\n                        throw e_4;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Logout from native platform via browser extension\r\n     * @param request\r\n     */\r\n    NativeInteractionClient.prototype.logout = function () {\r\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\r\n        return Promise.reject(\"Logout not implemented yet\");\r\n    };\r\n    /**\r\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\r\n     * @param response\r\n     * @param request\r\n     * @param reqTimestamp\r\n     */\r\n    NativeInteractionClient.prototype.handleNativeResponse = function (response, request, reqTimestamp) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authority, authorityPreferredCache, idTokenObj, homeAccountIdentifier, accountEntity, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\r\n                        if (response.account.id !== request.accountId) {\r\n                            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\r\n                            throw NativeAuthError.createUserSwitchError();\r\n                        }\r\n                        return [4 /*yield*/, this.getDiscoveredAuthority(request.authority)];\r\n                    case 1:\r\n                        authority = _a.sent();\r\n                        authorityPreferredCache = authority.getPreferredCache();\r\n                        idTokenObj = this.createIdTokenObj(response);\r\n                        homeAccountIdentifier = this.createHomeAccountIdentifier(response, idTokenObj);\r\n                        accountEntity = this.createAccountEntity(response, homeAccountIdentifier, idTokenObj, authorityPreferredCache);\r\n                        return [4 /*yield*/, this.generateAuthenticationResult(response, request, idTokenObj, accountEntity, authority.canonicalAuthority, reqTimestamp)];\r\n                    case 2:\r\n                        result = _a.sent();\r\n                        // cache accounts and tokens in the appropriate storage\r\n                        this.cacheAccount(accountEntity);\r\n                        this.cacheNativeTokens(response, request, homeAccountIdentifier, accountEntity, idTokenObj, result.accessToken, result.tenantId, reqTimestamp);\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create an idToken Object (not entity)\r\n     * @param response\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.createIdTokenObj = function (response) {\r\n        return new AuthToken(response.id_token || Constants.EMPTY_STRING, this.browserCrypto);\r\n    };\r\n    /**\r\n     * creates an homeAccountIdentifier for the account\r\n     * @param response\r\n     * @param idTokenObj\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.createHomeAccountIdentifier = function (response, idTokenObj) {\r\n        // Save account in browser storage\r\n        var homeAccountIdentifier = AccountEntity.generateHomeAccountId(response.client_info || Constants.EMPTY_STRING, AuthorityType.Default, this.logger, this.browserCrypto, idTokenObj);\r\n        return homeAccountIdentifier;\r\n    };\r\n    /**\r\n     * Creates account entity\r\n     * @param response\r\n     * @param homeAccountIdentifier\r\n     * @param idTokenObj\r\n     * @param authority\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.createAccountEntity = function (response, homeAccountIdentifier, idTokenObj, authority) {\r\n        return AccountEntity.createAccount(response.client_info, homeAccountIdentifier, idTokenObj, undefined, undefined, undefined, authority, response.account.id);\r\n    };\r\n    /**\r\n     * Helper to generate scopes\r\n     * @param response\r\n     * @param request\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.generateScopes = function (response, request) {\r\n        return response.scope ? ScopeSet.fromString(response.scope) : ScopeSet.fromString(request.scope);\r\n    };\r\n    /**\r\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\r\n     * @param request\r\n     * @param response\r\n     */\r\n    NativeInteractionClient.prototype.generatePopAccessToken = function (response, request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var popTokenGenerator, shrParameters;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(request.tokenType === AuthenticationScheme.POP)) return [3 /*break*/, 2];\r\n                        /**\r\n                         * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\r\n                         * is still received, SHR is calculated locally\r\n                         */\r\n                        // Check if native layer returned an SHR token\r\n                        if (response.shr) {\r\n                            this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\r\n                            return [2 /*return*/, response.shr];\r\n                        }\r\n                        popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\r\n                        shrParameters = {\r\n                            resourceRequestMethod: request.resourceRequestMethod,\r\n                            resourceRequestUri: request.resourceRequestUri,\r\n                            shrClaims: request.shrClaims,\r\n                            shrNonce: request.shrNonce\r\n                        };\r\n                        /**\r\n                         * KeyID must be present in the native request from when the PoP key was generated in order for\r\n                         * PopTokenGenerator to query the full key for signing\r\n                         */\r\n                        if (!request.keyId) {\r\n                            throw ClientAuthError.createKeyIdMissingError();\r\n                        }\r\n                        return [4 /*yield*/, popTokenGenerator.signPopToken(response.access_token, request.keyId, shrParameters)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                    case 2: return [2 /*return*/, response.access_token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates authentication result\r\n     * @param response\r\n     * @param request\r\n     * @param idTokenObj\r\n     * @param accountEntity\r\n     * @param authority\r\n     * @param reqTimestamp\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.generateAuthenticationResult = function (response, request, idTokenObj, accountEntity, authority, reqTimestamp) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var mats, responseScopes, accountProperties, uid, tid, responseAccessToken, tokenType, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        mats = this.addTelemetryFromNativeResponse(response);\r\n                        responseScopes = response.scope ? ScopeSet.fromString(response.scope) : ScopeSet.fromString(request.scope);\r\n                        accountProperties = response.account.properties || {};\r\n                        uid = accountProperties[\"UID\"] || idTokenObj.claims.oid || idTokenObj.claims.sub || Constants.EMPTY_STRING;\r\n                        tid = accountProperties[\"TenantId\"] || idTokenObj.claims.tid || Constants.EMPTY_STRING;\r\n                        return [4 /*yield*/, this.generatePopAccessToken(response, request)];\r\n                    case 1:\r\n                        responseAccessToken = _a.sent();\r\n                        tokenType = (request.tokenType === AuthenticationScheme.POP) ? AuthenticationScheme.POP : AuthenticationScheme.BEARER;\r\n                        result = {\r\n                            authority: authority,\r\n                            uniqueId: uid,\r\n                            tenantId: tid,\r\n                            scopes: responseScopes.asArray(),\r\n                            account: accountEntity.getAccountInfo(),\r\n                            idToken: response.id_token,\r\n                            idTokenClaims: idTokenObj.claims,\r\n                            accessToken: responseAccessToken,\r\n                            fromCache: mats ? this.isResponseFromCache(mats) : false,\r\n                            expiresOn: new Date(Number(reqTimestamp + response.expires_in) * 1000),\r\n                            tokenType: tokenType,\r\n                            correlationId: this.correlationId,\r\n                            state: response.state,\r\n                            fromNativeBroker: true\r\n                        };\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * cache the account entity in browser storage\r\n     * @param accountEntity\r\n     */\r\n    NativeInteractionClient.prototype.cacheAccount = function (accountEntity) {\r\n        var _this = this;\r\n        // Store the account info and hence `nativeAccountId` in browser cache\r\n        this.browserStorage.setAccount(accountEntity);\r\n        // Remove any existing cached tokens for this account in browser storage\r\n        this.browserStorage.removeAccountContext(accountEntity).catch(function (e) {\r\n            _this.logger.error(\"Error occurred while removing account context from browser storage. \" + e);\r\n        });\r\n    };\r\n    /**\r\n     * Stores the access_token and id_token in inmemory storage\r\n     * @param response\r\n     * @param request\r\n     * @param homeAccountIdentifier\r\n     * @param idTokenObj\r\n     * @param responseAccessToken\r\n     * @param tenantId\r\n     * @param reqTimestamp\r\n     */\r\n    NativeInteractionClient.prototype.cacheNativeTokens = function (response, request, homeAccountIdentifier, accountEntity, idTokenObj, responseAccessToken, tenantId, reqTimestamp) {\r\n        var cachedIdToken = IdTokenEntity.createIdTokenEntity(homeAccountIdentifier, request.authority, response.id_token || Constants.EMPTY_STRING, request.clientId, idTokenObj.claims.tid || Constants.EMPTY_STRING);\r\n        // cache accessToken in inmemory storage\r\n        var expiresIn = (request.tokenType === AuthenticationScheme.POP)\r\n            ? Constants.SHR_NONCE_VALIDITY\r\n            : (typeof response.expires_in === \"string\"\r\n                ? parseInt(response.expires_in, 10)\r\n                : response.expires_in) || 0;\r\n        var tokenExpirationSeconds = reqTimestamp + expiresIn;\r\n        var responseScopes = this.generateScopes(response, request);\r\n        var cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(homeAccountIdentifier, request.authority, responseAccessToken, request.clientId, idTokenObj\r\n            ? idTokenObj.claims.tid || Constants.EMPTY_STRING\r\n            : tenantId, responseScopes.printScopes(), tokenExpirationSeconds, 0, this.browserCrypto);\r\n        var nativeCacheRecord = new CacheRecord(accountEntity, cachedIdToken, cachedAccessToken);\r\n        this.nativeStorageManager.saveCacheRecord(nativeCacheRecord);\r\n    };\r\n    NativeInteractionClient.prototype.addTelemetryFromNativeResponse = function (response) {\r\n        var mats = this.getMATSFromResponse(response);\r\n        if (!mats) {\r\n            return null;\r\n        }\r\n        this.performanceClient.addStaticFields({\r\n            extensionId: this.nativeMessageHandler.getExtensionId(),\r\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\r\n            matsBrokerVersion: mats.broker_version,\r\n            matsAccountJoinOnStart: mats.account_join_on_start,\r\n            matsAccountJoinOnEnd: mats.account_join_on_end,\r\n            matsDeviceJoin: mats.device_join,\r\n            matsPromptBehavior: mats.prompt_behavior,\r\n            matsApiErrorCode: mats.api_error_code,\r\n            matsUiVisible: mats.ui_visible,\r\n            matsSilentCode: mats.silent_code,\r\n            matsSilentBiSubCode: mats.silent_bi_sub_code,\r\n            matsSilentMessage: mats.silent_message,\r\n            matsSilentStatus: mats.silent_status,\r\n            matsHttpStatus: mats.http_status,\r\n            matsHttpEventCount: mats.http_event_count\r\n        }, this.correlationId);\r\n        return mats;\r\n    };\r\n    /**\r\n     * Validates native platform response before processing\r\n     * @param response\r\n     */\r\n    NativeInteractionClient.prototype.validateNativeResponse = function (response) {\r\n        if (response.hasOwnProperty(\"access_token\") &&\r\n            response.hasOwnProperty(\"id_token\") &&\r\n            response.hasOwnProperty(\"client_info\") &&\r\n            response.hasOwnProperty(\"account\") &&\r\n            response.hasOwnProperty(\"scope\") &&\r\n            response.hasOwnProperty(\"expires_in\")) {\r\n            return response;\r\n        }\r\n        else {\r\n            throw NativeAuthError.createUnexpectedError(\"Response missing expected properties.\");\r\n        }\r\n    };\r\n    /**\r\n     * Gets MATS telemetry from native response\r\n     * @param response\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.getMATSFromResponse = function (response) {\r\n        if (response.properties.MATS) {\r\n            try {\r\n                return JSON.parse(response.properties.MATS);\r\n            }\r\n            catch (e) {\r\n                this.logger.error(\"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\");\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns whether or not response came from native cache\r\n     * @param response\r\n     * @returns\r\n     */\r\n    NativeInteractionClient.prototype.isResponseFromCache = function (mats) {\r\n        if (typeof mats.is_cached === \"undefined\") {\r\n            this.logger.verbose(\"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\");\r\n            return false;\r\n        }\r\n        return !!mats.is_cached;\r\n    };\r\n    /**\r\n     * Translates developer provided request object into NativeRequest object\r\n     * @param request\r\n     */\r\n    NativeInteractionClient.prototype.initializeNativeRequest = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authority, canonicalAuthority, scopes, remainingProperties, scopeSet, getPrompt, validatedRequest, shrParameters, popTokenGenerator, reqCnfData;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\r\n                        authority = request.authority || this.config.auth.authority;\r\n                        if (!request.account) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.validateRequestAuthority(authority, request.account)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        canonicalAuthority = new UrlString(authority);\r\n                        canonicalAuthority.validateAsUri();\r\n                        scopes = request.scopes, remainingProperties = __rest(request, [\"scopes\"]);\r\n                        scopeSet = new ScopeSet(scopes || []);\r\n                        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\r\n                        getPrompt = function () {\r\n                            // If request is silent, prompt is always none\r\n                            switch (_this.apiId) {\r\n                                case ApiId.ssoSilent:\r\n                                case ApiId.acquireTokenSilent_silentFlow:\r\n                                    _this.logger.trace(\"initializeNativeRequest: silent request sets prompt to none\");\r\n                                    return PromptValue.NONE;\r\n                            }\r\n                            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\r\n                            if (!request.prompt) {\r\n                                _this.logger.trace(\"initializeNativeRequest: prompt was not provided\");\r\n                                return undefined;\r\n                            }\r\n                            // If request is interactive, check if prompt provided is allowed to go directly to native broker\r\n                            switch (request.prompt) {\r\n                                case PromptValue.NONE:\r\n                                case PromptValue.CONSENT:\r\n                                case PromptValue.LOGIN:\r\n                                    _this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\r\n                                    return request.prompt;\r\n                                default:\r\n                                    _this.logger.trace(\"initializeNativeRequest: prompt = \" + request.prompt + \" is not compatible with native flow\");\r\n                                    throw BrowserAuthError.createNativePromptParameterNotSupportedError();\r\n                            }\r\n                        };\r\n                        validatedRequest = __assign(__assign({}, remainingProperties), { accountId: this.accountId, clientId: this.config.auth.clientId, authority: canonicalAuthority.urlString, scope: scopeSet.printScopes(), redirectUri: this.getRedirectUri(request.redirectUri), prompt: getPrompt(), correlationId: this.correlationId, tokenType: request.authenticationScheme, windowTitleSubstring: document.title, extraParameters: __assign(__assign(__assign({}, request.extraQueryParameters), request.tokenQueryParameters), { telemetry: NativeConstants.MATS_TELEMETRY }), extendedExpiryToken: false // Make this configurable?\r\n                         });\r\n                        if (!(request.authenticationScheme === AuthenticationScheme.POP)) return [3 /*break*/, 4];\r\n                        shrParameters = {\r\n                            resourceRequestUri: request.resourceRequestUri,\r\n                            resourceRequestMethod: request.resourceRequestMethod,\r\n                            shrClaims: request.shrClaims,\r\n                            shrNonce: request.shrNonce\r\n                        };\r\n                        popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\r\n                        return [4 /*yield*/, popTokenGenerator.generateCnf(shrParameters)];\r\n                    case 3:\r\n                        reqCnfData = _a.sent();\r\n                        // to reduce the URL length, it is recommended to send the short form of the req_cnf \r\n                        validatedRequest.reqCnf = reqCnfData.reqCnfString;\r\n                        validatedRequest.keyId = reqCnfData.kid;\r\n                        _a.label = 4;\r\n                    case 4: return [2 /*return*/, validatedRequest];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return NativeInteractionClient;\r\n}(BaseInteractionClient));\n\nexport { NativeInteractionClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}