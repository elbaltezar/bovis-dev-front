{"ast":null,"code":"/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\n\nimport { __extends } from '../../_virtual/_tslib.js';\nimport { CredentialEntity } from './CredentialEntity.js';\nimport { CredentialType } from '../../utils/Constants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * ID_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n * }\r\n */\n\nvar IdTokenEntity =\n/** @class */\nfunction (_super) {\n  __extends(IdTokenEntity, _super);\n\n  function IdTokenEntity() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Create IdTokenEntity\r\n   * @param homeAccountId\r\n   * @param authenticationResult\r\n   * @param clientId\r\n   * @param authority\r\n   */\n\n\n  IdTokenEntity.createIdTokenEntity = function (homeAccountId, environment, idToken, clientId, tenantId) {\n    var idTokenEntity = new IdTokenEntity();\n    idTokenEntity.credentialType = CredentialType.ID_TOKEN;\n    idTokenEntity.homeAccountId = homeAccountId;\n    idTokenEntity.environment = environment;\n    idTokenEntity.clientId = clientId;\n    idTokenEntity.secret = idToken;\n    idTokenEntity.realm = tenantId;\n    return idTokenEntity;\n  };\n  /**\r\n   * Validates an entity: checks for all expected params\r\n   * @param entity\r\n   */\n\n\n  IdTokenEntity.isIdTokenEntity = function (entity) {\n    if (!entity) {\n      return false;\n    }\n\n    return entity.hasOwnProperty(\"homeAccountId\") && entity.hasOwnProperty(\"environment\") && entity.hasOwnProperty(\"credentialType\") && entity.hasOwnProperty(\"realm\") && entity.hasOwnProperty(\"clientId\") && entity.hasOwnProperty(\"secret\") && entity[\"credentialType\"] === CredentialType.ID_TOKEN;\n  };\n\n  return IdTokenEntity;\n}(CredentialEntity);\n\nexport { IdTokenEntity };","map":{"version":3,"names":["__extends","CredentialEntity","CredentialType","IdTokenEntity","_super","apply","arguments","createIdTokenEntity","homeAccountId","environment","idToken","clientId","tenantId","idTokenEntity","credentialType","ID_TOKEN","secret","realm","isIdTokenEntity","entity","hasOwnProperty"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-common/dist/cache/entities/IdTokenEntity.js"],"sourcesContent":["/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\nimport { __extends } from '../../_virtual/_tslib.js';\nimport { CredentialEntity } from './CredentialEntity.js';\nimport { CredentialType } from '../../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ID_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n * }\r\n */\r\nvar IdTokenEntity = /** @class */ (function (_super) {\r\n    __extends(IdTokenEntity, _super);\r\n    function IdTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create IdTokenEntity\r\n     * @param homeAccountId\r\n     * @param authenticationResult\r\n     * @param clientId\r\n     * @param authority\r\n     */\r\n    IdTokenEntity.createIdTokenEntity = function (homeAccountId, environment, idToken, clientId, tenantId) {\r\n        var idTokenEntity = new IdTokenEntity();\r\n        idTokenEntity.credentialType = CredentialType.ID_TOKEN;\r\n        idTokenEntity.homeAccountId = homeAccountId;\r\n        idTokenEntity.environment = environment;\r\n        idTokenEntity.clientId = clientId;\r\n        idTokenEntity.secret = idToken;\r\n        idTokenEntity.realm = tenantId;\r\n        return idTokenEntity;\r\n    };\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    IdTokenEntity.isIdTokenEntity = function (entity) {\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n            entity.hasOwnProperty(\"environment\") &&\r\n            entity.hasOwnProperty(\"credentialType\") &&\r\n            entity.hasOwnProperty(\"realm\") &&\r\n            entity.hasOwnProperty(\"clientId\") &&\r\n            entity.hasOwnProperty(\"secret\") &&\r\n            entity[\"credentialType\"] === CredentialType.ID_TOKEN);\r\n    };\r\n    return IdTokenEntity;\r\n}(CredentialEntity));\n\nexport { IdTokenEntity };\n"],"mappings":"AAAA;AACA;;AACA,SAASA,SAAT,QAA0B,0BAA1B;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,aAAa;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACjDJ,SAAS,CAACG,aAAD,EAAgBC,MAAhB,CAAT;;EACA,SAASD,aAAT,GAAyB;IACrB,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIH,aAAa,CAACI,mBAAd,GAAoC,UAAUC,aAAV,EAAyBC,WAAzB,EAAsCC,OAAtC,EAA+CC,QAA/C,EAAyDC,QAAzD,EAAmE;IACnG,IAAIC,aAAa,GAAG,IAAIV,aAAJ,EAApB;IACAU,aAAa,CAACC,cAAd,GAA+BZ,cAAc,CAACa,QAA9C;IACAF,aAAa,CAACL,aAAd,GAA8BA,aAA9B;IACAK,aAAa,CAACJ,WAAd,GAA4BA,WAA5B;IACAI,aAAa,CAACF,QAAd,GAAyBA,QAAzB;IACAE,aAAa,CAACG,MAAd,GAAuBN,OAAvB;IACAG,aAAa,CAACI,KAAd,GAAsBL,QAAtB;IACA,OAAOC,aAAP;EACH,CATD;EAUA;AACJ;AACA;AACA;;;EACIV,aAAa,CAACe,eAAd,GAAgC,UAAUC,MAAV,EAAkB;IAC9C,IAAI,CAACA,MAAL,EAAa;MACT,OAAO,KAAP;IACH;;IACD,OAAQA,MAAM,CAACC,cAAP,CAAsB,eAAtB,KACJD,MAAM,CAACC,cAAP,CAAsB,aAAtB,CADI,IAEJD,MAAM,CAACC,cAAP,CAAsB,gBAAtB,CAFI,IAGJD,MAAM,CAACC,cAAP,CAAsB,OAAtB,CAHI,IAIJD,MAAM,CAACC,cAAP,CAAsB,UAAtB,CAJI,IAKJD,MAAM,CAACC,cAAP,CAAsB,QAAtB,CALI,IAMJD,MAAM,CAAC,gBAAD,CAAN,KAA6BjB,cAAc,CAACa,QANhD;EAOH,CAXD;;EAYA,OAAOZ,aAAP;AACH,CAvCkC,CAuCjCF,gBAvCiC,CAAnC;;AAyCA,SAASE,aAAT"},"metadata":{},"sourceType":"module"}