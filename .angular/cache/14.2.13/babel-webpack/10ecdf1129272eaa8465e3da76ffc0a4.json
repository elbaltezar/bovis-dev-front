{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { Constants, UrlString } from '@azure/msal-common';\nimport { FetchClient } from '../network/FetchClient.js';\nimport { XhrClient } from '../network/XhrClient.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { BrowserConstants, InteractionType } from './BrowserConstants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * Utility class for browser specific functions\r\n */\n\nvar BrowserUtils =\n/** @class */\nfunction () {\n  function BrowserUtils() {} // #region Window Navigation and URL management\n\n  /**\r\n   * Clears hash from window url.\r\n   */\n\n\n  BrowserUtils.clearHash = function (contentWindow) {\n    // Office.js sets history.replaceState to null\n    contentWindow.location.hash = Constants.EMPTY_STRING;\n\n    if (typeof contentWindow.history.replaceState === \"function\") {\n      // Full removes \"#\" from url\n      contentWindow.history.replaceState(null, Constants.EMPTY_STRING, \"\" + contentWindow.location.origin + contentWindow.location.pathname + contentWindow.location.search);\n    }\n  };\n  /**\r\n   * Replaces current hash with hash from provided url\r\n   */\n\n\n  BrowserUtils.replaceHash = function (url) {\n    var urlParts = url.split(\"#\");\n    urlParts.shift(); // Remove part before the hash\n\n    window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : Constants.EMPTY_STRING;\n  };\n  /**\r\n   * Returns boolean of whether the current window is in an iframe or not.\r\n   */\n\n\n  BrowserUtils.isInIframe = function () {\n    return window.parent !== window;\n  };\n  /**\r\n   * Returns boolean of whether or not the current window is a popup opened by msal\r\n   */\n\n\n  BrowserUtils.isInPopup = function () {\n    return typeof window !== \"undefined\" && !!window.opener && window.opener !== window && typeof window.name === \"string\" && window.name.indexOf(BrowserConstants.POPUP_NAME_PREFIX + \".\") === 0;\n  }; // #endregion\n\n  /**\r\n   * Returns current window URL as redirect uri\r\n   */\n\n\n  BrowserUtils.getCurrentUri = function () {\n    return window.location.href.split(\"?\")[0].split(\"#\")[0];\n  };\n  /**\r\n   * Gets the homepage url for the current window location.\r\n   */\n\n\n  BrowserUtils.getHomepage = function () {\n    var currentUrl = new UrlString(window.location.href);\n    var urlComponents = currentUrl.getUrlComponents();\n    return urlComponents.Protocol + \"//\" + urlComponents.HostNameAndPort + \"/\";\n  };\n  /**\r\n   * Returns best compatible network client object.\r\n   */\n\n\n  BrowserUtils.getBrowserNetworkClient = function () {\n    if (window.fetch && window.Headers) {\n      return new FetchClient();\n    } else {\n      return new XhrClient();\n    }\n  };\n  /**\r\n   * Throws error if we have completed an auth and are\r\n   * attempting another auth request inside an iframe.\r\n   */\n\n\n  BrowserUtils.blockReloadInHiddenIframes = function () {\n    var isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash); // return an error if called from the hidden iframe created by the msal js silent calls\n\n    if (isResponseHash && BrowserUtils.isInIframe()) {\n      throw BrowserAuthError.createBlockReloadInHiddenIframeError();\n    }\n  };\n  /**\r\n   * Block redirect operations in iframes unless explicitly allowed\r\n   * @param interactionType Interaction type for the request\r\n   * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\r\n   */\n\n\n  BrowserUtils.blockRedirectInIframe = function (interactionType, allowRedirectInIframe) {\n    var isIframedApp = BrowserUtils.isInIframe();\n\n    if (interactionType === InteractionType.Redirect && isIframedApp && !allowRedirectInIframe) {\n      // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n      throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\n    }\n  };\n  /**\r\n   * Block redirectUri loaded in popup from calling AcquireToken APIs\r\n   */\n\n\n  BrowserUtils.blockAcquireTokenInPopups = function () {\n    // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\n    if (BrowserUtils.isInPopup()) {\n      throw BrowserAuthError.createBlockAcquireTokenInPopupsError();\n    }\n  };\n  /**\r\n   * Throws error if token requests are made in non-browser environment\r\n   * @param isBrowserEnvironment Flag indicating if environment is a browser.\r\n   */\n\n\n  BrowserUtils.blockNonBrowserEnvironment = function (isBrowserEnvironment) {\n    if (!isBrowserEnvironment) {\n      throw BrowserAuthError.createNonBrowserEnvironmentError();\n    }\n  };\n  /**\r\n   * Throws error if native brokering is enabled but initialize hasn't been called\r\n   * @param allowNativeBroker\r\n   * @param initialized\r\n   */\n\n\n  BrowserUtils.blockNativeBrokerCalledBeforeInitialized = function (allowNativeBroker, initialized) {\n    if (allowNativeBroker && !initialized) {\n      throw BrowserAuthError.createNativeBrokerCalledBeforeInitialize();\n    }\n  };\n  /**\r\n   * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\r\n   */\n\n\n  BrowserUtils.detectIEOrEdge = function () {\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n    var msie11 = ua.indexOf(\"Trident/\");\n    var msedge = ua.indexOf(\"Edge/\");\n    var isIE = msie > 0 || msie11 > 0;\n    var isEdge = msedge > 0;\n    return isIE || isEdge;\n  };\n\n  return BrowserUtils;\n}();\n\nexport { BrowserUtils };","map":{"version":3,"names":["Constants","UrlString","FetchClient","XhrClient","BrowserAuthError","BrowserConstants","InteractionType","BrowserUtils","clearHash","contentWindow","location","hash","EMPTY_STRING","history","replaceState","origin","pathname","search","replaceHash","url","urlParts","split","shift","window","length","join","isInIframe","parent","isInPopup","opener","name","indexOf","POPUP_NAME_PREFIX","getCurrentUri","href","getHomepage","currentUrl","urlComponents","getUrlComponents","Protocol","HostNameAndPort","getBrowserNetworkClient","fetch","Headers","blockReloadInHiddenIframes","isResponseHash","hashContainsKnownProperties","createBlockReloadInHiddenIframeError","blockRedirectInIframe","interactionType","allowRedirectInIframe","isIframedApp","Redirect","createRedirectInIframeError","blockAcquireTokenInPopups","createBlockAcquireTokenInPopupsError","blockNonBrowserEnvironment","isBrowserEnvironment","createNonBrowserEnvironmentError","blockNativeBrokerCalledBeforeInitialized","allowNativeBroker","initialized","createNativeBrokerCalledBeforeInitialize","detectIEOrEdge","ua","navigator","userAgent","msie","msie11","msedge","isIE","isEdge"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/utils/BrowserUtils.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\nimport { Constants, UrlString } from '@azure/msal-common';\nimport { FetchClient } from '../network/FetchClient.js';\nimport { XhrClient } from '../network/XhrClient.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { BrowserConstants, InteractionType } from './BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class for browser specific functions\r\n */\r\nvar BrowserUtils = /** @class */ (function () {\r\n    function BrowserUtils() {\r\n    }\r\n    // #region Window Navigation and URL management\r\n    /**\r\n     * Clears hash from window url.\r\n     */\r\n    BrowserUtils.clearHash = function (contentWindow) {\r\n        // Office.js sets history.replaceState to null\r\n        contentWindow.location.hash = Constants.EMPTY_STRING;\r\n        if (typeof contentWindow.history.replaceState === \"function\") {\r\n            // Full removes \"#\" from url\r\n            contentWindow.history.replaceState(null, Constants.EMPTY_STRING, \"\" + contentWindow.location.origin + contentWindow.location.pathname + contentWindow.location.search);\r\n        }\r\n    };\r\n    /**\r\n     * Replaces current hash with hash from provided url\r\n     */\r\n    BrowserUtils.replaceHash = function (url) {\r\n        var urlParts = url.split(\"#\");\r\n        urlParts.shift(); // Remove part before the hash\r\n        window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : Constants.EMPTY_STRING;\r\n    };\r\n    /**\r\n     * Returns boolean of whether the current window is in an iframe or not.\r\n     */\r\n    BrowserUtils.isInIframe = function () {\r\n        return window.parent !== window;\r\n    };\r\n    /**\r\n     * Returns boolean of whether or not the current window is a popup opened by msal\r\n     */\r\n    BrowserUtils.isInPopup = function () {\r\n        return typeof window !== \"undefined\" && !!window.opener &&\r\n            window.opener !== window &&\r\n            typeof window.name === \"string\" &&\r\n            window.name.indexOf(BrowserConstants.POPUP_NAME_PREFIX + \".\") === 0;\r\n    };\r\n    // #endregion\r\n    /**\r\n     * Returns current window URL as redirect uri\r\n     */\r\n    BrowserUtils.getCurrentUri = function () {\r\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n    };\r\n    /**\r\n     * Gets the homepage url for the current window location.\r\n     */\r\n    BrowserUtils.getHomepage = function () {\r\n        var currentUrl = new UrlString(window.location.href);\r\n        var urlComponents = currentUrl.getUrlComponents();\r\n        return urlComponents.Protocol + \"//\" + urlComponents.HostNameAndPort + \"/\";\r\n    };\r\n    /**\r\n     * Returns best compatible network client object.\r\n     */\r\n    BrowserUtils.getBrowserNetworkClient = function () {\r\n        if (window.fetch && window.Headers) {\r\n            return new FetchClient();\r\n        }\r\n        else {\r\n            return new XhrClient();\r\n        }\r\n    };\r\n    /**\r\n     * Throws error if we have completed an auth and are\r\n     * attempting another auth request inside an iframe.\r\n     */\r\n    BrowserUtils.blockReloadInHiddenIframes = function () {\r\n        var isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\r\n        // return an error if called from the hidden iframe created by the msal js silent calls\r\n        if (isResponseHash && BrowserUtils.isInIframe()) {\r\n            throw BrowserAuthError.createBlockReloadInHiddenIframeError();\r\n        }\r\n    };\r\n    /**\r\n     * Block redirect operations in iframes unless explicitly allowed\r\n     * @param interactionType Interaction type for the request\r\n     * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\r\n     */\r\n    BrowserUtils.blockRedirectInIframe = function (interactionType, allowRedirectInIframe) {\r\n        var isIframedApp = BrowserUtils.isInIframe();\r\n        if (interactionType === InteractionType.Redirect && isIframedApp && !allowRedirectInIframe) {\r\n            // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n            throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\r\n        }\r\n    };\r\n    /**\r\n     * Block redirectUri loaded in popup from calling AcquireToken APIs\r\n     */\r\n    BrowserUtils.blockAcquireTokenInPopups = function () {\r\n        // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\r\n        if (BrowserUtils.isInPopup()) {\r\n            throw BrowserAuthError.createBlockAcquireTokenInPopupsError();\r\n        }\r\n    };\r\n    /**\r\n     * Throws error if token requests are made in non-browser environment\r\n     * @param isBrowserEnvironment Flag indicating if environment is a browser.\r\n     */\r\n    BrowserUtils.blockNonBrowserEnvironment = function (isBrowserEnvironment) {\r\n        if (!isBrowserEnvironment) {\r\n            throw BrowserAuthError.createNonBrowserEnvironmentError();\r\n        }\r\n    };\r\n    /**\r\n     * Throws error if native brokering is enabled but initialize hasn't been called\r\n     * @param allowNativeBroker\r\n     * @param initialized\r\n     */\r\n    BrowserUtils.blockNativeBrokerCalledBeforeInitialized = function (allowNativeBroker, initialized) {\r\n        if (allowNativeBroker && !initialized) {\r\n            throw BrowserAuthError.createNativeBrokerCalledBeforeInitialize();\r\n        }\r\n    };\r\n    /**\r\n     * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\r\n     */\r\n    BrowserUtils.detectIEOrEdge = function () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf(\"MSIE \");\r\n        var msie11 = ua.indexOf(\"Trident/\");\r\n        var msedge = ua.indexOf(\"Edge/\");\r\n        var isIE = msie > 0 || msie11 > 0;\r\n        var isEdge = msedge > 0;\r\n        return isIE || isEdge;\r\n    };\r\n    return BrowserUtils;\r\n}());\n\nexport { BrowserUtils };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}