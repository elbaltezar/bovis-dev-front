{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { BrowserAuthError, BrowserAuthErrorMessage } from '../error/BrowserAuthError.js';\nimport { DatabaseStorage } from './DatabaseStorage.js';\nimport { MemoryStorage } from './MemoryStorage.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\r\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\r\n */\n\nvar AsyncMemoryStorage =\n/** @class */\nfunction () {\n  function AsyncMemoryStorage(logger, storeName) {\n    this.inMemoryCache = new MemoryStorage();\n    this.indexedDBCache = new DatabaseStorage();\n    this.logger = logger;\n    this.storeName = storeName;\n  }\n\n  AsyncMemoryStorage.prototype.handleDatabaseAccessError = function (error) {\n    if (error instanceof BrowserAuthError && error.errorCode === BrowserAuthErrorMessage.databaseUnavailable.code) {\n      this.logger.error(\"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\");\n    } else {\n      throw error;\n    }\n  };\n  /**\r\n   * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\r\n   * storage object if item isn't found in-memory.\r\n   * @param key\r\n   */\n\n\n  AsyncMemoryStorage.prototype.getItem = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var item, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            item = this.inMemoryCache.getItem(key);\n            if (!!item) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            this.logger.verbose(\"Queried item not found in in-memory cache, now querying persistent storage.\");\n            return [4\n            /*yield*/\n            , this.indexedDBCache.getItem(key)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 3:\n            e_1 = _a.sent();\n            this.handleDatabaseAccessError(e_1);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            , item];\n        }\n      });\n    });\n  };\n  /**\r\n   * Sets the item in the in-memory cache and then tries to set it in the asynchronous\r\n   * storage object with the given key.\r\n   * @param key\r\n   * @param value\r\n   */\n\n\n  AsyncMemoryStorage.prototype.setItem = function (key, value) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.inMemoryCache.setItem(key, value);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.indexedDBCache.setItem(key, value)];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_2 = _a.sent();\n            this.handleDatabaseAccessError(e_2);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\r\n   * @param key\r\n   */\n\n\n  AsyncMemoryStorage.prototype.removeItem = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.inMemoryCache.removeItem(key);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.indexedDBCache.removeItem(key)];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_3 = _a.sent();\n            this.handleDatabaseAccessError(e_3);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\r\n   * asynchronous storage object.\r\n   */\n\n\n  AsyncMemoryStorage.prototype.getKeys = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var cacheKeys, e_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            cacheKeys = this.inMemoryCache.getKeys();\n            if (!(cacheKeys.length === 0)) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            this.logger.verbose(\"In-memory cache is empty, now querying persistent storage.\");\n            return [4\n            /*yield*/\n            , this.indexedDBCache.getKeys()];\n\n          case 2:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 3:\n            e_4 = _a.sent();\n            this.handleDatabaseAccessError(e_4);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            , cacheKeys];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns true or false if the given key is present in the cache.\r\n   * @param key\r\n   */\n\n\n  AsyncMemoryStorage.prototype.containsKey = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var containsKey, e_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            containsKey = this.inMemoryCache.containsKey(key);\n            if (!!containsKey) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            this.logger.verbose(\"Key not found in in-memory cache, now querying persistent storage.\");\n            return [4\n            /*yield*/\n            , this.indexedDBCache.containsKey(key)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 3:\n            e_5 = _a.sent();\n            this.handleDatabaseAccessError(e_5);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            , containsKey];\n        }\n      });\n    });\n  };\n  /**\r\n   * Clears in-memory Map\r\n   */\n\n\n  AsyncMemoryStorage.prototype.clearInMemory = function () {\n    // InMemory cache is a Map instance, clear is straightforward\n    this.logger.verbose(\"Deleting in-memory keystore \" + this.storeName);\n    this.inMemoryCache.clear();\n    this.logger.verbose(\"In-memory keystore \" + this.storeName + \" deleted\");\n  };\n  /**\r\n   * Tries to delete the IndexedDB database\r\n   * @returns\r\n   */\n\n\n  AsyncMemoryStorage.prototype.clearPersistent = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var dbDeleted, e_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            this.logger.verbose(\"Deleting persistent keystore\");\n            return [4\n            /*yield*/\n            , this.indexedDBCache.deleteDatabase()];\n\n          case 1:\n            dbDeleted = _a.sent();\n\n            if (dbDeleted) {\n              this.logger.verbose(\"Persistent keystore deleted\");\n            }\n\n            return [2\n            /*return*/\n            , dbDeleted];\n\n          case 2:\n            e_6 = _a.sent();\n            this.handleDatabaseAccessError(e_6);\n            return [2\n            /*return*/\n            , false];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return AsyncMemoryStorage;\n}();\n\nexport { AsyncMemoryStorage };","map":{"version":3,"names":["__awaiter","__generator","BrowserAuthError","BrowserAuthErrorMessage","DatabaseStorage","MemoryStorage","AsyncMemoryStorage","logger","storeName","inMemoryCache","indexedDBCache","prototype","handleDatabaseAccessError","error","errorCode","databaseUnavailable","code","getItem","key","item","e_1","_a","label","trys","push","verbose","sent","setItem","value","e_2","removeItem","e_3","getKeys","cacheKeys","e_4","length","containsKey","e_5","clearInMemory","clear","clearPersistent","dbDeleted","e_6","deleteDatabase"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { BrowserAuthError, BrowserAuthErrorMessage } from '../error/BrowserAuthError.js';\nimport { DatabaseStorage } from './DatabaseStorage.js';\nimport { MemoryStorage } from './MemoryStorage.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\r\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\r\n */\r\nvar AsyncMemoryStorage = /** @class */ (function () {\r\n    function AsyncMemoryStorage(logger, storeName) {\r\n        this.inMemoryCache = new MemoryStorage();\r\n        this.indexedDBCache = new DatabaseStorage();\r\n        this.logger = logger;\r\n        this.storeName = storeName;\r\n    }\r\n    AsyncMemoryStorage.prototype.handleDatabaseAccessError = function (error) {\r\n        if (error instanceof BrowserAuthError && error.errorCode === BrowserAuthErrorMessage.databaseUnavailable.code) {\r\n            this.logger.error(\"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\");\r\n        }\r\n        else {\r\n            throw error;\r\n        }\r\n    };\r\n    /**\r\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\r\n     * storage object if item isn't found in-memory.\r\n     * @param key\r\n     */\r\n    AsyncMemoryStorage.prototype.getItem = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var item, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        item = this.inMemoryCache.getItem(key);\r\n                        if (!!item) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        this.logger.verbose(\"Queried item not found in in-memory cache, now querying persistent storage.\");\r\n                        return [4 /*yield*/, this.indexedDBCache.getItem(key)];\r\n                    case 2: return [2 /*return*/, _a.sent()];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        this.handleDatabaseAccessError(e_1);\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/, item];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\r\n     * storage object with the given key.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    AsyncMemoryStorage.prototype.setItem = function (key, value) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.inMemoryCache.setItem(key, value);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.indexedDBCache.setItem(key, value)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_2 = _a.sent();\r\n                        this.handleDatabaseAccessError(e_2);\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\r\n     * @param key\r\n     */\r\n    AsyncMemoryStorage.prototype.removeItem = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.inMemoryCache.removeItem(key);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.indexedDBCache.removeItem(key)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_3 = _a.sent();\r\n                        this.handleDatabaseAccessError(e_3);\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\r\n     * asynchronous storage object.\r\n     */\r\n    AsyncMemoryStorage.prototype.getKeys = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var cacheKeys, e_4;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        cacheKeys = this.inMemoryCache.getKeys();\r\n                        if (!(cacheKeys.length === 0)) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        this.logger.verbose(\"In-memory cache is empty, now querying persistent storage.\");\r\n                        return [4 /*yield*/, this.indexedDBCache.getKeys()];\r\n                    case 2: return [2 /*return*/, _a.sent()];\r\n                    case 3:\r\n                        e_4 = _a.sent();\r\n                        this.handleDatabaseAccessError(e_4);\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/, cacheKeys];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns true or false if the given key is present in the cache.\r\n     * @param key\r\n     */\r\n    AsyncMemoryStorage.prototype.containsKey = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var containsKey, e_5;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        containsKey = this.inMemoryCache.containsKey(key);\r\n                        if (!!containsKey) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        this.logger.verbose(\"Key not found in in-memory cache, now querying persistent storage.\");\r\n                        return [4 /*yield*/, this.indexedDBCache.containsKey(key)];\r\n                    case 2: return [2 /*return*/, _a.sent()];\r\n                    case 3:\r\n                        e_5 = _a.sent();\r\n                        this.handleDatabaseAccessError(e_5);\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/, containsKey];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Clears in-memory Map\r\n     */\r\n    AsyncMemoryStorage.prototype.clearInMemory = function () {\r\n        // InMemory cache is a Map instance, clear is straightforward\r\n        this.logger.verbose(\"Deleting in-memory keystore \" + this.storeName);\r\n        this.inMemoryCache.clear();\r\n        this.logger.verbose(\"In-memory keystore \" + this.storeName + \" deleted\");\r\n    };\r\n    /**\r\n     * Tries to delete the IndexedDB database\r\n     * @returns\r\n     */\r\n    AsyncMemoryStorage.prototype.clearPersistent = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var dbDeleted, e_6;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        this.logger.verbose(\"Deleting persistent keystore\");\r\n                        return [4 /*yield*/, this.indexedDBCache.deleteDatabase()];\r\n                    case 1:\r\n                        dbDeleted = _a.sent();\r\n                        if (dbDeleted) {\r\n                            this.logger.verbose(\"Persistent keystore deleted\");\r\n                        }\r\n                        return [2 /*return*/, dbDeleted];\r\n                    case 2:\r\n                        e_6 = _a.sent();\r\n                        this.handleDatabaseAccessError(e_6);\r\n                        return [2 /*return*/, false];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return AsyncMemoryStorage;\r\n}());\n\nexport { AsyncMemoryStorage };\n"],"mappings":"AAAA;AACA;;AACA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,uBAAvC;AACA,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,8BAA1D;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,IAAIC,kBAAkB;AAAG;AAAe,YAAY;EAChD,SAASA,kBAAT,CAA4BC,MAA5B,EAAoCC,SAApC,EAA+C;IAC3C,KAAKC,aAAL,GAAqB,IAAIJ,aAAJ,EAArB;IACA,KAAKK,cAAL,GAAsB,IAAIN,eAAJ,EAAtB;IACA,KAAKG,MAAL,GAAcA,MAAd;IACA,KAAKC,SAAL,GAAiBA,SAAjB;EACH;;EACDF,kBAAkB,CAACK,SAAnB,CAA6BC,yBAA7B,GAAyD,UAAUC,KAAV,EAAiB;IACtE,IAAIA,KAAK,YAAYX,gBAAjB,IAAqCW,KAAK,CAACC,SAAN,KAAoBX,uBAAuB,CAACY,mBAAxB,CAA4CC,IAAzG,EAA+G;MAC3G,KAAKT,MAAL,CAAYM,KAAZ,CAAkB,6IAAlB;IACH,CAFD,MAGK;MACD,MAAMA,KAAN;IACH;EACJ,CAPD;EAQA;AACJ;AACA;AACA;AACA;;;EACIP,kBAAkB,CAACK,SAAnB,CAA6BM,OAA7B,GAAuC,UAAUC,GAAV,EAAe;IAClD,OAAOlB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAImB,IAAJ,EAAUC,GAAV;MACA,OAAOnB,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACC,KAAX;UACI,KAAK,CAAL;YACIH,IAAI,GAAG,KAAKV,aAAL,CAAmBQ,OAAnB,CAA2BC,GAA3B,CAAP;YACA,IAAI,CAAC,CAACC,IAAN,EAAY,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;YACZE,EAAE,CAACC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACID,EAAE,CAACE,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACA,KAAKjB,MAAL,CAAYkB,OAAZ,CAAoB,6EAApB;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKf,cAAL,CAAoBO,OAApB,CAA4BC,GAA5B,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAeG,EAAE,CAACK,IAAH,EAAf,CAAP;;UACR,KAAK,CAAL;YACIN,GAAG,GAAGC,EAAE,CAACK,IAAH,EAAN;YACA,KAAKd,yBAAL,CAA+BQ,GAA/B;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAeD,IAAf,CAAP;QAdZ;MAgBH,CAjBiB,CAAlB;IAkBH,CApBe,CAAhB;EAqBH,CAtBD;EAuBA;AACJ;AACA;AACA;AACA;AACA;;;EACIb,kBAAkB,CAACK,SAAnB,CAA6BgB,OAA7B,GAAuC,UAAUT,GAAV,EAAeU,KAAf,EAAsB;IACzD,OAAO5B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAI6B,GAAJ;MACA,OAAO5B,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACC,KAAX;UACI,KAAK,CAAL;YACI,KAAKb,aAAL,CAAmBkB,OAAnB,CAA2BT,GAA3B,EAAgCU,KAAhC;YACAP,EAAE,CAACC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACID,EAAE,CAACE,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKd,cAAL,CAAoBiB,OAApB,CAA4BT,GAA5B,EAAiCU,KAAjC,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIP,EAAE,CAACK,IAAH;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIG,GAAG,GAAGR,EAAE,CAACK,IAAH,EAAN;YACA,KAAKd,yBAAL,CAA+BiB,GAA/B;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,CAAP;QAdZ;MAgBH,CAjBiB,CAAlB;IAkBH,CApBe,CAAhB;EAqBH,CAtBD;EAuBA;AACJ;AACA;AACA;;;EACIvB,kBAAkB,CAACK,SAAnB,CAA6BmB,UAA7B,GAA0C,UAAUZ,GAAV,EAAe;IACrD,OAAOlB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAI+B,GAAJ;MACA,OAAO9B,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACC,KAAX;UACI,KAAK,CAAL;YACI,KAAKb,aAAL,CAAmBqB,UAAnB,CAA8BZ,GAA9B;YACAG,EAAE,CAACC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACID,EAAE,CAACE,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKd,cAAL,CAAoBoB,UAApB,CAA+BZ,GAA/B,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIG,EAAE,CAACK,IAAH;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIK,GAAG,GAAGV,EAAE,CAACK,IAAH,EAAN;YACA,KAAKd,yBAAL,CAA+BmB,GAA/B;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,CAAP;QAdZ;MAgBH,CAjBiB,CAAlB;IAkBH,CApBe,CAAhB;EAqBH,CAtBD;EAuBA;AACJ;AACA;AACA;;;EACIzB,kBAAkB,CAACK,SAAnB,CAA6BqB,OAA7B,GAAuC,YAAY;IAC/C,OAAOhC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIiC,SAAJ,EAAeC,GAAf;MACA,OAAOjC,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACC,KAAX;UACI,KAAK,CAAL;YACIW,SAAS,GAAG,KAAKxB,aAAL,CAAmBuB,OAAnB,EAAZ;YACA,IAAI,EAAEC,SAAS,CAACE,MAAV,KAAqB,CAAvB,CAAJ,EAA+B,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;YAC/Bd,EAAE,CAACC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACID,EAAE,CAACE,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACA,KAAKjB,MAAL,CAAYkB,OAAZ,CAAoB,4DAApB;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKf,cAAL,CAAoBsB,OAApB,EAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAeX,EAAE,CAACK,IAAH,EAAf,CAAP;;UACR,KAAK,CAAL;YACIQ,GAAG,GAAGb,EAAE,CAACK,IAAH,EAAN;YACA,KAAKd,yBAAL,CAA+BsB,GAA/B;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAeD,SAAf,CAAP;QAdZ;MAgBH,CAjBiB,CAAlB;IAkBH,CApBe,CAAhB;EAqBH,CAtBD;EAuBA;AACJ;AACA;AACA;;;EACI3B,kBAAkB,CAACK,SAAnB,CAA6ByB,WAA7B,GAA2C,UAAUlB,GAAV,EAAe;IACtD,OAAOlB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIoC,WAAJ,EAAiBC,GAAjB;MACA,OAAOpC,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACC,KAAX;UACI,KAAK,CAAL;YACIc,WAAW,GAAG,KAAK3B,aAAL,CAAmB2B,WAAnB,CAA+BlB,GAA/B,CAAd;YACA,IAAI,CAAC,CAACkB,WAAN,EAAmB,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;YACnBf,EAAE,CAACC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACID,EAAE,CAACE,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACA,KAAKjB,MAAL,CAAYkB,OAAZ,CAAoB,oEAApB;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKf,cAAL,CAAoB0B,WAApB,CAAgClB,GAAhC,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAeG,EAAE,CAACK,IAAH,EAAf,CAAP;;UACR,KAAK,CAAL;YACIW,GAAG,GAAGhB,EAAE,CAACK,IAAH,EAAN;YACA,KAAKd,yBAAL,CAA+ByB,GAA/B;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAeD,WAAf,CAAP;QAdZ;MAgBH,CAjBiB,CAAlB;IAkBH,CApBe,CAAhB;EAqBH,CAtBD;EAuBA;AACJ;AACA;;;EACI9B,kBAAkB,CAACK,SAAnB,CAA6B2B,aAA7B,GAA6C,YAAY;IACrD;IACA,KAAK/B,MAAL,CAAYkB,OAAZ,CAAoB,iCAAiC,KAAKjB,SAA1D;IACA,KAAKC,aAAL,CAAmB8B,KAAnB;IACA,KAAKhC,MAAL,CAAYkB,OAAZ,CAAoB,wBAAwB,KAAKjB,SAA7B,GAAyC,UAA7D;EACH,CALD;EAMA;AACJ;AACA;AACA;;;EACIF,kBAAkB,CAACK,SAAnB,CAA6B6B,eAA7B,GAA+C,YAAY;IACvD,OAAOxC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIyC,SAAJ,EAAeC,GAAf;MACA,OAAOzC,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACC,KAAX;UACI,KAAK,CAAL;YACID,EAAE,CAACE,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACA,KAAKjB,MAAL,CAAYkB,OAAZ,CAAoB,8BAApB;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKf,cAAL,CAAoBiC,cAApB,EAAd,CAAP;;UACJ,KAAK,CAAL;YACIF,SAAS,GAAGpB,EAAE,CAACK,IAAH,EAAZ;;YACA,IAAIe,SAAJ,EAAe;cACX,KAAKlC,MAAL,CAAYkB,OAAZ,CAAoB,6BAApB;YACH;;YACD,OAAO,CAAC;YAAE;YAAH,EAAegB,SAAf,CAAP;;UACJ,KAAK,CAAL;YACIC,GAAG,GAAGrB,EAAE,CAACK,IAAH,EAAN;YACA,KAAKd,yBAAL,CAA+B8B,GAA/B;YACA,OAAO,CAAC;YAAE;YAAH,EAAe,KAAf,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,CAAP;QAfZ;MAiBH,CAlBiB,CAAlB;IAmBH,CArBe,CAAhB;EAsBH,CAvBD;;EAwBA,OAAOpC,kBAAP;AACH,CA/LuC,EAAxC;;AAiMA,SAASA,kBAAT"},"metadata":{},"sourceType":"module"}