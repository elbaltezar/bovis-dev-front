{"ast":null,"code":"/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\n\nimport { __assign, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION } from '../crypto/ICrypto.js';\nimport { AuthError } from '../error/AuthError.js';\nimport { Logger, LogLevel } from '../logger/Logger.js';\nimport { Constants } from '../utils/Constants.js';\nimport { version } from '../packageMetadata.js';\nimport { AzureCloudInstance } from '../authority/AuthorityOptions.js';\nimport { DefaultStorageClass } from '../cache/CacheManager.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n// Token renewal offset default in seconds\n\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\nvar DEFAULT_SYSTEM_OPTIONS = {\n  tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n  preventCorsPreflight: false\n};\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\n  loggerCallback: function () {// allow users to not set loggerCallback\n  },\n  piiLoggingEnabled: false,\n  logLevel: LogLevel.Info,\n  correlationId: Constants.EMPTY_STRING\n};\nvar DEFAULT_CACHE_OPTIONS = {\n  claimsBasedCachingEnabled: true\n};\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\n  sendGetRequestAsync: function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator(this, function (_a) {\n        notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  },\n  sendPostRequestAsync: function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator(this, function (_a) {\n        notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  }\n};\nvar DEFAULT_LIBRARY_INFO = {\n  sku: Constants.SKU,\n  version: version,\n  cpu: Constants.EMPTY_STRING,\n  os: Constants.EMPTY_STRING\n};\nvar DEFAULT_CLIENT_CREDENTIALS = {\n  clientSecret: Constants.EMPTY_STRING,\n  clientAssertion: undefined\n};\nvar DEFAULT_AZURE_CLOUD_OPTIONS = {\n  azureCloudInstance: AzureCloudInstance.None,\n  tenant: \"\" + Constants.DEFAULT_COMMON_TENANT\n};\nvar DEFAULT_TELEMETRY_OPTIONS = {\n  application: {\n    appName: \"\",\n    appVersion: \"\"\n  }\n};\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\n\nfunction buildClientConfiguration(_a) {\n  var userAuthOptions = _a.authOptions,\n      userSystemOptions = _a.systemOptions,\n      userLoggerOption = _a.loggerOptions,\n      userCacheOptions = _a.cacheOptions,\n      storageImplementation = _a.storageInterface,\n      networkImplementation = _a.networkInterface,\n      cryptoImplementation = _a.cryptoInterface,\n      clientCredentials = _a.clientCredentials,\n      libraryInfo = _a.libraryInfo,\n      telemetry = _a.telemetry,\n      serverTelemetryManager = _a.serverTelemetryManager,\n      persistencePlugin = _a.persistencePlugin,\n      serializableCache = _a.serializableCache;\n\n  var loggerOptions = __assign(__assign({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption);\n\n  return {\n    authOptions: buildAuthOptions(userAuthOptions),\n    systemOptions: __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\n    loggerOptions: loggerOptions,\n    cacheOptions: __assign(__assign({}, DEFAULT_CACHE_OPTIONS), userCacheOptions),\n    storageInterface: storageImplementation || new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION, new Logger(loggerOptions)),\n    networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n    cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n    clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n    libraryInfo: __assign(__assign({}, DEFAULT_LIBRARY_INFO), libraryInfo),\n    telemetry: __assign(__assign({}, DEFAULT_TELEMETRY_OPTIONS), telemetry),\n    serverTelemetryManager: serverTelemetryManager || null,\n    persistencePlugin: persistencePlugin || null,\n    serializableCache: serializableCache || null\n  };\n}\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\n\n\nfunction buildAuthOptions(authOptions) {\n  return __assign({\n    clientCapabilities: [],\n    azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n    skipAuthorityMetadataCache: false\n  }, authOptions);\n}\n\nexport { DEFAULT_SYSTEM_OPTIONS, buildClientConfiguration };","map":{"version":3,"names":["__assign","__awaiter","__generator","DEFAULT_CRYPTO_IMPLEMENTATION","AuthError","Logger","LogLevel","Constants","version","AzureCloudInstance","DefaultStorageClass","DEFAULT_TOKEN_RENEWAL_OFFSET_SEC","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","preventCorsPreflight","DEFAULT_LOGGER_IMPLEMENTATION","loggerCallback","piiLoggingEnabled","logLevel","Info","correlationId","EMPTY_STRING","DEFAULT_CACHE_OPTIONS","claimsBasedCachingEnabled","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","notImplErr","_a","createUnexpectedError","sendPostRequestAsync","DEFAULT_LIBRARY_INFO","sku","SKU","cpu","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","undefined","DEFAULT_AZURE_CLOUD_OPTIONS","azureCloudInstance","None","tenant","DEFAULT_COMMON_TENANT","DEFAULT_TELEMETRY_OPTIONS","application","appName","appVersion","buildClientConfiguration","userAuthOptions","authOptions","userSystemOptions","systemOptions","userLoggerOption","loggerOptions","userCacheOptions","cacheOptions","storageImplementation","storageInterface","networkImplementation","networkInterface","cryptoImplementation","cryptoInterface","clientCredentials","libraryInfo","telemetry","serverTelemetryManager","persistencePlugin","serializableCache","buildAuthOptions","clientId","clientCapabilities","azureCloudOptions","skipAuthorityMetadataCache"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-common/dist/config/ClientConfiguration.js"],"sourcesContent":["/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\nimport { __assign, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION } from '../crypto/ICrypto.js';\nimport { AuthError } from '../error/AuthError.js';\nimport { Logger, LogLevel } from '../logger/Logger.js';\nimport { Constants } from '../utils/Constants.js';\nimport { version } from '../packageMetadata.js';\nimport { AzureCloudInstance } from '../authority/AuthorityOptions.js';\nimport { DefaultStorageClass } from '../cache/CacheManager.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Token renewal offset default in seconds\r\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    preventCorsPreflight: false\r\n};\r\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: function () {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info,\r\n    correlationId: Constants.EMPTY_STRING\r\n};\r\nvar DEFAULT_CACHE_OPTIONS = {\r\n    claimsBasedCachingEnabled: true\r\n};\r\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    sendGetRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    sendPostRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_LIBRARY_INFO = {\r\n    sku: Constants.SKU,\r\n    version: version,\r\n    cpu: Constants.EMPTY_STRING,\r\n    os: Constants.EMPTY_STRING\r\n};\r\nvar DEFAULT_CLIENT_CREDENTIALS = {\r\n    clientSecret: Constants.EMPTY_STRING,\r\n    clientAssertion: undefined\r\n};\r\nvar DEFAULT_AZURE_CLOUD_OPTIONS = {\r\n    azureCloudInstance: AzureCloudInstance.None,\r\n    tenant: \"\" + Constants.DEFAULT_COMMON_TENANT\r\n};\r\nvar DEFAULT_TELEMETRY_OPTIONS = {\r\n    application: {\r\n        appName: \"\",\r\n        appVersion: \"\"\r\n    }\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration(_a) {\r\n    var userAuthOptions = _a.authOptions, userSystemOptions = _a.systemOptions, userLoggerOption = _a.loggerOptions, userCacheOptions = _a.cacheOptions, storageImplementation = _a.storageInterface, networkImplementation = _a.networkInterface, cryptoImplementation = _a.cryptoInterface, clientCredentials = _a.clientCredentials, libraryInfo = _a.libraryInfo, telemetry = _a.telemetry, serverTelemetryManager = _a.serverTelemetryManager, persistencePlugin = _a.persistencePlugin, serializableCache = _a.serializableCache;\r\n    var loggerOptions = __assign(__assign({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption);\r\n    return {\r\n        authOptions: buildAuthOptions(userAuthOptions),\r\n        systemOptions: __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\r\n        loggerOptions: loggerOptions,\r\n        cacheOptions: __assign(__assign({}, DEFAULT_CACHE_OPTIONS), userCacheOptions),\r\n        storageInterface: storageImplementation || new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION, new Logger(loggerOptions)),\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\r\n        libraryInfo: __assign(__assign({}, DEFAULT_LIBRARY_INFO), libraryInfo),\r\n        telemetry: __assign(__assign({}, DEFAULT_TELEMETRY_OPTIONS), telemetry),\r\n        serverTelemetryManager: serverTelemetryManager || null,\r\n        persistencePlugin: persistencePlugin || null,\r\n        serializableCache: serializableCache || null,\r\n    };\r\n}\r\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\r\nfunction buildAuthOptions(authOptions) {\r\n    return __assign({ clientCapabilities: [], azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS, skipAuthorityMetadataCache: false }, authOptions);\r\n}\n\nexport { DEFAULT_SYSTEM_OPTIONS, buildClientConfiguration };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}