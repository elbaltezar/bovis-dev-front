{"ast":null,"code":"import _asyncToGenerator from \"F:/Bovis/Front/bovis-dev/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { inject } from '@angular/core';\nimport * as XLSX from 'xlsx';\nimport { CieService } from '../../services/cie.service';\nimport { MessageService } from 'primeng/api';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { CieElementPost } from '../../models/cie.models';\nimport { EXCEL_EXTENSION, SUBJECTS, TITLES, cieHeaders } from 'src/utils/constants';\nimport { finalize, forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"primeng/button\";\nimport * as i4 from \"primeng/toolbar\";\nimport * as i5 from \"primeng/fileupload\";\nimport * as i6 from \"primeng/toast\";\nimport * as i7 from \"primeng/table\";\nimport * as i8 from \"primeng/dropdown\";\n\nfunction CargaSaeComponent_div_15_p_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-button\", 17);\n    i0.ɵɵlistener(\"onClick\", function CargaSaeComponent_div_15_p_button_8_Template_p_button_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.copiarCuentasFaltantes());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CargaSaeComponent_div_15_ng_template_10_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const header_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", header_r8, \" \");\n  }\n}\n\nfunction CargaSaeComponent_div_15_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, CargaSaeComponent_div_15_ng_template_10_th_1_Template, 2, 1, \"th\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.cieHeadersLocal);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"invalid-tr\": a0\n  };\n};\n\nfunction CargaSaeComponent_div_15_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 19)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\");\n    i0.ɵɵtext(26);\n    i0.ɵɵpipe(27, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"td\");\n    i0.ɵɵtext(29);\n    i0.ɵɵpipe(30, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"td\");\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"td\");\n    i0.ɵɵtext(34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"td\");\n    i0.ɵɵtext(36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"td\");\n    i0.ɵɵtext(38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"td\");\n    i0.ɵɵtext(40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"td\");\n    i0.ɵɵtext(42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"td\");\n    i0.ɵɵtext(44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"td\");\n    i0.ɵɵtext(46);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const record_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(30, _c0, !record_r9.edo_resultados));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.nombre_cuenta);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.cuenta);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.tipo_poliza);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.numero);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.fecha);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.mes);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.concepto);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.centro_costos);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.proyectos);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 22, record_r9.saldo_inicial));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 24, record_r9.debe));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(27, 26, record_r9.haber));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(30, 28, record_r9.movimiento));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r9.empresa);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.num_proyecto);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.tipo_proyecto);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.edo_resultados);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.responsable);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.tipo_cuenta);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.tipo_py);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r9.clasificacion_py);\n  }\n}\n\nconst _c1 = function () {\n  return {\n    \"min-width\": \"50rem\"\n  };\n};\n\nconst _c2 = function () {\n  return [10, 25, 50];\n};\n\nfunction CargaSaeComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"label\")(2, \"b\");\n    i0.ɵɵtext(3, \"Archivo cargado:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p-toolbar\", 10)(6, \"p-button\", 11);\n    i0.ɵɵlistener(\"click\", function CargaSaeComponent_div_15_Template_p_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.exportJsonToExcel());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p-button\", 12);\n    i0.ɵɵlistener(\"onClick\", function CargaSaeComponent_div_15_Template_p_button_onClick_7_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.cargar());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, CargaSaeComponent_div_15_p_button_8_Template, 1, 0, \"p-button\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p-table\", 14);\n    i0.ɵɵtemplate(10, CargaSaeComponent_div_15_ng_template_10_Template, 2, 1, \"ng-template\", 15);\n    i0.ɵɵtemplate(11, CargaSaeComponent_div_15_ng_template_11_Template, 47, 32, \"ng-template\", 16);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentFileName, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.cuentasFaltantes.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r1.jsonData)(\"tableStyle\", i0.ɵɵpureFunction0(8, _c1))(\"paginator\", true)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c2))(\"rows\", 10);\n  }\n}\n\nconst _c3 = function () {\n  return {\n    width: \"100%\"\n  };\n};\n\nexport class CargaSaeComponent {\n  constructor() {\n    this.cieService = inject(CieService);\n    this.messageService = inject(MessageService);\n    this.sharedService = inject(SharedService);\n    this.jsonData = [];\n    this.cieHeadersLocal = cieHeaders;\n    this.fileSizeMax = 10000000;\n    this.isLoadingFile = false;\n    this.companyOptions = [];\n    this.uploaded = false;\n    this.currentFileName = '';\n    this.cuentas = [];\n    this.proyectos = [];\n    this.cuentasFaltantes = [];\n    this.proyectosEncontrados = {};\n    this.cuentasEncontradas = {};\n  }\n\n  ngOnInit() {\n    this.sharedService.cambiarEstado(true);\n    this.cieService.getEmpresas().subscribe(({\n      data\n    }) => {\n      this.companyOptions = data.map(empresa => {\n        return {\n          name: empresa.chempresa,\n          value: empresa.nukidempresa.toString()\n        };\n      });\n      this.sharedService.cambiarEstado(false);\n    });\n  }\n\n  get jsonFormateado() {\n    return JSON.stringify(this.jsonData, null, 3);\n  }\n\n  onBasicUpload(event, fileUpload) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.isLoadingFile = true;\n      _this.uploaded = false;\n      _this.jsonData = [];\n\n      _this.sharedService.cambiarEstado(true);\n\n      const [file] = event.files;\n      const fileReader = new FileReader();\n      fileReader.readAsBinaryString(file);\n      _this.currentFileName = file.name;\n\n      fileReader.onload = e => {\n        const workBook = XLSX.read(fileReader.result, {\n          type: 'binary'\n        });\n        const [sheetName] = workBook.SheetNames;\n        _this.excelData = XLSX.utils.sheet_to_json(workBook.Sheets[sheetName]);\n        let tempNormalRecords = [];\n        let lastRecord = false;\n        let isMiddleDash = false;\n        let cuentaActual = ''; // console.log(this.excelData)\n\n        _this.excelData.map((record, i, row) => {\n          var _a;\n\n          lastRecord = i + 1 === row.length;\n          isMiddleDash = record.Tipo === '-';\n\n          if (isMiddleDash || lastRecord) {\n            cuentaActual = record.__EMPTY;\n          } else {\n            if (record.Concepto) {\n              const cuenta = cuentaActual.split(' ')[2];\n\n              _this.cuentas.push(cuenta);\n\n              _this.proyectos.push(record.Proyectos);\n\n              tempNormalRecords.push({\n                // ...record, \n                nombre_cuenta: cuentaActual,\n                cuenta: cuenta,\n                tipo_poliza: record.__EMPTY,\n                numero: +record.Numero,\n                fecha: record.Fecha,\n                mes: record.Fecha.split('/')[1],\n                concepto: record.Concepto,\n                centro_costos: (_a = record['Centro de costos']) === null || _a === void 0 ? void 0 : _a.trim(),\n                proyectos: record.Proyectos,\n                saldo_inicial: record['Saldo inicial'],\n                debe: record.Debe,\n                haber: record.Haber,\n                movimiento: record.Debe - record.Haber,\n                empresa: _this.selectedOption.name.trim(),\n                num_proyecto: null,\n                tipo_proyecto: null,\n                edo_resultados: null,\n                responsable: null,\n                tipo_cuenta: null,\n                tipo_py: null,\n                clasificacion_py: null\n              });\n            }\n          }\n        });\n\n        forkJoin([_this.cieService.getInfoCuentas({\n          data: [...new Set(_this.cuentas)]\n        }), _this.cieService.getInfoProyectos({\n          data: [...new Set(_this.proyectos)]\n        })]).pipe(finalize(() => _this.sharedService.cambiarEstado(false))).subscribe(([infoCuentasR, infoProyectosR]) => {\n          infoCuentasR.data.forEach(cuenta => _this.cuentasEncontradas[cuenta.cuenta] = Object.assign({}, cuenta));\n          infoProyectosR.data.forEach(proyecto => _this.proyectosEncontrados[proyecto.proyecto] = Object.assign({}, proyecto));\n          _this.jsonData = tempNormalRecords.map(normalRecord => {\n            var _a, _b, _c, _d, _e, _f, _g;\n\n            const keyProyecto = normalRecord.proyectos;\n            const keyCuenta = normalRecord.cuenta;\n            const noProyecto = (_a = _this.proyectosEncontrados[keyProyecto]) === null || _a === void 0 ? void 0 : _a.numProyecto; // console.log(this.cuentasEncontradas[keyCuenta]);\n\n            if (!_this.cuentasEncontradas[keyCuenta]) {\n              _this.cuentasFaltantes.push(keyCuenta);\n            }\n\n            return Object.assign(Object.assign({}, normalRecord), {\n              centro_costos: normalRecord.centro_costos,\n              num_proyecto: noProyecto ? _this.obtenerNoProyecto(noProyecto) : null,\n              responsable: ((_b = _this.proyectosEncontrados[keyProyecto]) === null || _b === void 0 ? void 0 : _b.responsable) || null,\n              tipo_cuenta: ((_c = _this.proyectosEncontrados[keyProyecto]) === null || _c === void 0 ? void 0 : _c.tipoProyecto) || null,\n              edo_resultados: ((_d = _this.cuentasEncontradas[keyCuenta]) === null || _d === void 0 ? void 0 : _d.tipoResultado) || null,\n              tipo_proyecto: ((_e = _this.cuentasEncontradas[keyCuenta]) === null || _e === void 0 ? void 0 : _e.tipoCuenta) || null,\n              tipo_py: ((_f = _this.cuentasEncontradas[keyCuenta]) === null || _f === void 0 ? void 0 : _f.tipoPY) || null,\n              clasificacion_py: ((_g = _this.cuentasEncontradas[keyCuenta]) === null || _g === void 0 ? void 0 : _g.clasificacionPY) || null\n            });\n          });\n        });\n      };\n\n      _this.isLoadingFile = false;\n      _this.uploaded = true;\n      fileUpload.clear();\n    })();\n  }\n\n  obtenerNoProyecto(noProyecto) {\n    let numero = null;\n\n    switch (noProyecto) {\n      case 236:\n        numero = 110;\n        break;\n\n      case 261:\n        numero = 112;\n        break;\n\n      default:\n        numero = noProyecto;\n    }\n\n    return numero.toString();\n  }\n\n  onChangeCompany(event) {\n    this.selectedOption = event.value;\n    this.uploaded = false;\n  }\n\n  exportJsonToExcel(fileName = 'CIE') {\n    const worksheet = XLSX.utils.json_to_sheet([]);\n    const workbook = {\n      Sheets: {\n        'Detalle': worksheet\n      },\n      SheetNames: ['Detalle']\n    };\n    XLSX.utils.sheet_add_json(worksheet, this.jsonData, {\n      origin: 'A2',\n      skipHeader: true\n    });\n    XLSX.utils.sheet_add_aoa(worksheet, [this.cieHeadersLocal]); // save to file\n\n    XLSX.writeFile(workbook, `${fileName + '_' + Date.now()}${EXCEL_EXTENSION}`);\n  }\n\n  cargar() {\n    this.sharedService.cambiarEstado(true);\n    console.log(this.jsonData); // console.log(this.jsonData)\n\n    this.cieService.cargarSae(this.jsonData, this.currentFileName).pipe(finalize(() => {\n      this.sharedService.cambiarEstado(false);\n    })).subscribe({\n      next: response => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'SAE cargado',\n          detail: 'El SAE ha sido cargado.'\n        });\n      },\n      error: err => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Oh no...',\n          detail: err.error\n        });\n      }\n    });\n  }\n\n  copiarCuentasFaltantes() {\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(this.cuentasFaltantes.join(',')).then(() => {\n        this.messageService.add({\n          severity: 'success',\n          summary: TITLES.success,\n          detail: 'Cuentas copiadas en la papelera.'\n        });\n      }).catch(err => {\n        this.messageService.add({\n          severity: 'error',\n          summary: TITLES.error,\n          detail: SUBJECTS.error\n        });\n      });\n    } else {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Oh no...',\n        detail: 'Clipboard API no soportado.'\n      });\n    }\n  }\n\n}\n\nCargaSaeComponent.ɵfac = function CargaSaeComponent_Factory(t) {\n  return new (t || CargaSaeComponent)();\n};\n\nCargaSaeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CargaSaeComponent,\n  selectors: [[\"app-carga-sae\"]],\n  features: [i0.ɵɵProvidersFeature([MessageService])],\n  decls: 18,\n  vars: 11,\n  consts: [[1, \"main-container\"], [1, \"grid\"], [1, \"col\"], [\"for\", \"company\"], [\"id\", \"company\", \"placeholder\", \"Seleccionar una empresa\", \"optionLabel\", \"name\", \"filterBy\", \"name\", 3, \"options\", \"showClear\", \"filter\", \"onChange\"], [\"for\", \"xlsxFile\"], [\"id\", \"xlsxFile\", \"mode\", \"basic\", \"accept\", \".xlsx\", \"chooseLabel\", \"Cargar XLSX\", 3, \"customUpload\", \"multiple\", \"maxFileSize\", \"disabled\", \"onSelect\"], [\"fileUpload\", \"\"], [\"class\", \"d-flex flex-column gap-2\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-column\", \"gap-2\"], [\"styleClass\", \"p-1 mb-2 d-flex justify-content-start gap-2\"], [\"label\", \"Exportar Excel\", \"icon\", \"pi pi-file-excel\", \"styleClass\", \"p-button-success\", 3, \"click\"], [\"label\", \"Cargar\", \"icon\", \"pi pi-upload\", \"styleClass\", \"p-button-info\", 3, \"onClick\"], [\"label\", \"Copiar Cuentas Faltantes\", \"icon\", \"pi pi-upload\", \"styleClass\", \"p-button-danger\", 3, \"onClick\", 4, \"ngIf\"], [\"currentPageReportTemplate\", \"Mostrando del {first} al {last} de {totalRecords} registros\", 3, \"value\", \"tableStyle\", \"paginator\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rows\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"label\", \"Copiar Cuentas Faltantes\", \"icon\", \"pi pi-upload\", \"styleClass\", \"p-button-danger\", 3, \"onClick\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"]],\n  template: function CargaSaeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r13 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelement(0, \"p-toast\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"h1\");\n      i0.ɵɵtext(3, \"Carga SAE\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2)(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Empresa:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"p-dropdown\", 4);\n      i0.ɵɵlistener(\"onChange\", function CargaSaeComponent_Template_p_dropdown_onChange_9_listener($event) {\n        return ctx.onChangeCompany($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 5);\n      i0.ɵɵtext(12, \"Selecci\\u00F3n de SAE:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p-fileUpload\", 6, 7);\n      i0.ɵɵlistener(\"onSelect\", function CargaSaeComponent_Template_p_fileUpload_onSelect_13_listener($event) {\n        i0.ɵɵrestoreView(_r13);\n\n        const _r0 = i0.ɵɵreference(14);\n\n        return i0.ɵɵresetView(ctx.onBasicUpload($event, _r0));\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(15, CargaSaeComponent_div_15_Template, 12, 10, \"div\", 8);\n      i0.ɵɵelementStart(16, \"div\", 1);\n      i0.ɵɵelement(17, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(10, _c3));\n      i0.ɵɵproperty(\"options\", ctx.companyOptions)(\"showClear\", true)(\"filter\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"customUpload\", true)(\"multiple\", true)(\"maxFileSize\", ctx.fileSizeMax)(\"disabled\", ctx.isLoadingFile || !ctx.selectedOption);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.uploaded);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.PrimeTemplate, i3.Button, i4.Toolbar, i5.FileUpload, i6.Toast, i7.Table, i8.Dropdown, i1.CurrencyPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXJnYS1zYWUuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["inject","XLSX","CieService","MessageService","SharedService","CieElementPost","EXCEL_EXTENSION","SUBJECTS","TITLES","cieHeaders","finalize","forkJoin","i0","CargaSaeComponent","constructor","ngOnInit","sharedService","cambiarEstado","cieService","getEmpresas","subscribe","data","companyOptions","map","empresa","name","chempresa","value","nukidempresa","toString","jsonFormateado","JSON","stringify","jsonData","onBasicUpload","event","fileUpload","isLoadingFile","uploaded","file","files","fileReader","FileReader","readAsBinaryString","currentFileName","onload","e","workBook","read","result","type","sheetName","SheetNames","excelData","utils","sheet_to_json","Sheets","tempNormalRecords","lastRecord","isMiddleDash","cuentaActual","record","i","row","length","Tipo","__EMPTY","Concepto","cuenta","split","cuentas","push","proyectos","Proyectos","nombre_cuenta","tipo_poliza","numero","Numero","fecha","Fecha","mes","concepto","centro_costos","_a","trim","saldo_inicial","debe","Debe","haber","Haber","movimiento","selectedOption","num_proyecto","tipo_proyecto","edo_resultados","responsable","tipo_cuenta","tipo_py","clasificacion_py","getInfoCuentas","Set","getInfoProyectos","pipe","infoCuentasR","infoProyectosR","forEach","cuentasEncontradas","Object","proyecto","proyectosEncontrados","normalRecord","keyProyecto","keyCuenta","noProyecto","numProyecto","cuentasFaltantes","obtenerNoProyecto","_b","_c","tipoProyecto","_d","tipoResultado","_e","tipoCuenta","_f","tipoPY","_g","clasificacionPY","clear","onChangeCompany","exportJsonToExcel","fileName","worksheet","json_to_sheet","workbook","sheet_add_json","origin","skipHeader","sheet_add_aoa","cieHeadersLocal","writeFile","Date","now","cargar","console","log","cargarSae","next","response","messageService","add","severity","summary","detail","error","err","copiarCuentasFaltantes","navigator","clipboard","writeText","join","then","success","catch","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\Bovis\\Front\\bovis-dev\\src\\app\\cie\\components\\carga-sae\\carga-sae.component.ts","F:\\Bovis\\Front\\bovis-dev\\src\\app\\cie\\components\\carga-sae\\carga-sae.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\r\nimport * as XLSX from 'xlsx';\r\nimport { CieService } from '../../services/cie.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { SharedService } from 'src/app/shared/services/shared.service';\r\nimport { CieElementPost, CieProyecto } from '../../models/cie.models';\r\nimport { EXCEL_EXTENSION, SUBJECTS, TITLES, cieHeaders } from 'src/utils/constants';\r\nimport { finalize, forkJoin } from 'rxjs';\r\n\r\ninterface Option {\r\n  name:   string,\r\n  value:  string,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-carga-sae',\r\n  templateUrl: './carga-sae.component.html',\r\n  styleUrls: ['./carga-sae.component.css'],\r\n  providers: [MessageService]\r\n})\r\nexport class CargaSaeComponent implements OnInit {\r\n\r\n  cieService      = inject(CieService)\r\n  messageService  = inject(MessageService)\r\n  sharedService   = inject(SharedService)\r\n\r\n  excelData:        any\r\n  jsonData:         CieElementPost[] = []\r\n  cieHeadersLocal:  string[] = cieHeaders\r\n\r\n  fileSizeMax: number = 10000000\r\n  isLoadingFile = false\r\n  companyOptions: Option[] = []\r\n  selectedOption: Option\r\n  uploaded = false\r\n  currentFileName: String = ''\r\n  cuentas: string[] = []\r\n  proyectos: string[] = []\r\n  cuentasFaltantes: number[] = []\r\n\r\n  proyectosEncontrados: any = {}\r\n  cuentasEncontradas: any = {}\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.sharedService.cambiarEstado(true)\r\n\r\n    this.cieService.getEmpresas().subscribe(({data}) => {\r\n      this.companyOptions = data.map(empresa => {\r\n        return {\r\n          name: empresa.chempresa,\r\n          value: empresa.nukidempresa.toString()\r\n        }\r\n      })\r\n\r\n      this.sharedService.cambiarEstado(false)\r\n    })\r\n  }\r\n\r\n  get jsonFormateado() {\r\n    return JSON.stringify(this.jsonData, null, 3)\r\n  }\r\n\r\n  async onBasicUpload(event: any, fileUpload: any) {\r\n    this.isLoadingFile = true\r\n    this.uploaded = false\r\n    this.jsonData = []\r\n\r\n    this.sharedService.cambiarEstado(true)\r\n    \r\n    const [ file ] = event.files\r\n    const fileReader = new FileReader()\r\n    fileReader.readAsBinaryString( file )\r\n\r\n    this.currentFileName = file.name\r\n\r\n    fileReader.onload = e => {\r\n      const workBook = XLSX.read( fileReader.result, { type: 'binary' } )\r\n      const [sheetName] = workBook.SheetNames\r\n      this.excelData = XLSX.utils.sheet_to_json( workBook.Sheets[sheetName] )\r\n      let tempNormalRecords: any[] = []\r\n      let lastRecord = false\r\n      let isMiddleDash = false\r\n      let cuentaActual = ''\r\n      // console.log(this.excelData)\r\n      this.excelData.map((record: any, i: number, row: any[]) => {\r\n        lastRecord = (i + 1) === row.length\r\n        isMiddleDash = record.Tipo === '-'\r\n        if(isMiddleDash || lastRecord) {\r\n          cuentaActual = record.__EMPTY\r\n        } else {\r\n          if(record.Concepto) {\r\n            const cuenta = cuentaActual.split(' ')[2]\r\n            this.cuentas.push(cuenta)\r\n            this.proyectos.push(record.Proyectos)\r\n            tempNormalRecords.push({\r\n              // ...record, \r\n              nombre_cuenta:      cuentaActual,\r\n              cuenta:             cuenta,\r\n              tipo_poliza:        record.__EMPTY,\r\n              numero:             +record.Numero,\r\n              fecha:              record.Fecha,\r\n              mes:                record.Fecha.split('/')[1],\r\n              concepto:           record.Concepto,\r\n              centro_costos:      record['Centro de costos']?.trim(),\r\n              proyectos:          record.Proyectos,\r\n              saldo_inicial:      record['Saldo inicial'],\r\n              debe:               record.Debe,\r\n              haber:              record.Haber,\r\n              movimiento:         record.Debe - record.Haber,\r\n              empresa:            this.selectedOption.name.trim(),\r\n              num_proyecto:       null, //record['Centro de costos'] ? +record['Centro de costos'].split('.')[0] : 0,\r\n              tipo_proyecto:      null,\r\n              edo_resultados:     null,\r\n              responsable:        null,\r\n              tipo_cuenta:        null,\r\n              tipo_py:            null,\r\n              clasificacion_py:   null\r\n            })\r\n          }\r\n        }\r\n      })\r\n      \r\n      forkJoin([\r\n        this.cieService.getInfoCuentas({data: [...new Set(this.cuentas)]}),\r\n        this.cieService.getInfoProyectos({data: [...new Set(this.proyectos)]})\r\n      ])\r\n      .pipe( finalize(() => this.sharedService.cambiarEstado(false)) )\r\n      .subscribe(([infoCuentasR, infoProyectosR]) => {\r\n\r\n        infoCuentasR.data.forEach(cuenta => this.cuentasEncontradas[cuenta.cuenta] = {...cuenta})\r\n\r\n        infoProyectosR.data.forEach(proyecto => this.proyectosEncontrados[proyecto.proyecto] = {...proyecto})\r\n        \r\n        this.jsonData = tempNormalRecords.map(normalRecord => {\r\n\r\n          const keyProyecto = normalRecord.proyectos\r\n          const keyCuenta = normalRecord.cuenta\r\n          const noProyecto = this.proyectosEncontrados[keyProyecto]?.numProyecto\r\n          // console.log(this.cuentasEncontradas[keyCuenta]);\r\n          if(!this.cuentasEncontradas[keyCuenta]) {\r\n            this.cuentasFaltantes.push(keyCuenta)\r\n          }\r\n          return {\r\n            ...normalRecord,\r\n            centro_costos:      normalRecord.centro_costos, //?.split('.')[0]\r\n            num_proyecto:       noProyecto ? this.obtenerNoProyecto(noProyecto) : null,\r\n            responsable:        this.proyectosEncontrados[keyProyecto]?.responsable || null,\r\n            tipo_cuenta:        this.proyectosEncontrados[keyProyecto]?.tipoProyecto || null,\r\n            edo_resultados:     this.cuentasEncontradas[keyCuenta]?.tipoResultado || null,\r\n            tipo_proyecto:      this.cuentasEncontradas[keyCuenta]?.tipoCuenta || null,\r\n            tipo_py:            this.cuentasEncontradas[keyCuenta]?.tipoPY || null,\r\n            clasificacion_py:   this.cuentasEncontradas[keyCuenta]?.clasificacionPY || null\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n    this.isLoadingFile = false\r\n    this.uploaded = true\r\n    \r\n    fileUpload.clear();\r\n  }\r\n\r\n  obtenerNoProyecto(noProyecto: number) {\r\n\r\n    let numero: number = null\r\n\r\n    switch(noProyecto) {\r\n      case 236: \r\n        numero = 110\r\n        break\r\n      case 261: \r\n        numero = 112\r\n        break\r\n      default:\r\n        numero = noProyecto\r\n    }\r\n    \r\n    return numero.toString()\r\n  }\r\n\r\n  onChangeCompany(event: any) {\r\n    this.selectedOption = event.value\r\n\r\n    this.uploaded = false\r\n  }\r\n\r\n  exportJsonToExcel(fileName: string = 'CIE'): void {\r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet( [] );\r\n\r\n    const workbook: XLSX.WorkBook = {\r\n      Sheets: { \r\n        'Detalle': worksheet \r\n      },\r\n      SheetNames: ['Detalle'],\r\n    };\r\n    XLSX.utils.sheet_add_json(worksheet, this.jsonData, { origin: 'A2', skipHeader: true })\r\n    XLSX.utils.sheet_add_aoa(worksheet, [this.cieHeadersLocal]);\r\n\r\n    // save to file\r\n    XLSX.writeFile(workbook, `${fileName + '_' + Date.now()}${EXCEL_EXTENSION}`);\r\n  }\r\n\r\n  cargar() {\r\n    this.sharedService.cambiarEstado(true)\r\n    console.log(this.jsonData)\r\n    // console.log(this.jsonData)\r\n    this.cieService.cargarSae(this.jsonData, this.currentFileName)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.sharedService.cambiarEstado(false)\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response) => {\r\n          this.messageService.add({severity: 'success', summary: 'SAE cargado', detail: 'El SAE ha sido cargado.'})\r\n        },\r\n        error: (err) => {\r\n          this.messageService.add({severity: 'error', summary: 'Oh no...', detail: err.error})\r\n        }\r\n      })\r\n  }\r\n\r\n  copiarCuentasFaltantes() {\r\n    if (navigator.clipboard) {\r\n      navigator.clipboard.writeText(this.cuentasFaltantes.join(','))\r\n        .then(() => {\r\n          this.messageService.add({severity: 'success', summary: TITLES.success, detail: 'Cuentas copiadas en la papelera.'})\r\n        })\r\n        .catch(err => {\r\n          this.messageService.add({severity: 'error', summary: TITLES.error, detail: SUBJECTS.error})\r\n        });\r\n    } else {\r\n      this.messageService.add({severity: 'error', summary: 'Oh no...', detail: 'Clipboard API no soportado.'})\r\n    }\r\n  }\r\n\r\n}\r\n","\r\n<p-toast></p-toast>\r\n\r\n<div class=\"main-container\">\r\n  \r\n  <h1>Carga SAE</h1>\r\n\r\n  <div class=\"grid\">\r\n    <!-- Campo de empresa -->\r\n    <div class=\"col\">\r\n      <label for=\"company\">Empresa:</label>\r\n      <br>\r\n      <p-dropdown \r\n        id=\"company\" \r\n        [options]=\"companyOptions\" \r\n        (onChange)=\"onChangeCompany($event)\"\r\n        placeholder=\"Seleccionar una empresa\" \r\n        optionLabel=\"name\" \r\n        [showClear]=\"true\"\r\n        [style]=\"{ width: '100%' }\"\r\n        [filter]=\"true\" \r\n        filterBy=\"name\"\r\n      ></p-dropdown>\r\n    </div>\r\n    <!-- Campo de xlsx -->\r\n    <div class=\"col\">\r\n      <label for=\"xlsxFile\">Selección de SAE:</label>\r\n      <p-fileUpload \r\n        id=\"xlsxFile\" \r\n        #fileUpload \r\n        mode=\"basic\" \r\n        [customUpload]=\"true\" \r\n        accept=\".xlsx\" \r\n        (onSelect)=\"onBasicUpload($event, fileUpload)\"\r\n        [multiple]=\"true\" \r\n        [maxFileSize]=\"fileSizeMax\" \r\n        chooseLabel=\"Cargar XLSX\" \r\n        [disabled]=\"isLoadingFile || !selectedOption\"\r\n      ></p-fileUpload>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"uploaded\" class=\"d-flex flex-column gap-2\">\r\n    <label><b>Archivo cargado:</b> {{currentFileName}}</label>\r\n    <p-toolbar styleClass=\"p-1 mb-2 d-flex justify-content-start gap-2\">\r\n        <p-button\r\n          label=\"Exportar Excel\"\r\n          icon=\"pi pi-file-excel\" \r\n          styleClass=\"p-button-success\" \r\n          (click)=\"exportJsonToExcel()\">\r\n        </p-button>\r\n        <p-button \r\n          label=\"Cargar\" \r\n          icon=\"pi pi-upload\"\r\n          styleClass=\"p-button-info\"\r\n          (onClick)=\"cargar()\"\r\n        ></p-button>\r\n        <p-button \r\n          label=\"Copiar Cuentas Faltantes\" \r\n          icon=\"pi pi-upload\"\r\n          styleClass=\"p-button-danger\"\r\n          (onClick)=\"copiarCuentasFaltantes()\"\r\n          *ngIf=\"cuentasFaltantes.length > 0\"\r\n        ></p-button>\r\n    </p-toolbar>\r\n    <p-table \r\n      [value]=\"jsonData\" \r\n      [tableStyle]=\"{ 'min-width': '50rem' }\"\r\n      [paginator]=\"true\"\r\n      [showCurrentPageReport]=\"true\"\r\n      currentPageReportTemplate=\"Mostrando del {first} al {last} de {totalRecords} registros\"\r\n      [rowsPerPageOptions]=\"[10, 25, 50]\"\r\n      [rows]=\"10\"\r\n    >\r\n      <ng-template pTemplate=\"header\">\r\n          <tr>\r\n              <th *ngFor=\"let header of cieHeadersLocal\">\r\n                {{header}}\r\n              </th>\r\n          </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-record>\r\n          <tr [ngClass]=\"{'invalid-tr': !record.edo_resultados}\">\r\n            <td>{{record.nombre_cuenta}}</td>\r\n            <td>{{record.cuenta}}</td>\r\n            <td>{{record.tipo_poliza}}</td>\r\n            <td>{{record.numero}}</td>\r\n            <td>{{record.fecha}}</td>\r\n            <td>{{record.mes}}</td>\r\n            <td>{{record.concepto}}</td>\r\n            <td>{{record.centro_costos}}</td>\r\n            <td>{{record.proyectos}}</td>\r\n            <td>{{record.saldo_inicial | currency}}</td>\r\n            <td>{{record.debe | currency}}</td>\r\n            <td>{{record.haber | currency}}</td>\r\n            <td>{{record.movimiento | currency}}</td>\r\n            <td>{{record.empresa}}</td>\r\n            <td>{{record.num_proyecto}}</td>\r\n            <td>{{record.tipo_proyecto}}</td>\r\n            <td>{{record.edo_resultados}}</td>\r\n            <td>{{record.responsable}}</td>\r\n            <td>{{record.tipo_cuenta}}</td>\r\n            <td>{{record.tipo_py}}</td>\r\n            <td>{{record.clasificacion_py}}</td>\r\n          </tr>\r\n      </ng-template>\r\n  </p-table>\r\n  </div>\r\n  \r\n  <div class=\"grid\">\r\n    <!-- Campo de empresa -->\r\n    <div class=\"col\">\r\n      <!-- <pre for=\"company\" style=\"background-color: rgb(219, 219, 219); color: rgb(164, 24, 24);\">{{jsonFormateado}}</pre> -->\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}