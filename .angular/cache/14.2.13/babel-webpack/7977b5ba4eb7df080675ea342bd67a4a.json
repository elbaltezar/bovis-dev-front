{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { __spread, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { KEY_FORMAT_JWK } from '../utils/BrowserConstants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar MsrBrowserCrypto =\n/** @class */\nfunction () {\n  function MsrBrowserCrypto() {}\n\n  MsrBrowserCrypto.prototype.initPrng = function (entropy) {\n    // Turn into array, as initPrng seems to not always like Uint8Array (even though it should support both)\n    return window.msrCrypto.initPrng(__spread(entropy));\n  };\n\n  MsrBrowserCrypto.prototype.getRandomValues = function (dataBuffer) {\n    return window.msrCrypto.getRandomValues(dataBuffer);\n  };\n\n  MsrBrowserCrypto.prototype.generateKey = function (algorithm, extractable, keyUsages) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , window.msrCrypto.subtle.generateKey(algorithm, extractable, keyUsages)];\n      });\n    });\n  };\n\n  MsrBrowserCrypto.prototype.exportKey = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , window.msrCrypto.subtle.exportKey(KEY_FORMAT_JWK, key)];\n      });\n    });\n  };\n\n  MsrBrowserCrypto.prototype.importKey = function (keyData, algorithm, extractable, keyUsages) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , window.msrCrypto.subtle.importKey(KEY_FORMAT_JWK, keyData, algorithm, extractable, keyUsages)];\n      });\n    });\n  };\n\n  MsrBrowserCrypto.prototype.sign = function (algorithm, key, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , window.msrCrypto.subtle.sign(algorithm, key, data)];\n      });\n    });\n  };\n\n  MsrBrowserCrypto.prototype.digest = function (algorithm, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , window.msrCrypto.subtle.digest(algorithm, data)];\n      });\n    });\n  };\n\n  return MsrBrowserCrypto;\n}();\n\nexport { MsrBrowserCrypto };","map":{"version":3,"names":["__spread","__awaiter","__generator","KEY_FORMAT_JWK","MsrBrowserCrypto","prototype","initPrng","entropy","window","msrCrypto","getRandomValues","dataBuffer","generateKey","algorithm","extractable","keyUsages","_a","subtle","exportKey","key","importKey","keyData","sign","data","digest"],"sources":["F:/Bovis/Front/bovis-dev/node_modules/@azure/msal-browser/dist/crypto/MsrBrowserCrypto.js"],"sourcesContent":["/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\nimport { __spread, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { KEY_FORMAT_JWK } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar MsrBrowserCrypto = /** @class */ (function () {\r\n    function MsrBrowserCrypto() {\r\n    }\r\n    MsrBrowserCrypto.prototype.initPrng = function (entropy) {\r\n        // Turn into array, as initPrng seems to not always like Uint8Array (even though it should support both)\r\n        return window.msrCrypto.initPrng(__spread(entropy));\r\n    };\r\n    MsrBrowserCrypto.prototype.getRandomValues = function (dataBuffer) {\r\n        return window.msrCrypto.getRandomValues(dataBuffer);\r\n    };\r\n    MsrBrowserCrypto.prototype.generateKey = function (algorithm, extractable, keyUsages) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.msrCrypto.subtle.generateKey(algorithm, extractable, keyUsages)];\r\n            });\r\n        });\r\n    };\r\n    MsrBrowserCrypto.prototype.exportKey = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.msrCrypto.subtle.exportKey(KEY_FORMAT_JWK, key)];\r\n            });\r\n        });\r\n    };\r\n    MsrBrowserCrypto.prototype.importKey = function (keyData, algorithm, extractable, keyUsages) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.msrCrypto.subtle.importKey(KEY_FORMAT_JWK, keyData, algorithm, extractable, keyUsages)];\r\n            });\r\n        });\r\n    };\r\n    MsrBrowserCrypto.prototype.sign = function (algorithm, key, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.msrCrypto.subtle.sign(algorithm, key, data)];\r\n            });\r\n        });\r\n    };\r\n    MsrBrowserCrypto.prototype.digest = function (algorithm, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.msrCrypto.subtle.digest(algorithm, data)];\r\n            });\r\n        });\r\n    };\r\n    return MsrBrowserCrypto;\r\n}());\n\nexport { MsrBrowserCrypto };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}